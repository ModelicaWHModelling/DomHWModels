// Translated Modelica model generated by Dymola from Modelica model 
//  WaterHeaterLib.Examples.WaterHeater


// -----------------------------------------------------------------------------

// Initial Section
  nSeg := 10;
  matLayExt.nLay := 2;
  matLayTanBot.nLay := 1;
  matLayFlue.nLay := 1;
  burn.datTanEnvBot.layers.nLay := 1;
  burn.datTanEnvBot.nLay := 1;
  burn.datTanEnv.layers.nLay := 2;
  burn.datTanEnv.nLay := 2;
  tan.nSeg := 10;
  tan.energyDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.massDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.flueWall[1].layers.nLay := 1;
  tan.flueWall[1].nLay := 1;
  tan.flueWall[1].opa.layers.nLay := 1;
  tan.flueWall[1].opa.nLay := 1;
  tan.flueWall[2].layers.nLay := 1;
  tan.flueWall[2].nLay := 1;
  tan.flueWall[2].opa.layers.nLay := 1;
  tan.flueWall[2].opa.nLay := 1;
  tan.flueWall[3].layers.nLay := 1;
  tan.flueWall[3].nLay := 1;
  tan.flueWall[3].opa.layers.nLay := 1;
  tan.flueWall[3].opa.nLay := 1;
  tan.flueWall[4].layers.nLay := 1;
  tan.flueWall[4].nLay := 1;
  tan.flueWall[4].opa.layers.nLay := 1;
  tan.flueWall[4].opa.nLay := 1;
  tan.flueWall[5].layers.nLay := 1;
  tan.flueWall[5].nLay := 1;
  tan.flueWall[5].opa.layers.nLay := 1;
  tan.flueWall[5].opa.nLay := 1;
  tan.flueWall[6].layers.nLay := 1;
  tan.flueWall[6].nLay := 1;
  tan.flueWall[6].opa.layers.nLay := 1;
  tan.flueWall[6].opa.nLay := 1;
  tan.flueWall[7].layers.nLay := 1;
  tan.flueWall[7].nLay := 1;
  tan.flueWall[7].opa.layers.nLay := 1;
  tan.flueWall[7].opa.nLay := 1;
  tan.flueWall[8].layers.nLay := 1;
  tan.flueWall[8].nLay := 1;
  tan.flueWall[8].opa.layers.nLay := 1;
  tan.flueWall[8].opa.nLay := 1;
  tan.flueWall[9].layers.nLay := 1;
  tan.flueWall[9].nLay := 1;
  tan.flueWall[9].opa.layers.nLay := 1;
  tan.flueWall[9].opa.nLay := 1;
  tan.flueWall[10].layers.nLay := 1;
  tan.flueWall[10].nLay := 1;
  tan.flueWall[10].opa.layers.nLay := 1;
  tan.flueWall[10].opa.nLay := 1;
  tan.conExt[1].layers.nLay := 2;
  tan.conExt[1].nLay := 2;
  tan.conExt[1].opa.layers.nLay := 2;
  tan.conExt[1].opa.nLay := 2;
  tan.conExt[2].layers.nLay := 2;
  tan.conExt[2].nLay := 2;
  tan.conExt[2].opa.layers.nLay := 2;
  tan.conExt[2].opa.nLay := 2;
  tan.conExt[3].layers.nLay := 2;
  tan.conExt[3].nLay := 2;
  tan.conExt[3].opa.layers.nLay := 2;
  tan.conExt[3].opa.nLay := 2;
  tan.conExt[4].layers.nLay := 2;
  tan.conExt[4].nLay := 2;
  tan.conExt[4].opa.layers.nLay := 2;
  tan.conExt[4].opa.nLay := 2;
  tan.conExt[5].layers.nLay := 2;
  tan.conExt[5].nLay := 2;
  tan.conExt[5].opa.layers.nLay := 2;
  tan.conExt[5].opa.nLay := 2;
  tan.conExt[6].layers.nLay := 2;
  tan.conExt[6].nLay := 2;
  tan.conExt[6].opa.layers.nLay := 2;
  tan.conExt[6].opa.nLay := 2;
  tan.conExt[7].layers.nLay := 2;
  tan.conExt[7].nLay := 2;
  tan.conExt[7].opa.layers.nLay := 2;
  tan.conExt[7].opa.nLay := 2;
  tan.conExt[8].layers.nLay := 2;
  tan.conExt[8].nLay := 2;
  tan.conExt[8].opa.layers.nLay := 2;
  tan.conExt[8].opa.nLay := 2;
  tan.conExt[9].layers.nLay := 2;
  tan.conExt[9].nLay := 2;
  tan.conExt[9].opa.layers.nLay := 2;
  tan.conExt[9].opa.nLay := 2;
  tan.conExt[10].layers.nLay := 2;
  tan.conExt[10].nLay := 2;
  tan.conExt[10].opa.layers.nLay := 2;
  tan.conExt[10].opa.nLay := 2;
  tan.vol[1].energyDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[1].massDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[1].nPorts := 0;
  tan.vol[1].useSteadyStateTwoPort := false;
  tan.vol[2].energyDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[2].massDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[2].nPorts := 0;
  tan.vol[2].useSteadyStateTwoPort := false;
  tan.vol[3].energyDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[3].massDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[3].nPorts := 0;
  tan.vol[3].useSteadyStateTwoPort := false;
  tan.vol[4].energyDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[4].massDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[4].nPorts := 0;
  tan.vol[4].useSteadyStateTwoPort := false;
  tan.vol[5].energyDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[5].massDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[5].nPorts := 0;
  tan.vol[5].useSteadyStateTwoPort := false;
  tan.vol[6].energyDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[6].massDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[6].nPorts := 0;
  tan.vol[6].useSteadyStateTwoPort := false;
  tan.vol[7].energyDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[7].massDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[7].nPorts := 0;
  tan.vol[7].useSteadyStateTwoPort := false;
  tan.vol[8].energyDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[8].massDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[8].nPorts := 0;
  tan.vol[8].useSteadyStateTwoPort := false;
  tan.vol[9].energyDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[9].massDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[9].nPorts := 0;
  tan.vol[9].useSteadyStateTwoPort := false;
  tan.vol[10].energyDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[10].massDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[10].nPorts := 0;
  tan.vol[10].useSteadyStateTwoPort := false;
  tan.nPorts := 2;
  tan.datFlueWall.layers.nLay := 1;
  tan.datFlueWall.nLay := 1;
  tan.datTanEnv.layers.nLay := 2;
  tan.datTanEnv.nLay := 2;
  tan.conOpa.layers.nLay := 2;
  tan.conOpa.nLay := 2;
  tan.conOpa.opa.layers.nLay := 2;
  tan.conOpa.opa.nLay := 2;
  tan.datTanEnvTop.layers.nLay := 2;
  tan.datTanEnvTop.nLay := 2;
  tan.conOpa3.layers.nLay := 1;
  tan.conOpa3.nLay := 1;
  tan.conOpa3.opa.layers.nLay := 1;
  tan.conOpa3.opa.nLay := 1;
  tan.datTanEnvBot.layers.nLay := 1;
  tan.datTanEnvBot.nLay := 1;
  tan.draHeaTra.nSeg := 10;
  tan.convConBou9[1].dT0 := 2;
  tan.convConBou9[2].dT0 := 2;
  tan.convConBou9[3].dT0 := 2;
  tan.convConBou9[4].dT0 := 2;
  tan.convConBou9[5].dT0 := 2;
  tan.convConBou9[6].dT0 := 2;
  tan.convConBou9[7].dT0 := 2;
  tan.convConBou9[8].dT0 := 2;
  tan.convConBou9[9].dT0 := 2;
  tan.convConBou9[10].dT0 := 2;
  tan.theCol.m := 10;
  tan.replicator1.nout := 10;
  tan.convConBou10.dT0 := 2;
  tan.buoHeaTra.nSeg := 10;
  tan.buoHeaTra.buoMasIn.nSeg := 10;
  tan.buoHeaTra.mDCal1.nSeg := 10;
  tan.buoHeaTra.dH_BU.nSeg := 10;
  tan.buoHeaTra.qBuo.nSeg := 10;
  tan.vol[1].dynBal.energyDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[1].dynBal.massDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[1].dynBal.substanceDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[1].dynBal.nPorts := 0;
  _GlobalScope.Modelica.Media.Interfaces.PartialPureSubstance.X_default[1] := 
    1.0;
  tan.vol[1].dynBal.medium.preferredMediumStates := true;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].molarMass := 0.018015268;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].criticalTemperature := 
    647.096;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].criticalPressure := 
    22064000.0;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].criticalMolarVolume := 
    5.59480372670807E-005;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].acentricFactor := 0.344;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].triplePointTemperature := 
    273.16;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].triplePointPressure := 
    611.657;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].meltingPoint := 273.15;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].normalBoilingPoint := 
    373.124;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].dipoleMoment := 1.8;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].hasIdealGasHeatCapacity
     := false;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].hasCriticalData := true;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].hasDipoleMoment := false;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].hasFundamentalEquation := 
    false;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].hasLiquidHeatCapacity := 
    false;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].hasSolidHeatCapacity := 
    false;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].hasAccurateViscosityData
     := false;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].hasAccurateConductivityData
     := false;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].hasVapourPressureCurve := 
    false;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].hasAcentricFactor := false;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].HCRIT0 := 0.0;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].SCRIT0 := 0.0;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].deltah := 0.0;
  _GlobalScope.Modelica.Media.Water.waterConstants[1].deltas := 0.0;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].molarMass
     := 0.018015268;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].criticalTemperature
     := 647.096;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].criticalPressure
     := 22064000.0;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].criticalMolarVolume
     := 5.59480372670807E-005;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].acentricFactor
     := 0.344;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].triplePointTemperature
     := 273.16;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].triplePointPressure
     := 611.657;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].meltingPoint
     := 273.15;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].normalBoilingPoint
     := 373.124;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].dipoleMoment
     := 1.8;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasIdealGasHeatCapacity
     := false;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasCriticalData
     := true;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasDipoleMoment
     := false;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasFundamentalEquation
     := false;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasLiquidHeatCapacity
     := false;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasSolidHeatCapacity
     := false;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasAccurateViscosityData
     := false;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasAccurateConductivityData
     := false;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasVapourPressureCurve
     := false;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].hasAcentricFactor
     := false;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].HCRIT0 := 
    0.0;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].SCRIT0 := 
    0.0;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].deltah := 
    0.0;
  _GlobalScope.Modelica.Media.Water.WaterIF97_base.fluidConstants[1].deltas := 
    0.0;
  tan.vol[2].dynBal.energyDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[2].dynBal.massDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[2].dynBal.substanceDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[2].dynBal.nPorts := 0;
  tan.vol[2].dynBal.medium.preferredMediumStates := true;
  tan.vol[3].dynBal.energyDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[3].dynBal.massDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[3].dynBal.substanceDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[3].dynBal.nPorts := 0;
  tan.vol[3].dynBal.medium.preferredMediumStates := true;
  tan.vol[4].dynBal.energyDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[4].dynBal.massDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[4].dynBal.substanceDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[4].dynBal.nPorts := 0;
  tan.vol[4].dynBal.medium.preferredMediumStates := true;
  tan.vol[5].dynBal.energyDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[5].dynBal.massDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[5].dynBal.substanceDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[5].dynBal.nPorts := 0;
  tan.vol[5].dynBal.medium.preferredMediumStates := true;
  tan.vol[6].dynBal.energyDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[6].dynBal.massDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[6].dynBal.substanceDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[6].dynBal.nPorts := 0;
  tan.vol[6].dynBal.medium.preferredMediumStates := true;
  tan.vol[7].dynBal.energyDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[7].dynBal.massDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[7].dynBal.substanceDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[7].dynBal.nPorts := 0;
  tan.vol[7].dynBal.medium.preferredMediumStates := true;
  tan.vol[8].dynBal.energyDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[8].dynBal.massDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[8].dynBal.substanceDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[8].dynBal.nPorts := 0;
  tan.vol[8].dynBal.medium.preferredMediumStates := true;
  tan.vol[9].dynBal.energyDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[9].dynBal.massDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[9].dynBal.substanceDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[9].dynBal.nPorts := 0;
  tan.vol[9].dynBal.medium.preferredMediumStates := true;
  tan.vol[10].dynBal.energyDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[10].dynBal.massDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[10].dynBal.substanceDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[10].dynBal.nPorts := 0;
  tan.vol[10].dynBal.medium.preferredMediumStates := true;
  nStaRef := 6;
  matLayExt.absIR_a := 0.9;
  matLayExt.absIR_b := 0.9;
  matLayExt.absSol_a := 0.6;
  matLayExt.absSol_b := 0.6;
  matLayExt.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.Medium;
  matLayTanBot.absIR_a := 0.9;
  matLayTanBot.absIR_b := 0.9;
  matLayTanBot.absSol_a := 0.6;
  matLayTanBot.absSol_b := 0.6;
  matLayTanBot.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  matLayFlue.absIR_a := 0.9;
  matLayFlue.absIR_b := 0.9;
  matLayFlue.absSol_a := 0.6;
  matLayFlue.absSol_b := 0.6;
  matLayFlue.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.Medium;
  burn.datTanEnvBot.til := 3.14159265358979;
  burn.datTanEnv.til := 1.5707963267949;
  tan.conMod := Buildings.HeatTransfer.Types.InteriorConvection.Temperature;
  tan.p_start := 101325;
  tan.T_start := 293.15;
  tan.datFlueWall.til := 1.5707963267949;
  tan.datTanEnv.til := 1.5707963267949;
  tan.datTanEnvTop.til := 0;
  tan.datTanEnvBot.til := 3.14159265358979;
  system.allowFlowReversal := true;
  system.energyDynamics := Modelica.Fluid.Types.Dynamics.FixedInitial;
  system.massDynamics := Modelica.Fluid.Types.Dynamics.FixedInitial;
  system.substanceDynamics := Modelica.Fluid.Types.Dynamics.FixedInitial;
  system.traceDynamics := Modelica.Fluid.Types.Dynamics.FixedInitial;
  system.momentumDynamics := Modelica.Fluid.Types.Dynamics.SteadyState;
  matLayExt.material[1].x := 0.012;
  matLayExt.material[1].k := 4.671;
  matLayExt.material[1].c := 473;
  matLayExt.material[1].d := 7801;
  matLayExt.material[1].R := 0.00256904303147078;
  matLayExt.material[1].nStaRef := 6;
  matLayExt.material[1].nSta := 1;
  matLayExt.material[1].steadyState := false;
  matLayExt.material[1].piRef := 331.4;
  matLayExt.material[1].piMat := 10.6655196878514;
  matLayExt.material[1].nStaReal := 0.193099330498215;
  matLayExt.material[2].x := 0.002;
  matLayExt.material[2].k := 0.04;
  matLayExt.material[2].c := 1380;
  matLayExt.material[2].d := 150;
  matLayExt.material[2].R := 0.05;
  matLayExt.material[2].nStaRef := 6;
  matLayExt.material[2].nSta := 1;
  matLayExt.material[2].steadyState := false;
  matLayExt.material[2].piRef := 331.4;
  matLayExt.material[2].piMat := 4.54972526643093;
  matLayExt.material[2].nStaReal := 0.0823728171351406;
  matLayExt.R := 0.0525690430314708;
  matLayTanBot.material[1].x := 0.003176;
  matLayTanBot.material[1].k := 4.671;
  matLayTanBot.material[1].c := 473;
  matLayTanBot.material[1].d := 7801;
  matLayTanBot.material[1].R := 0.000679940055662599;
  matLayTanBot.material[1].nStaRef := 6;
  matLayTanBot.material[1].nSta := 1;
  matLayTanBot.material[1].steadyState := false;
  matLayTanBot.material[1].piRef := 331.4;
  matLayTanBot.material[1].piMat := 2.82280754405134;
  matLayTanBot.material[1].nStaReal := 0.0511069561385276;
  matLayTanBot.R := 0.000679940055662599;
  matLayFlue.material[1].x := 0.000753;
  matLayFlue.material[1].k := 4.671;
  matLayFlue.material[1].c := 473;
  matLayFlue.material[1].d := 7801;
  matLayFlue.material[1].R := 0.000161207450224791;
  matLayFlue.material[1].nStaRef := 6;
  matLayFlue.material[1].nSta := 1;
  matLayFlue.material[1].steadyState := false;
  matLayFlue.material[1].piRef := 331.4;
  matLayFlue.material[1].piMat := 0.669261360412676;
  matLayFlue.material[1].nStaReal := 0.012116982988763;
  matLayFlue.R := 0.000161207450224791;
  burn.datTanEnvBot.layers.R := 0.000679940055662599;
  burn.datTanEnvBot.layers.absIR_a := 0.9;
  burn.datTanEnvBot.layers.absIR_b := 0.9;
  burn.datTanEnvBot.layers.absSol_a := 0.6;
  burn.datTanEnvBot.layers.absSol_b := 0.6;
  burn.datTanEnvBot.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  burn.datTanEnvBot.isFloor := true;
  burn.datTanEnvBot.isCeiling := false;
  burn.datTanEnvBot.layers.material[1].nSta := 1;
  burn.datTanEnvBot.nSta[1] := 1;
  burn.datTanEnvBot.steadyStateInitial := false;
  burn.convConBou7.til := 3.14159265358979;
  burn.convConBou7.cosTil := -1.0;
  burn.convConBou7.sinTil := 1.22464679914735E-016;
  burn.convConBou7.isCeiling := false;
  burn.convConBou7.isFloor := true;
  burn.convConBou7.conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  burn.datTanEnv.layers.R := 0.0525690430314708;
  burn.datTanEnv.layers.absIR_a := 0.9;
  burn.datTanEnv.layers.absIR_b := 0.9;
  burn.datTanEnv.layers.absSol_a := 0.6;
  burn.datTanEnv.layers.absSol_b := 0.6;
  burn.datTanEnv.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  burn.datTanEnv.isFloor := false;
  burn.datTanEnv.isCeiling := false;
  burn.datTanEnv.layers.material[1].nSta := 1;
  burn.datTanEnv.nSta[1] := 1;
  burn.datTanEnv.layers.material[2].nSta := 1;
  burn.datTanEnv.nSta[2] := 1;
  burn.datTanEnv.steadyStateInitial := false;
  tan.allowFlowReversal := false;
  tan.datFlueWall.layers.R := 0.000161207450224791;
  tan.flueWall[1].layers.R := 0.000161207450224791;
  tan.datFlueWall.layers.absIR_a := 0.9;
  tan.flueWall[1].layers.absIR_a := 0.9;
  tan.datFlueWall.layers.absIR_b := 0.9;
  tan.flueWall[1].layers.absIR_b := 0.9;
  tan.datFlueWall.layers.absSol_a := 0.6;
  tan.flueWall[1].layers.absSol_a := 0.6;
  tan.datFlueWall.layers.absSol_b := 0.6;
  tan.flueWall[1].layers.absSol_b := 0.6;
  tan.datFlueWall.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.flueWall[1].layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.flueWall[1].til := 1.5707963267949;
  tan.flueWall[1].isFloor := false;
  tan.flueWall[1].isCeiling := false;
  tan.datFlueWall.layers.material[1].nSta := 1;
  tan.flueWall[1].layers.material[1].nSta := 1;
  tan.flueWall[1].nSta[1] := 1;
  tan.datFlueWall.steadyStateInitial := false;
  tan.flueWall[1].steadyStateInitial := false;
  tan.datFlueWall.layers.material[1].R := 0.000161207450224791;
  tan.flueWall[1].layers.material[1].R := 0.000161207450224791;
  tan.flueWall[1].opa.layers.material[1].R := 0.000161207450224791;
  tan.flueWall[1].opa.lay[1].material.R := 0.000161207450224791;
  tan.datFlueWall.layers.material[1].x := 0.000753;
  tan.flueWall[1].layers.material[1].x := 0.000753;
  tan.flueWall[1].opa.layers.material[1].x := 0.000753;
  tan.flueWall[1].opa.lay[1].material.x := 0.000753;
  tan.datFlueWall.layers.material[1].k := 4.671;
  tan.flueWall[1].layers.material[1].k := 4.671;
  tan.flueWall[1].opa.layers.material[1].k := 4.671;
  tan.flueWall[1].opa.lay[1].material.k := 4.671;
  tan.flueWall[1].opa.layers.R := 0.000161207450224791;
  tan.flueWall[1].opa.layers.absIR_a := 0.9;
  tan.flueWall[1].opa.layers.absIR_b := 0.9;
  tan.flueWall[1].opa.layers.absSol_a := 0.6;
  tan.flueWall[1].opa.layers.absSol_b := 0.6;
  tan.flueWall[1].opa.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.flueWall[1].opa.layers.material[1].nSta := 1;
  tan.flueWall[1].opa.nSta[1] := 1;
  tan.flueWall[1].opa.steadyStateInitial := false;
  tan.flueWall[2].layers.R := 0.000161207450224791;
  tan.flueWall[2].layers.absIR_a := 0.9;
  tan.flueWall[2].layers.absIR_b := 0.9;
  tan.flueWall[2].layers.absSol_a := 0.6;
  tan.flueWall[2].layers.absSol_b := 0.6;
  tan.flueWall[2].layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.flueWall[2].til := 1.5707963267949;
  tan.flueWall[2].isFloor := false;
  tan.flueWall[2].isCeiling := false;
  tan.flueWall[2].layers.material[1].nSta := 1;
  tan.flueWall[2].nSta[1] := 1;
  tan.flueWall[2].steadyStateInitial := false;
  tan.flueWall[2].layers.material[1].R := 0.000161207450224791;
  tan.flueWall[2].opa.layers.material[1].R := 0.000161207450224791;
  tan.flueWall[2].opa.lay[1].material.R := 0.000161207450224791;
  tan.flueWall[2].layers.material[1].x := 0.000753;
  tan.flueWall[2].opa.layers.material[1].x := 0.000753;
  tan.flueWall[2].opa.lay[1].material.x := 0.000753;
  tan.flueWall[2].layers.material[1].k := 4.671;
  tan.flueWall[2].opa.layers.material[1].k := 4.671;
  tan.flueWall[2].opa.lay[1].material.k := 4.671;
  tan.flueWall[2].opa.layers.R := 0.000161207450224791;
  tan.flueWall[2].opa.layers.absIR_a := 0.9;
  tan.flueWall[2].opa.layers.absIR_b := 0.9;
  tan.flueWall[2].opa.layers.absSol_a := 0.6;
  tan.flueWall[2].opa.layers.absSol_b := 0.6;
  tan.flueWall[2].opa.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.flueWall[2].opa.layers.material[1].nSta := 1;
  tan.flueWall[2].opa.nSta[1] := 1;
  tan.flueWall[2].opa.steadyStateInitial := false;
  tan.flueWall[3].layers.R := 0.000161207450224791;
  tan.flueWall[3].layers.absIR_a := 0.9;
  tan.flueWall[3].layers.absIR_b := 0.9;
  tan.flueWall[3].layers.absSol_a := 0.6;
  tan.flueWall[3].layers.absSol_b := 0.6;
  tan.flueWall[3].layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.flueWall[3].til := 1.5707963267949;
  tan.flueWall[3].isFloor := false;
  tan.flueWall[3].isCeiling := false;
  tan.flueWall[3].layers.material[1].nSta := 1;
  tan.flueWall[3].nSta[1] := 1;
  tan.flueWall[3].steadyStateInitial := false;
  tan.flueWall[3].layers.material[1].R := 0.000161207450224791;
  tan.flueWall[3].opa.layers.material[1].R := 0.000161207450224791;
  tan.flueWall[3].opa.lay[1].material.R := 0.000161207450224791;
  tan.flueWall[3].layers.material[1].x := 0.000753;
  tan.flueWall[3].opa.layers.material[1].x := 0.000753;
  tan.flueWall[3].opa.lay[1].material.x := 0.000753;
  tan.flueWall[3].layers.material[1].k := 4.671;
  tan.flueWall[3].opa.layers.material[1].k := 4.671;
  tan.flueWall[3].opa.lay[1].material.k := 4.671;
  tan.flueWall[3].opa.layers.R := 0.000161207450224791;
  tan.flueWall[3].opa.layers.absIR_a := 0.9;
  tan.flueWall[3].opa.layers.absIR_b := 0.9;
  tan.flueWall[3].opa.layers.absSol_a := 0.6;
  tan.flueWall[3].opa.layers.absSol_b := 0.6;
  tan.flueWall[3].opa.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.flueWall[3].opa.layers.material[1].nSta := 1;
  tan.flueWall[3].opa.nSta[1] := 1;
  tan.flueWall[3].opa.steadyStateInitial := false;
  tan.flueWall[4].layers.R := 0.000161207450224791;
  tan.flueWall[4].layers.absIR_a := 0.9;
  tan.flueWall[4].layers.absIR_b := 0.9;
  tan.flueWall[4].layers.absSol_a := 0.6;
  tan.flueWall[4].layers.absSol_b := 0.6;
  tan.flueWall[4].layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.flueWall[4].til := 1.5707963267949;
  tan.flueWall[4].isFloor := false;
  tan.flueWall[4].isCeiling := false;
  tan.flueWall[4].layers.material[1].nSta := 1;
  tan.flueWall[4].nSta[1] := 1;
  tan.flueWall[4].steadyStateInitial := false;
  tan.flueWall[4].layers.material[1].R := 0.000161207450224791;
  tan.flueWall[4].opa.layers.material[1].R := 0.000161207450224791;
  tan.flueWall[4].opa.lay[1].material.R := 0.000161207450224791;
  tan.flueWall[4].layers.material[1].x := 0.000753;
  tan.flueWall[4].opa.layers.material[1].x := 0.000753;
  tan.flueWall[4].opa.lay[1].material.x := 0.000753;
  tan.flueWall[4].layers.material[1].k := 4.671;
  tan.flueWall[4].opa.layers.material[1].k := 4.671;
  tan.flueWall[4].opa.lay[1].material.k := 4.671;
  tan.flueWall[4].opa.layers.R := 0.000161207450224791;
  tan.flueWall[4].opa.layers.absIR_a := 0.9;
  tan.flueWall[4].opa.layers.absIR_b := 0.9;
  tan.flueWall[4].opa.layers.absSol_a := 0.6;
  tan.flueWall[4].opa.layers.absSol_b := 0.6;
  tan.flueWall[4].opa.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.flueWall[4].opa.layers.material[1].nSta := 1;
  tan.flueWall[4].opa.nSta[1] := 1;
  tan.flueWall[4].opa.steadyStateInitial := false;
  tan.flueWall[5].layers.R := 0.000161207450224791;
  tan.flueWall[5].layers.absIR_a := 0.9;
  tan.flueWall[5].layers.absIR_b := 0.9;
  tan.flueWall[5].layers.absSol_a := 0.6;
  tan.flueWall[5].layers.absSol_b := 0.6;
  tan.flueWall[5].layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.flueWall[5].til := 1.5707963267949;
  tan.flueWall[5].isFloor := false;
  tan.flueWall[5].isCeiling := false;
  tan.flueWall[5].layers.material[1].nSta := 1;
  tan.flueWall[5].nSta[1] := 1;
  tan.flueWall[5].steadyStateInitial := false;
  tan.flueWall[5].layers.material[1].R := 0.000161207450224791;
  tan.flueWall[5].opa.layers.material[1].R := 0.000161207450224791;
  tan.flueWall[5].opa.lay[1].material.R := 0.000161207450224791;
  tan.flueWall[5].layers.material[1].x := 0.000753;
  tan.flueWall[5].opa.layers.material[1].x := 0.000753;
  tan.flueWall[5].opa.lay[1].material.x := 0.000753;
  tan.flueWall[5].layers.material[1].k := 4.671;
  tan.flueWall[5].opa.layers.material[1].k := 4.671;
  tan.flueWall[5].opa.lay[1].material.k := 4.671;
  tan.flueWall[5].opa.layers.R := 0.000161207450224791;
  tan.flueWall[5].opa.layers.absIR_a := 0.9;
  tan.flueWall[5].opa.layers.absIR_b := 0.9;
  tan.flueWall[5].opa.layers.absSol_a := 0.6;
  tan.flueWall[5].opa.layers.absSol_b := 0.6;
  tan.flueWall[5].opa.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.flueWall[5].opa.layers.material[1].nSta := 1;
  tan.flueWall[5].opa.nSta[1] := 1;
  tan.flueWall[5].opa.steadyStateInitial := false;
  tan.flueWall[6].layers.R := 0.000161207450224791;
  tan.flueWall[6].layers.absIR_a := 0.9;
  tan.flueWall[6].layers.absIR_b := 0.9;
  tan.flueWall[6].layers.absSol_a := 0.6;
  tan.flueWall[6].layers.absSol_b := 0.6;
  tan.flueWall[6].layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.flueWall[6].til := 1.5707963267949;
  tan.flueWall[6].isFloor := false;
  tan.flueWall[6].isCeiling := false;
  tan.flueWall[6].layers.material[1].nSta := 1;
  tan.flueWall[6].nSta[1] := 1;
  tan.flueWall[6].steadyStateInitial := false;
  tan.flueWall[6].layers.material[1].R := 0.000161207450224791;
  tan.flueWall[6].opa.layers.material[1].R := 0.000161207450224791;
  tan.flueWall[6].opa.lay[1].material.R := 0.000161207450224791;
  tan.flueWall[6].layers.material[1].x := 0.000753;
  tan.flueWall[6].opa.layers.material[1].x := 0.000753;
  tan.flueWall[6].opa.lay[1].material.x := 0.000753;
  tan.flueWall[6].layers.material[1].k := 4.671;
  tan.flueWall[6].opa.layers.material[1].k := 4.671;
  tan.flueWall[6].opa.lay[1].material.k := 4.671;
  tan.flueWall[6].opa.layers.R := 0.000161207450224791;
  tan.flueWall[6].opa.layers.absIR_a := 0.9;
  tan.flueWall[6].opa.layers.absIR_b := 0.9;
  tan.flueWall[6].opa.layers.absSol_a := 0.6;
  tan.flueWall[6].opa.layers.absSol_b := 0.6;
  tan.flueWall[6].opa.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.flueWall[6].opa.layers.material[1].nSta := 1;
  tan.flueWall[6].opa.nSta[1] := 1;
  tan.flueWall[6].opa.steadyStateInitial := false;
  tan.flueWall[7].layers.R := 0.000161207450224791;
  tan.flueWall[7].layers.absIR_a := 0.9;
  tan.flueWall[7].layers.absIR_b := 0.9;
  tan.flueWall[7].layers.absSol_a := 0.6;
  tan.flueWall[7].layers.absSol_b := 0.6;
  tan.flueWall[7].layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.flueWall[7].til := 1.5707963267949;
  tan.flueWall[7].isFloor := false;
  tan.flueWall[7].isCeiling := false;
  tan.flueWall[7].layers.material[1].nSta := 1;
  tan.flueWall[7].nSta[1] := 1;
  tan.flueWall[7].steadyStateInitial := false;
  tan.flueWall[7].layers.material[1].R := 0.000161207450224791;
  tan.flueWall[7].opa.layers.material[1].R := 0.000161207450224791;
  tan.flueWall[7].opa.lay[1].material.R := 0.000161207450224791;
  tan.flueWall[7].layers.material[1].x := 0.000753;
  tan.flueWall[7].opa.layers.material[1].x := 0.000753;
  tan.flueWall[7].opa.lay[1].material.x := 0.000753;
  tan.flueWall[7].layers.material[1].k := 4.671;
  tan.flueWall[7].opa.layers.material[1].k := 4.671;
  tan.flueWall[7].opa.lay[1].material.k := 4.671;
  tan.flueWall[7].opa.layers.R := 0.000161207450224791;
  tan.flueWall[7].opa.layers.absIR_a := 0.9;
  tan.flueWall[7].opa.layers.absIR_b := 0.9;
  tan.flueWall[7].opa.layers.absSol_a := 0.6;
  tan.flueWall[7].opa.layers.absSol_b := 0.6;
  tan.flueWall[7].opa.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.flueWall[7].opa.layers.material[1].nSta := 1;
  tan.flueWall[7].opa.nSta[1] := 1;
  tan.flueWall[7].opa.steadyStateInitial := false;
  tan.flueWall[8].layers.R := 0.000161207450224791;
  tan.flueWall[8].layers.absIR_a := 0.9;
  tan.flueWall[8].layers.absIR_b := 0.9;
  tan.flueWall[8].layers.absSol_a := 0.6;
  tan.flueWall[8].layers.absSol_b := 0.6;
  tan.flueWall[8].layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.flueWall[8].til := 1.5707963267949;
  tan.flueWall[8].isFloor := false;
  tan.flueWall[8].isCeiling := false;
  tan.flueWall[8].layers.material[1].nSta := 1;
  tan.flueWall[8].nSta[1] := 1;
  tan.flueWall[8].steadyStateInitial := false;
  tan.flueWall[8].layers.material[1].R := 0.000161207450224791;
  tan.flueWall[8].opa.layers.material[1].R := 0.000161207450224791;
  tan.flueWall[8].opa.lay[1].material.R := 0.000161207450224791;
  tan.flueWall[8].layers.material[1].x := 0.000753;
  tan.flueWall[8].opa.layers.material[1].x := 0.000753;
  tan.flueWall[8].opa.lay[1].material.x := 0.000753;
  tan.flueWall[8].layers.material[1].k := 4.671;
  tan.flueWall[8].opa.layers.material[1].k := 4.671;
  tan.flueWall[8].opa.lay[1].material.k := 4.671;
  tan.flueWall[8].opa.layers.R := 0.000161207450224791;
  tan.flueWall[8].opa.layers.absIR_a := 0.9;
  tan.flueWall[8].opa.layers.absIR_b := 0.9;
  tan.flueWall[8].opa.layers.absSol_a := 0.6;
  tan.flueWall[8].opa.layers.absSol_b := 0.6;
  tan.flueWall[8].opa.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.flueWall[8].opa.layers.material[1].nSta := 1;
  tan.flueWall[8].opa.nSta[1] := 1;
  tan.flueWall[8].opa.steadyStateInitial := false;
  tan.flueWall[9].layers.R := 0.000161207450224791;
  tan.flueWall[9].layers.absIR_a := 0.9;
  tan.flueWall[9].layers.absIR_b := 0.9;
  tan.flueWall[9].layers.absSol_a := 0.6;
  tan.flueWall[9].layers.absSol_b := 0.6;
  tan.flueWall[9].layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.flueWall[9].til := 1.5707963267949;
  tan.flueWall[9].isFloor := false;
  tan.flueWall[9].isCeiling := false;
  tan.flueWall[9].layers.material[1].nSta := 1;
  tan.flueWall[9].nSta[1] := 1;
  tan.flueWall[9].steadyStateInitial := false;
  tan.flueWall[9].layers.material[1].R := 0.000161207450224791;
  tan.flueWall[9].opa.layers.material[1].R := 0.000161207450224791;
  tan.flueWall[9].opa.lay[1].material.R := 0.000161207450224791;
  tan.flueWall[9].layers.material[1].x := 0.000753;
  tan.flueWall[9].opa.layers.material[1].x := 0.000753;
  tan.flueWall[9].opa.lay[1].material.x := 0.000753;
  tan.flueWall[9].layers.material[1].k := 4.671;
  tan.flueWall[9].opa.layers.material[1].k := 4.671;
  tan.flueWall[9].opa.lay[1].material.k := 4.671;
  tan.flueWall[9].opa.layers.R := 0.000161207450224791;
  tan.flueWall[9].opa.layers.absIR_a := 0.9;
  tan.flueWall[9].opa.layers.absIR_b := 0.9;
  tan.flueWall[9].opa.layers.absSol_a := 0.6;
  tan.flueWall[9].opa.layers.absSol_b := 0.6;
  tan.flueWall[9].opa.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.flueWall[9].opa.layers.material[1].nSta := 1;
  tan.flueWall[9].opa.nSta[1] := 1;
  tan.flueWall[9].opa.steadyStateInitial := false;
  tan.flueWall[10].layers.R := 0.000161207450224791;
  tan.flueWall[10].layers.absIR_a := 0.9;
  tan.flueWall[10].layers.absIR_b := 0.9;
  tan.flueWall[10].layers.absSol_a := 0.6;
  tan.flueWall[10].layers.absSol_b := 0.6;
  tan.flueWall[10].layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.flueWall[10].til := 1.5707963267949;
  tan.flueWall[10].isFloor := false;
  tan.flueWall[10].isCeiling := false;
  tan.flueWall[10].layers.material[1].nSta := 1;
  tan.flueWall[10].nSta[1] := 1;
  tan.flueWall[10].steadyStateInitial := false;
  tan.flueWall[10].layers.material[1].R := 0.000161207450224791;
  tan.flueWall[10].opa.layers.material[1].R := 0.000161207450224791;
  tan.flueWall[10].opa.lay[1].material.R := 0.000161207450224791;
  tan.flueWall[10].layers.material[1].x := 0.000753;
  tan.flueWall[10].opa.layers.material[1].x := 0.000753;
  tan.flueWall[10].opa.lay[1].material.x := 0.000753;
  tan.flueWall[10].layers.material[1].k := 4.671;
  tan.flueWall[10].opa.layers.material[1].k := 4.671;
  tan.flueWall[10].opa.lay[1].material.k := 4.671;
  tan.flueWall[10].opa.layers.R := 0.000161207450224791;
  tan.flueWall[10].opa.layers.absIR_a := 0.9;
  tan.flueWall[10].opa.layers.absIR_b := 0.9;
  tan.flueWall[10].opa.layers.absSol_a := 0.6;
  tan.flueWall[10].opa.layers.absSol_b := 0.6;
  tan.flueWall[10].opa.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.flueWall[10].opa.layers.material[1].nSta := 1;
  tan.flueWall[10].opa.nSta[1] := 1;
  tan.flueWall[10].opa.steadyStateInitial := false;
  tan.convConBou1[1].til := 1.5707963267949;
  tan.convConBou1[1].cosTil := 6.12323399573677E-017;
  tan.convConBou1[1].sinTil := 1.0;
  tan.convConBou1[1].isCeiling := false;
  tan.convConBou1[1].isFloor := false;
  tan.convConBou1[1].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou1[2].til := 1.5707963267949;
  tan.convConBou1[2].cosTil := 6.12323399573677E-017;
  tan.convConBou1[2].sinTil := 1.0;
  tan.convConBou1[2].isCeiling := false;
  tan.convConBou1[2].isFloor := false;
  tan.convConBou1[2].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou1[3].til := 1.5707963267949;
  tan.convConBou1[3].cosTil := 6.12323399573677E-017;
  tan.convConBou1[3].sinTil := 1.0;
  tan.convConBou1[3].isCeiling := false;
  tan.convConBou1[3].isFloor := false;
  tan.convConBou1[3].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou1[4].til := 1.5707963267949;
  tan.convConBou1[4].cosTil := 6.12323399573677E-017;
  tan.convConBou1[4].sinTil := 1.0;
  tan.convConBou1[4].isCeiling := false;
  tan.convConBou1[4].isFloor := false;
  tan.convConBou1[4].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou1[5].til := 1.5707963267949;
  tan.convConBou1[5].cosTil := 6.12323399573677E-017;
  tan.convConBou1[5].sinTil := 1.0;
  tan.convConBou1[5].isCeiling := false;
  tan.convConBou1[5].isFloor := false;
  tan.convConBou1[5].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou1[6].til := 1.5707963267949;
  tan.convConBou1[6].cosTil := 6.12323399573677E-017;
  tan.convConBou1[6].sinTil := 1.0;
  tan.convConBou1[6].isCeiling := false;
  tan.convConBou1[6].isFloor := false;
  tan.convConBou1[6].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou1[7].til := 1.5707963267949;
  tan.convConBou1[7].cosTil := 6.12323399573677E-017;
  tan.convConBou1[7].sinTil := 1.0;
  tan.convConBou1[7].isCeiling := false;
  tan.convConBou1[7].isFloor := false;
  tan.convConBou1[7].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou1[8].til := 1.5707963267949;
  tan.convConBou1[8].cosTil := 6.12323399573677E-017;
  tan.convConBou1[8].sinTil := 1.0;
  tan.convConBou1[8].isCeiling := false;
  tan.convConBou1[8].isFloor := false;
  tan.convConBou1[8].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou1[9].til := 1.5707963267949;
  tan.convConBou1[9].cosTil := 6.12323399573677E-017;
  tan.convConBou1[9].sinTil := 1.0;
  tan.convConBou1[9].isCeiling := false;
  tan.convConBou1[9].isFloor := false;
  tan.convConBou1[9].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou1[10].til := 1.5707963267949;
  tan.convConBou1[10].cosTil := 6.12323399573677E-017;
  tan.convConBou1[10].sinTil := 1.0;
  tan.convConBou1[10].isCeiling := false;
  tan.convConBou1[10].isFloor := false;
  tan.convConBou1[10].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.datTanEnv.layers.R := 0.0525690430314708;
  tan.conExt[1].layers.R := 0.0525690430314708;
  tan.datTanEnv.layers.absIR_a := 0.9;
  tan.conExt[1].layers.absIR_a := 0.9;
  tan.datTanEnv.layers.absIR_b := 0.9;
  tan.conExt[1].layers.absIR_b := 0.9;
  tan.datTanEnv.layers.absSol_a := 0.6;
  tan.conExt[1].layers.absSol_a := 0.6;
  tan.datTanEnv.layers.absSol_b := 0.6;
  tan.conExt[1].layers.absSol_b := 0.6;
  tan.datTanEnv.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conExt[1].layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conExt[1].til := 1.5707963267949;
  tan.conExt[1].isFloor := false;
  tan.conExt[1].isCeiling := false;
  tan.datTanEnv.layers.material[1].nSta := 1;
  tan.conExt[1].layers.material[1].nSta := 1;
  tan.conExt[1].nSta[1] := 1;
  tan.datTanEnv.layers.material[2].nSta := 1;
  tan.conExt[1].layers.material[2].nSta := 1;
  tan.conExt[1].nSta[2] := 1;
  tan.datTanEnv.steadyStateInitial := false;
  tan.conExt[1].steadyStateInitial := false;
  tan.datTanEnv.layers.material[1].R := 0.00256904303147078;
  tan.conExt[1].layers.material[1].R := 0.00256904303147078;
  tan.conExt[1].opa.layers.material[1].R := 0.00256904303147078;
  tan.conExt[1].opa.lay[1].material.R := 0.00256904303147078;
  tan.datTanEnv.layers.material[1].x := 0.012;
  tan.conExt[1].layers.material[1].x := 0.012;
  tan.conExt[1].opa.layers.material[1].x := 0.012;
  tan.conExt[1].opa.lay[1].material.x := 0.012;
  tan.datTanEnv.layers.material[1].k := 4.671;
  tan.conExt[1].layers.material[1].k := 4.671;
  tan.conExt[1].opa.layers.material[1].k := 4.671;
  tan.conExt[1].opa.lay[1].material.k := 4.671;
  tan.datTanEnv.layers.material[2].R := 0.05;
  tan.conExt[1].layers.material[2].R := 0.05;
  tan.conExt[1].opa.layers.material[2].R := 0.05;
  tan.conExt[1].opa.lay[2].material.R := 0.05;
  tan.datTanEnv.layers.material[2].x := 0.002;
  tan.conExt[1].layers.material[2].x := 0.002;
  tan.conExt[1].opa.layers.material[2].x := 0.002;
  tan.conExt[1].opa.lay[2].material.x := 0.002;
  tan.datTanEnv.layers.material[2].k := 0.04;
  tan.conExt[1].layers.material[2].k := 0.04;
  tan.conExt[1].opa.layers.material[2].k := 0.04;
  tan.conExt[1].opa.lay[2].material.k := 0.04;
  tan.conExt[1].opa.layers.R := 0.0525690430314708;
  tan.conExt[1].opa.layers.absIR_a := 0.9;
  tan.conExt[1].opa.layers.absIR_b := 0.9;
  tan.conExt[1].opa.layers.absSol_a := 0.6;
  tan.conExt[1].opa.layers.absSol_b := 0.6;
  tan.conExt[1].opa.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conExt[1].opa.layers.material[1].nSta := 1;
  tan.conExt[1].opa.nSta[1] := 1;
  tan.conExt[1].opa.layers.material[2].nSta := 1;
  tan.conExt[1].opa.nSta[2] := 1;
  tan.conExt[1].opa.steadyStateInitial := false;
  tan.conExt[2].layers.R := 0.0525690430314708;
  tan.conExt[2].layers.absIR_a := 0.9;
  tan.conExt[2].layers.absIR_b := 0.9;
  tan.conExt[2].layers.absSol_a := 0.6;
  tan.conExt[2].layers.absSol_b := 0.6;
  tan.conExt[2].layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conExt[2].til := 1.5707963267949;
  tan.conExt[2].isFloor := false;
  tan.conExt[2].isCeiling := false;
  tan.conExt[2].layers.material[1].nSta := 1;
  tan.conExt[2].nSta[1] := 1;
  tan.conExt[2].layers.material[2].nSta := 1;
  tan.conExt[2].nSta[2] := 1;
  tan.conExt[2].steadyStateInitial := false;
  tan.conExt[2].layers.material[1].R := 0.00256904303147078;
  tan.conExt[2].opa.layers.material[1].R := 0.00256904303147078;
  tan.conExt[2].opa.lay[1].material.R := 0.00256904303147078;
  tan.conExt[2].layers.material[1].x := 0.012;
  tan.conExt[2].opa.layers.material[1].x := 0.012;
  tan.conExt[2].opa.lay[1].material.x := 0.012;
  tan.conExt[2].layers.material[1].k := 4.671;
  tan.conExt[2].opa.layers.material[1].k := 4.671;
  tan.conExt[2].opa.lay[1].material.k := 4.671;
  tan.conExt[2].layers.material[2].R := 0.05;
  tan.conExt[2].opa.layers.material[2].R := 0.05;
  tan.conExt[2].opa.lay[2].material.R := 0.05;
  tan.conExt[2].layers.material[2].x := 0.002;
  tan.conExt[2].opa.layers.material[2].x := 0.002;
  tan.conExt[2].opa.lay[2].material.x := 0.002;
  tan.conExt[2].layers.material[2].k := 0.04;
  tan.conExt[2].opa.layers.material[2].k := 0.04;
  tan.conExt[2].opa.lay[2].material.k := 0.04;
  tan.conExt[2].opa.layers.R := 0.0525690430314708;
  tan.conExt[2].opa.layers.absIR_a := 0.9;
  tan.conExt[2].opa.layers.absIR_b := 0.9;
  tan.conExt[2].opa.layers.absSol_a := 0.6;
  tan.conExt[2].opa.layers.absSol_b := 0.6;
  tan.conExt[2].opa.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conExt[2].opa.layers.material[1].nSta := 1;
  tan.conExt[2].opa.nSta[1] := 1;
  tan.conExt[2].opa.layers.material[2].nSta := 1;
  tan.conExt[2].opa.nSta[2] := 1;
  tan.conExt[2].opa.steadyStateInitial := false;
  tan.conExt[3].layers.R := 0.0525690430314708;
  tan.conExt[3].layers.absIR_a := 0.9;
  tan.conExt[3].layers.absIR_b := 0.9;
  tan.conExt[3].layers.absSol_a := 0.6;
  tan.conExt[3].layers.absSol_b := 0.6;
  tan.conExt[3].layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conExt[3].til := 1.5707963267949;
  tan.conExt[3].isFloor := false;
  tan.conExt[3].isCeiling := false;
  tan.conExt[3].layers.material[1].nSta := 1;
  tan.conExt[3].nSta[1] := 1;
  tan.conExt[3].layers.material[2].nSta := 1;
  tan.conExt[3].nSta[2] := 1;
  tan.conExt[3].steadyStateInitial := false;
  tan.conExt[3].layers.material[1].R := 0.00256904303147078;
  tan.conExt[3].opa.layers.material[1].R := 0.00256904303147078;
  tan.conExt[3].opa.lay[1].material.R := 0.00256904303147078;
  tan.conExt[3].layers.material[1].x := 0.012;
  tan.conExt[3].opa.layers.material[1].x := 0.012;
  tan.conExt[3].opa.lay[1].material.x := 0.012;
  tan.conExt[3].layers.material[1].k := 4.671;
  tan.conExt[3].opa.layers.material[1].k := 4.671;
  tan.conExt[3].opa.lay[1].material.k := 4.671;
  tan.conExt[3].layers.material[2].R := 0.05;
  tan.conExt[3].opa.layers.material[2].R := 0.05;
  tan.conExt[3].opa.lay[2].material.R := 0.05;
  tan.conExt[3].layers.material[2].x := 0.002;
  tan.conExt[3].opa.layers.material[2].x := 0.002;
  tan.conExt[3].opa.lay[2].material.x := 0.002;
  tan.conExt[3].layers.material[2].k := 0.04;
  tan.conExt[3].opa.layers.material[2].k := 0.04;
  tan.conExt[3].opa.lay[2].material.k := 0.04;
  tan.conExt[3].opa.layers.R := 0.0525690430314708;
  tan.conExt[3].opa.layers.absIR_a := 0.9;
  tan.conExt[3].opa.layers.absIR_b := 0.9;
  tan.conExt[3].opa.layers.absSol_a := 0.6;
  tan.conExt[3].opa.layers.absSol_b := 0.6;
  tan.conExt[3].opa.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conExt[3].opa.layers.material[1].nSta := 1;
  tan.conExt[3].opa.nSta[1] := 1;
  tan.conExt[3].opa.layers.material[2].nSta := 1;
  tan.conExt[3].opa.nSta[2] := 1;
  tan.conExt[3].opa.steadyStateInitial := false;
  tan.conExt[4].layers.R := 0.0525690430314708;
  tan.conExt[4].layers.absIR_a := 0.9;
  tan.conExt[4].layers.absIR_b := 0.9;
  tan.conExt[4].layers.absSol_a := 0.6;
  tan.conExt[4].layers.absSol_b := 0.6;
  tan.conExt[4].layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conExt[4].til := 1.5707963267949;
  tan.conExt[4].isFloor := false;
  tan.conExt[4].isCeiling := false;
  tan.conExt[4].layers.material[1].nSta := 1;
  tan.conExt[4].nSta[1] := 1;
  tan.conExt[4].layers.material[2].nSta := 1;
  tan.conExt[4].nSta[2] := 1;
  tan.conExt[4].steadyStateInitial := false;
  tan.conExt[4].layers.material[1].R := 0.00256904303147078;
  tan.conExt[4].opa.layers.material[1].R := 0.00256904303147078;
  tan.conExt[4].opa.lay[1].material.R := 0.00256904303147078;
  tan.conExt[4].layers.material[1].x := 0.012;
  tan.conExt[4].opa.layers.material[1].x := 0.012;
  tan.conExt[4].opa.lay[1].material.x := 0.012;
  tan.conExt[4].layers.material[1].k := 4.671;
  tan.conExt[4].opa.layers.material[1].k := 4.671;
  tan.conExt[4].opa.lay[1].material.k := 4.671;
  tan.conExt[4].layers.material[2].R := 0.05;
  tan.conExt[4].opa.layers.material[2].R := 0.05;
  tan.conExt[4].opa.lay[2].material.R := 0.05;
  tan.conExt[4].layers.material[2].x := 0.002;
  tan.conExt[4].opa.layers.material[2].x := 0.002;
  tan.conExt[4].opa.lay[2].material.x := 0.002;
  tan.conExt[4].layers.material[2].k := 0.04;
  tan.conExt[4].opa.layers.material[2].k := 0.04;
  tan.conExt[4].opa.lay[2].material.k := 0.04;
  tan.conExt[4].opa.layers.R := 0.0525690430314708;
  tan.conExt[4].opa.layers.absIR_a := 0.9;
  tan.conExt[4].opa.layers.absIR_b := 0.9;
  tan.conExt[4].opa.layers.absSol_a := 0.6;
  tan.conExt[4].opa.layers.absSol_b := 0.6;
  tan.conExt[4].opa.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conExt[4].opa.layers.material[1].nSta := 1;
  tan.conExt[4].opa.nSta[1] := 1;
  tan.conExt[4].opa.layers.material[2].nSta := 1;
  tan.conExt[4].opa.nSta[2] := 1;
  tan.conExt[4].opa.steadyStateInitial := false;
  tan.conExt[5].layers.R := 0.0525690430314708;
  tan.conExt[5].layers.absIR_a := 0.9;
  tan.conExt[5].layers.absIR_b := 0.9;
  tan.conExt[5].layers.absSol_a := 0.6;
  tan.conExt[5].layers.absSol_b := 0.6;
  tan.conExt[5].layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conExt[5].til := 1.5707963267949;
  tan.conExt[5].isFloor := false;
  tan.conExt[5].isCeiling := false;
  tan.conExt[5].layers.material[1].nSta := 1;
  tan.conExt[5].nSta[1] := 1;
  tan.conExt[5].layers.material[2].nSta := 1;
  tan.conExt[5].nSta[2] := 1;
  tan.conExt[5].steadyStateInitial := false;
  tan.conExt[5].layers.material[1].R := 0.00256904303147078;
  tan.conExt[5].opa.layers.material[1].R := 0.00256904303147078;
  tan.conExt[5].opa.lay[1].material.R := 0.00256904303147078;
  tan.conExt[5].layers.material[1].x := 0.012;
  tan.conExt[5].opa.layers.material[1].x := 0.012;
  tan.conExt[5].opa.lay[1].material.x := 0.012;
  tan.conExt[5].layers.material[1].k := 4.671;
  tan.conExt[5].opa.layers.material[1].k := 4.671;
  tan.conExt[5].opa.lay[1].material.k := 4.671;
  tan.conExt[5].layers.material[2].R := 0.05;
  tan.conExt[5].opa.layers.material[2].R := 0.05;
  tan.conExt[5].opa.lay[2].material.R := 0.05;
  tan.conExt[5].layers.material[2].x := 0.002;
  tan.conExt[5].opa.layers.material[2].x := 0.002;
  tan.conExt[5].opa.lay[2].material.x := 0.002;
  tan.conExt[5].layers.material[2].k := 0.04;
  tan.conExt[5].opa.layers.material[2].k := 0.04;
  tan.conExt[5].opa.lay[2].material.k := 0.04;
  tan.conExt[5].opa.layers.R := 0.0525690430314708;
  tan.conExt[5].opa.layers.absIR_a := 0.9;
  tan.conExt[5].opa.layers.absIR_b := 0.9;
  tan.conExt[5].opa.layers.absSol_a := 0.6;
  tan.conExt[5].opa.layers.absSol_b := 0.6;
  tan.conExt[5].opa.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conExt[5].opa.layers.material[1].nSta := 1;
  tan.conExt[5].opa.nSta[1] := 1;
  tan.conExt[5].opa.layers.material[2].nSta := 1;
  tan.conExt[5].opa.nSta[2] := 1;
  tan.conExt[5].opa.steadyStateInitial := false;
  tan.conExt[6].layers.R := 0.0525690430314708;
  tan.conExt[6].layers.absIR_a := 0.9;
  tan.conExt[6].layers.absIR_b := 0.9;
  tan.conExt[6].layers.absSol_a := 0.6;
  tan.conExt[6].layers.absSol_b := 0.6;
  tan.conExt[6].layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conExt[6].til := 1.5707963267949;
  tan.conExt[6].isFloor := false;
  tan.conExt[6].isCeiling := false;
  tan.conExt[6].layers.material[1].nSta := 1;
  tan.conExt[6].nSta[1] := 1;
  tan.conExt[6].layers.material[2].nSta := 1;
  tan.conExt[6].nSta[2] := 1;
  tan.conExt[6].steadyStateInitial := false;
  tan.conExt[6].layers.material[1].R := 0.00256904303147078;
  tan.conExt[6].opa.layers.material[1].R := 0.00256904303147078;
  tan.conExt[6].opa.lay[1].material.R := 0.00256904303147078;
  tan.conExt[6].layers.material[1].x := 0.012;
  tan.conExt[6].opa.layers.material[1].x := 0.012;
  tan.conExt[6].opa.lay[1].material.x := 0.012;
  tan.conExt[6].layers.material[1].k := 4.671;
  tan.conExt[6].opa.layers.material[1].k := 4.671;
  tan.conExt[6].opa.lay[1].material.k := 4.671;
  tan.conExt[6].layers.material[2].R := 0.05;
  tan.conExt[6].opa.layers.material[2].R := 0.05;
  tan.conExt[6].opa.lay[2].material.R := 0.05;
  tan.conExt[6].layers.material[2].x := 0.002;
  tan.conExt[6].opa.layers.material[2].x := 0.002;
  tan.conExt[6].opa.lay[2].material.x := 0.002;
  tan.conExt[6].layers.material[2].k := 0.04;
  tan.conExt[6].opa.layers.material[2].k := 0.04;
  tan.conExt[6].opa.lay[2].material.k := 0.04;
  tan.conExt[6].opa.layers.R := 0.0525690430314708;
  tan.conExt[6].opa.layers.absIR_a := 0.9;
  tan.conExt[6].opa.layers.absIR_b := 0.9;
  tan.conExt[6].opa.layers.absSol_a := 0.6;
  tan.conExt[6].opa.layers.absSol_b := 0.6;
  tan.conExt[6].opa.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conExt[6].opa.layers.material[1].nSta := 1;
  tan.conExt[6].opa.nSta[1] := 1;
  tan.conExt[6].opa.layers.material[2].nSta := 1;
  tan.conExt[6].opa.nSta[2] := 1;
  tan.conExt[6].opa.steadyStateInitial := false;
  tan.conExt[7].layers.R := 0.0525690430314708;
  tan.conExt[7].layers.absIR_a := 0.9;
  tan.conExt[7].layers.absIR_b := 0.9;
  tan.conExt[7].layers.absSol_a := 0.6;
  tan.conExt[7].layers.absSol_b := 0.6;
  tan.conExt[7].layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conExt[7].til := 1.5707963267949;
  tan.conExt[7].isFloor := false;
  tan.conExt[7].isCeiling := false;
  tan.conExt[7].layers.material[1].nSta := 1;
  tan.conExt[7].nSta[1] := 1;
  tan.conExt[7].layers.material[2].nSta := 1;
  tan.conExt[7].nSta[2] := 1;
  tan.conExt[7].steadyStateInitial := false;
  tan.conExt[7].layers.material[1].R := 0.00256904303147078;
  tan.conExt[7].opa.layers.material[1].R := 0.00256904303147078;
  tan.conExt[7].opa.lay[1].material.R := 0.00256904303147078;
  tan.conExt[7].layers.material[1].x := 0.012;
  tan.conExt[7].opa.layers.material[1].x := 0.012;
  tan.conExt[7].opa.lay[1].material.x := 0.012;
  tan.conExt[7].layers.material[1].k := 4.671;
  tan.conExt[7].opa.layers.material[1].k := 4.671;
  tan.conExt[7].opa.lay[1].material.k := 4.671;
  tan.conExt[7].layers.material[2].R := 0.05;
  tan.conExt[7].opa.layers.material[2].R := 0.05;
  tan.conExt[7].opa.lay[2].material.R := 0.05;
  tan.conExt[7].layers.material[2].x := 0.002;
  tan.conExt[7].opa.layers.material[2].x := 0.002;
  tan.conExt[7].opa.lay[2].material.x := 0.002;
  tan.conExt[7].layers.material[2].k := 0.04;
  tan.conExt[7].opa.layers.material[2].k := 0.04;
  tan.conExt[7].opa.lay[2].material.k := 0.04;
  tan.conExt[7].opa.layers.R := 0.0525690430314708;
  tan.conExt[7].opa.layers.absIR_a := 0.9;
  tan.conExt[7].opa.layers.absIR_b := 0.9;
  tan.conExt[7].opa.layers.absSol_a := 0.6;
  tan.conExt[7].opa.layers.absSol_b := 0.6;
  tan.conExt[7].opa.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conExt[7].opa.layers.material[1].nSta := 1;
  tan.conExt[7].opa.nSta[1] := 1;
  tan.conExt[7].opa.layers.material[2].nSta := 1;
  tan.conExt[7].opa.nSta[2] := 1;
  tan.conExt[7].opa.steadyStateInitial := false;
  tan.conExt[8].layers.R := 0.0525690430314708;
  tan.conExt[8].layers.absIR_a := 0.9;
  tan.conExt[8].layers.absIR_b := 0.9;
  tan.conExt[8].layers.absSol_a := 0.6;
  tan.conExt[8].layers.absSol_b := 0.6;
  tan.conExt[8].layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conExt[8].til := 1.5707963267949;
  tan.conExt[8].isFloor := false;
  tan.conExt[8].isCeiling := false;
  tan.conExt[8].layers.material[1].nSta := 1;
  tan.conExt[8].nSta[1] := 1;
  tan.conExt[8].layers.material[2].nSta := 1;
  tan.conExt[8].nSta[2] := 1;
  tan.conExt[8].steadyStateInitial := false;
  tan.conExt[8].layers.material[1].R := 0.00256904303147078;
  tan.conExt[8].opa.layers.material[1].R := 0.00256904303147078;
  tan.conExt[8].opa.lay[1].material.R := 0.00256904303147078;
  tan.conExt[8].layers.material[1].x := 0.012;
  tan.conExt[8].opa.layers.material[1].x := 0.012;
  tan.conExt[8].opa.lay[1].material.x := 0.012;
  tan.conExt[8].layers.material[1].k := 4.671;
  tan.conExt[8].opa.layers.material[1].k := 4.671;
  tan.conExt[8].opa.lay[1].material.k := 4.671;
  tan.conExt[8].layers.material[2].R := 0.05;
  tan.conExt[8].opa.layers.material[2].R := 0.05;
  tan.conExt[8].opa.lay[2].material.R := 0.05;
  tan.conExt[8].layers.material[2].x := 0.002;
  tan.conExt[8].opa.layers.material[2].x := 0.002;
  tan.conExt[8].opa.lay[2].material.x := 0.002;
  tan.conExt[8].layers.material[2].k := 0.04;
  tan.conExt[8].opa.layers.material[2].k := 0.04;
  tan.conExt[8].opa.lay[2].material.k := 0.04;
  tan.conExt[8].opa.layers.R := 0.0525690430314708;
  tan.conExt[8].opa.layers.absIR_a := 0.9;
  tan.conExt[8].opa.layers.absIR_b := 0.9;
  tan.conExt[8].opa.layers.absSol_a := 0.6;
  tan.conExt[8].opa.layers.absSol_b := 0.6;
  tan.conExt[8].opa.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conExt[8].opa.layers.material[1].nSta := 1;
  tan.conExt[8].opa.nSta[1] := 1;
  tan.conExt[8].opa.layers.material[2].nSta := 1;
  tan.conExt[8].opa.nSta[2] := 1;
  tan.conExt[8].opa.steadyStateInitial := false;
  tan.conExt[9].layers.R := 0.0525690430314708;
  tan.conExt[9].layers.absIR_a := 0.9;
  tan.conExt[9].layers.absIR_b := 0.9;
  tan.conExt[9].layers.absSol_a := 0.6;
  tan.conExt[9].layers.absSol_b := 0.6;
  tan.conExt[9].layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conExt[9].til := 1.5707963267949;
  tan.conExt[9].isFloor := false;
  tan.conExt[9].isCeiling := false;
  tan.conExt[9].layers.material[1].nSta := 1;
  tan.conExt[9].nSta[1] := 1;
  tan.conExt[9].layers.material[2].nSta := 1;
  tan.conExt[9].nSta[2] := 1;
  tan.conExt[9].steadyStateInitial := false;
  tan.conExt[9].layers.material[1].R := 0.00256904303147078;
  tan.conExt[9].opa.layers.material[1].R := 0.00256904303147078;
  tan.conExt[9].opa.lay[1].material.R := 0.00256904303147078;
  tan.conExt[9].layers.material[1].x := 0.012;
  tan.conExt[9].opa.layers.material[1].x := 0.012;
  tan.conExt[9].opa.lay[1].material.x := 0.012;
  tan.conExt[9].layers.material[1].k := 4.671;
  tan.conExt[9].opa.layers.material[1].k := 4.671;
  tan.conExt[9].opa.lay[1].material.k := 4.671;
  tan.conExt[9].layers.material[2].R := 0.05;
  tan.conExt[9].opa.layers.material[2].R := 0.05;
  tan.conExt[9].opa.lay[2].material.R := 0.05;
  tan.conExt[9].layers.material[2].x := 0.002;
  tan.conExt[9].opa.layers.material[2].x := 0.002;
  tan.conExt[9].opa.lay[2].material.x := 0.002;
  tan.conExt[9].layers.material[2].k := 0.04;
  tan.conExt[9].opa.layers.material[2].k := 0.04;
  tan.conExt[9].opa.lay[2].material.k := 0.04;
  tan.conExt[9].opa.layers.R := 0.0525690430314708;
  tan.conExt[9].opa.layers.absIR_a := 0.9;
  tan.conExt[9].opa.layers.absIR_b := 0.9;
  tan.conExt[9].opa.layers.absSol_a := 0.6;
  tan.conExt[9].opa.layers.absSol_b := 0.6;
  tan.conExt[9].opa.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conExt[9].opa.layers.material[1].nSta := 1;
  tan.conExt[9].opa.nSta[1] := 1;
  tan.conExt[9].opa.layers.material[2].nSta := 1;
  tan.conExt[9].opa.nSta[2] := 1;
  tan.conExt[9].opa.steadyStateInitial := false;
  tan.conExt[10].layers.R := 0.0525690430314708;
  tan.conExt[10].layers.absIR_a := 0.9;
  tan.conExt[10].layers.absIR_b := 0.9;
  tan.conExt[10].layers.absSol_a := 0.6;
  tan.conExt[10].layers.absSol_b := 0.6;
  tan.conExt[10].layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conExt[10].til := 1.5707963267949;
  tan.conExt[10].isFloor := false;
  tan.conExt[10].isCeiling := false;
  tan.conExt[10].layers.material[1].nSta := 1;
  tan.conExt[10].nSta[1] := 1;
  tan.conExt[10].layers.material[2].nSta := 1;
  tan.conExt[10].nSta[2] := 1;
  tan.conExt[10].steadyStateInitial := false;
  tan.conExt[10].layers.material[1].R := 0.00256904303147078;
  tan.conExt[10].opa.layers.material[1].R := 0.00256904303147078;
  tan.conExt[10].opa.lay[1].material.R := 0.00256904303147078;
  tan.conExt[10].layers.material[1].x := 0.012;
  tan.conExt[10].opa.layers.material[1].x := 0.012;
  tan.conExt[10].opa.lay[1].material.x := 0.012;
  tan.conExt[10].layers.material[1].k := 4.671;
  tan.conExt[10].opa.layers.material[1].k := 4.671;
  tan.conExt[10].opa.lay[1].material.k := 4.671;
  tan.conExt[10].layers.material[2].R := 0.05;
  tan.conExt[10].opa.layers.material[2].R := 0.05;
  tan.conExt[10].opa.lay[2].material.R := 0.05;
  tan.conExt[10].layers.material[2].x := 0.002;
  tan.conExt[10].opa.layers.material[2].x := 0.002;
  tan.conExt[10].opa.lay[2].material.x := 0.002;
  tan.conExt[10].layers.material[2].k := 0.04;
  tan.conExt[10].opa.layers.material[2].k := 0.04;
  tan.conExt[10].opa.lay[2].material.k := 0.04;
  tan.conExt[10].opa.layers.R := 0.0525690430314708;
  tan.conExt[10].opa.layers.absIR_a := 0.9;
  tan.conExt[10].opa.layers.absIR_b := 0.9;
  tan.conExt[10].opa.layers.absSol_a := 0.6;
  tan.conExt[10].opa.layers.absSol_b := 0.6;
  tan.conExt[10].opa.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conExt[10].opa.layers.material[1].nSta := 1;
  tan.conExt[10].opa.nSta[1] := 1;
  tan.conExt[10].opa.layers.material[2].nSta := 1;
  tan.conExt[10].opa.nSta[2] := 1;
  tan.conExt[10].opa.steadyStateInitial := false;
  tan.vol[1].substanceDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[1].traceDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[1].p_start := 101325.0;
  tan.vol[1].T_start := 293.15;
  tan.vol[1].homotopyInitialization := true;
  tan.vol[1].allowFlowReversal := true;
  tan.vol[1].prescribedHeatFlowRate := false;
  tan.vol[1].state_start.phase := 1;
  tan.vol[1].state_start.T := 293.15;
  tan.vol[1].state_start.p := 101325.0;
  tan.vol[2].substanceDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[2].traceDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[2].p_start := 101325.0;
  tan.vol[2].T_start := 293.15;
  tan.vol[2].homotopyInitialization := true;
  tan.vol[2].allowFlowReversal := true;
  tan.vol[2].prescribedHeatFlowRate := false;
  tan.vol[2].state_start.phase := 1;
  tan.vol[2].state_start.T := 293.15;
  tan.vol[2].state_start.p := 101325.0;
  tan.vol[3].substanceDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[3].traceDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[3].p_start := 101325.0;
  tan.vol[3].T_start := 293.15;
  tan.vol[3].homotopyInitialization := true;
  tan.vol[3].allowFlowReversal := true;
  tan.vol[3].prescribedHeatFlowRate := false;
  tan.vol[3].state_start.phase := 1;
  tan.vol[3].state_start.T := 293.15;
  tan.vol[3].state_start.p := 101325.0;
  tan.vol[4].substanceDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[4].traceDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[4].p_start := 101325.0;
  tan.vol[4].T_start := 293.15;
  tan.vol[4].homotopyInitialization := true;
  tan.vol[4].allowFlowReversal := true;
  tan.vol[4].prescribedHeatFlowRate := false;
  tan.vol[4].state_start.phase := 1;
  tan.vol[4].state_start.T := 293.15;
  tan.vol[4].state_start.p := 101325.0;
  tan.vol[5].substanceDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[5].traceDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[5].p_start := 101325.0;
  tan.vol[5].T_start := 293.15;
  tan.vol[5].homotopyInitialization := true;
  tan.vol[5].allowFlowReversal := true;
  tan.vol[5].prescribedHeatFlowRate := false;
  tan.vol[5].state_start.phase := 1;
  tan.vol[5].state_start.T := 293.15;
  tan.vol[5].state_start.p := 101325.0;
  tan.vol[6].substanceDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[6].traceDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[6].p_start := 101325.0;
  tan.vol[6].T_start := 293.15;
  tan.vol[6].homotopyInitialization := true;
  tan.vol[6].allowFlowReversal := true;
  tan.vol[6].prescribedHeatFlowRate := false;
  tan.vol[6].state_start.phase := 1;
  tan.vol[6].state_start.T := 293.15;
  tan.vol[6].state_start.p := 101325.0;
  tan.vol[7].substanceDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[7].traceDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[7].p_start := 101325.0;
  tan.vol[7].T_start := 293.15;
  tan.vol[7].homotopyInitialization := true;
  tan.vol[7].allowFlowReversal := true;
  tan.vol[7].prescribedHeatFlowRate := false;
  tan.vol[7].state_start.phase := 1;
  tan.vol[7].state_start.T := 293.15;
  tan.vol[7].state_start.p := 101325.0;
  tan.vol[8].substanceDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[8].traceDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[8].p_start := 101325.0;
  tan.vol[8].T_start := 293.15;
  tan.vol[8].homotopyInitialization := true;
  tan.vol[8].allowFlowReversal := true;
  tan.vol[8].prescribedHeatFlowRate := false;
  tan.vol[8].state_start.phase := 1;
  tan.vol[8].state_start.T := 293.15;
  tan.vol[8].state_start.p := 101325.0;
  tan.vol[9].substanceDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[9].traceDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[9].p_start := 101325.0;
  tan.vol[9].T_start := 293.15;
  tan.vol[9].homotopyInitialization := true;
  tan.vol[9].allowFlowReversal := true;
  tan.vol[9].prescribedHeatFlowRate := false;
  tan.vol[9].state_start.phase := 1;
  tan.vol[9].state_start.T := 293.15;
  tan.vol[9].state_start.p := 101325.0;
  tan.vol[10].substanceDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[10].traceDynamics := Modelica.Fluid.Types.Dynamics.DynamicFreeInitial;
  tan.vol[10].p_start := 101325.0;
  tan.vol[10].T_start := 293.15;
  tan.vol[10].homotopyInitialization := true;
  tan.vol[10].allowFlowReversal := true;
  tan.vol[10].prescribedHeatFlowRate := false;
  tan.vol[10].state_start.phase := 1;
  tan.vol[10].state_start.T := 293.15;
  tan.vol[10].state_start.p := 101325.0;
  tan.datFlueWall.isFloor := false;
  tan.datFlueWall.isCeiling := false;
  tan.datFlueWall.nSta[1] := 1;
  tan.datTanEnv.isFloor := false;
  tan.datTanEnv.isCeiling := false;
  tan.datTanEnv.nSta[1] := 1;
  tan.datTanEnv.nSta[2] := 1;
  tan.datTanEnvTop.layers.R := 0.0525690430314708;
  tan.conOpa.layers.R := 0.0525690430314708;
  tan.datTanEnvTop.layers.absIR_a := 0.9;
  tan.conOpa.layers.absIR_a := 0.9;
  tan.datTanEnvTop.layers.absIR_b := 0.9;
  tan.conOpa.layers.absIR_b := 0.9;
  tan.datTanEnvTop.layers.absSol_a := 0.6;
  tan.conOpa.layers.absSol_a := 0.6;
  tan.datTanEnvTop.layers.absSol_b := 0.6;
  tan.conOpa.layers.absSol_b := 0.6;
  tan.datTanEnvTop.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conOpa.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conOpa.til := 0.0;
  tan.conOpa.isFloor := false;
  tan.conOpa.isCeiling := true;
  tan.datTanEnvTop.layers.material[1].nSta := 1;
  tan.conOpa.layers.material[1].nSta := 1;
  tan.conOpa.nSta[1] := 1;
  tan.datTanEnvTop.layers.material[2].nSta := 1;
  tan.conOpa.layers.material[2].nSta := 1;
  tan.conOpa.nSta[2] := 1;
  tan.datTanEnvTop.steadyStateInitial := false;
  tan.conOpa.steadyStateInitial := false;
  tan.datTanEnvTop.layers.material[1].R := 0.00256904303147078;
  tan.conOpa.layers.material[1].R := 0.00256904303147078;
  tan.conOpa.opa.layers.material[1].R := 0.00256904303147078;
  tan.conOpa.opa.lay[1].material.R := 0.00256904303147078;
  tan.datTanEnvTop.layers.material[1].x := 0.012;
  tan.conOpa.layers.material[1].x := 0.012;
  tan.conOpa.opa.layers.material[1].x := 0.012;
  tan.conOpa.opa.lay[1].material.x := 0.012;
  tan.datTanEnvTop.layers.material[1].k := 4.671;
  tan.conOpa.layers.material[1].k := 4.671;
  tan.conOpa.opa.layers.material[1].k := 4.671;
  tan.conOpa.opa.lay[1].material.k := 4.671;
  tan.datTanEnvTop.layers.material[2].R := 0.05;
  tan.conOpa.layers.material[2].R := 0.05;
  tan.conOpa.opa.layers.material[2].R := 0.05;
  tan.conOpa.opa.lay[2].material.R := 0.05;
  tan.datTanEnvTop.layers.material[2].x := 0.002;
  tan.conOpa.layers.material[2].x := 0.002;
  tan.conOpa.opa.layers.material[2].x := 0.002;
  tan.conOpa.opa.lay[2].material.x := 0.002;
  tan.datTanEnvTop.layers.material[2].k := 0.04;
  tan.conOpa.layers.material[2].k := 0.04;
  tan.conOpa.opa.layers.material[2].k := 0.04;
  tan.conOpa.opa.lay[2].material.k := 0.04;
  tan.conOpa.opa.layers.R := 0.0525690430314708;
  tan.conOpa.opa.layers.absIR_a := 0.9;
  tan.conOpa.opa.layers.absIR_b := 0.9;
  tan.conOpa.opa.layers.absSol_a := 0.6;
  tan.conOpa.opa.layers.absSol_b := 0.6;
  tan.conOpa.opa.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conOpa.opa.layers.material[1].nSta := 1;
  tan.conOpa.opa.nSta[1] := 1;
  tan.conOpa.opa.layers.material[2].nSta := 1;
  tan.conOpa.opa.nSta[2] := 1;
  tan.conOpa.opa.steadyStateInitial := false;
  tan.datTanEnvTop.isFloor := false;
  tan.datTanEnvTop.isCeiling := true;
  tan.datTanEnvTop.nSta[1] := 1;
  tan.datTanEnvTop.nSta[2] := 1;
  tan.datTanEnvBot.layers.R := 0.000679940055662599;
  tan.conOpa3.layers.R := 0.000679940055662599;
  tan.datTanEnvBot.layers.absIR_a := 0.9;
  tan.conOpa3.layers.absIR_a := 0.9;
  tan.datTanEnvBot.layers.absIR_b := 0.9;
  tan.conOpa3.layers.absIR_b := 0.9;
  tan.datTanEnvBot.layers.absSol_a := 0.6;
  tan.conOpa3.layers.absSol_a := 0.6;
  tan.datTanEnvBot.layers.absSol_b := 0.6;
  tan.conOpa3.layers.absSol_b := 0.6;
  tan.datTanEnvBot.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conOpa3.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conOpa3.til := 3.14159265358979;
  tan.conOpa3.isFloor := true;
  tan.conOpa3.isCeiling := false;
  tan.datTanEnvBot.layers.material[1].nSta := 1;
  tan.conOpa3.layers.material[1].nSta := 1;
  tan.conOpa3.nSta[1] := 1;
  tan.datTanEnvBot.steadyStateInitial := false;
  tan.conOpa3.steadyStateInitial := false;
  tan.datTanEnvBot.layers.material[1].R := 0.000679940055662599;
  tan.conOpa3.layers.material[1].R := 0.000679940055662599;
  tan.conOpa3.opa.layers.material[1].R := 0.000679940055662599;
  tan.conOpa3.opa.lay[1].material.R := 0.000679940055662599;
  tan.datTanEnvBot.layers.material[1].x := 0.003176;
  tan.conOpa3.layers.material[1].x := 0.003176;
  tan.conOpa3.opa.layers.material[1].x := 0.003176;
  tan.conOpa3.opa.lay[1].material.x := 0.003176;
  tan.datTanEnvBot.layers.material[1].k := 4.671;
  tan.conOpa3.layers.material[1].k := 4.671;
  tan.conOpa3.opa.layers.material[1].k := 4.671;
  tan.conOpa3.opa.lay[1].material.k := 4.671;
  tan.conOpa3.opa.layers.R := 0.000679940055662599;
  tan.conOpa3.opa.layers.absIR_a := 0.9;
  tan.conOpa3.opa.layers.absIR_b := 0.9;
  tan.conOpa3.opa.layers.absSol_a := 0.6;
  tan.conOpa3.opa.layers.absSol_b := 0.6;
  tan.conOpa3.opa.layers.roughness_a := Buildings.HeatTransfer.Types.SurfaceRoughness.
    Medium;
  tan.conOpa3.opa.layers.material[1].nSta := 1;
  tan.conOpa3.opa.nSta[1] := 1;
  tan.conOpa3.opa.steadyStateInitial := false;
  tan.datTanEnvBot.isFloor := true;
  tan.datTanEnvBot.isCeiling := false;
  tan.datTanEnvBot.nSta[1] := 1;
  tan.convConBou2.til := 3.14159265358979;
  tan.convConBou2.cosTil := -1.0;
  tan.convConBou2.sinTil := 1.22464679914735E-016;
  tan.convConBou2.isCeiling := false;
  tan.convConBou2.isFloor := true;
  tan.convConBou2.conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou3.til := 0.0;
  tan.convConBou3.cosTil := 1.0;
  tan.convConBou3.sinTil := 0.0;
  tan.convConBou3.isCeiling := true;
  tan.convConBou3.isFloor := false;
  tan.convConBou3.conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou4[1].til := 1.5707963267949;
  tan.convConBou4[1].cosTil := 6.12323399573677E-017;
  tan.convConBou4[1].sinTil := 1.0;
  tan.convConBou4[1].isCeiling := false;
  tan.convConBou4[1].isFloor := false;
  tan.convConBou4[1].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou4[2].til := 1.5707963267949;
  tan.convConBou4[2].cosTil := 6.12323399573677E-017;
  tan.convConBou4[2].sinTil := 1.0;
  tan.convConBou4[2].isCeiling := false;
  tan.convConBou4[2].isFloor := false;
  tan.convConBou4[2].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou4[3].til := 1.5707963267949;
  tan.convConBou4[3].cosTil := 6.12323399573677E-017;
  tan.convConBou4[3].sinTil := 1.0;
  tan.convConBou4[3].isCeiling := false;
  tan.convConBou4[3].isFloor := false;
  tan.convConBou4[3].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou4[4].til := 1.5707963267949;
  tan.convConBou4[4].cosTil := 6.12323399573677E-017;
  tan.convConBou4[4].sinTil := 1.0;
  tan.convConBou4[4].isCeiling := false;
  tan.convConBou4[4].isFloor := false;
  tan.convConBou4[4].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou4[5].til := 1.5707963267949;
  tan.convConBou4[5].cosTil := 6.12323399573677E-017;
  tan.convConBou4[5].sinTil := 1.0;
  tan.convConBou4[5].isCeiling := false;
  tan.convConBou4[5].isFloor := false;
  tan.convConBou4[5].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou4[6].til := 1.5707963267949;
  tan.convConBou4[6].cosTil := 6.12323399573677E-017;
  tan.convConBou4[6].sinTil := 1.0;
  tan.convConBou4[6].isCeiling := false;
  tan.convConBou4[6].isFloor := false;
  tan.convConBou4[6].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou4[7].til := 1.5707963267949;
  tan.convConBou4[7].cosTil := 6.12323399573677E-017;
  tan.convConBou4[7].sinTil := 1.0;
  tan.convConBou4[7].isCeiling := false;
  tan.convConBou4[7].isFloor := false;
  tan.convConBou4[7].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou4[8].til := 1.5707963267949;
  tan.convConBou4[8].cosTil := 6.12323399573677E-017;
  tan.convConBou4[8].sinTil := 1.0;
  tan.convConBou4[8].isCeiling := false;
  tan.convConBou4[8].isFloor := false;
  tan.convConBou4[8].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou4[9].til := 1.5707963267949;
  tan.convConBou4[9].cosTil := 6.12323399573677E-017;
  tan.convConBou4[9].sinTil := 1.0;
  tan.convConBou4[9].isCeiling := false;
  tan.convConBou4[9].isFloor := false;
  tan.convConBou4[9].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou4[10].til := 1.5707963267949;
  tan.convConBou4[10].cosTil := 6.12323399573677E-017;
  tan.convConBou4[10].sinTil := 1.0;
  tan.convConBou4[10].isCeiling := false;
  tan.convConBou4[10].isFloor := false;
  tan.convConBou4[10].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou8[1].til := 1.5707963267949;
  tan.convConBou8[1].cosTil := 6.12323399573677E-017;
  tan.convConBou8[1].sinTil := 1.0;
  tan.convConBou8[1].isCeiling := false;
  tan.convConBou8[1].isFloor := false;
  tan.convConBou8[1].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou8[2].til := 1.5707963267949;
  tan.convConBou8[2].cosTil := 6.12323399573677E-017;
  tan.convConBou8[2].sinTil := 1.0;
  tan.convConBou8[2].isCeiling := false;
  tan.convConBou8[2].isFloor := false;
  tan.convConBou8[2].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou8[3].til := 1.5707963267949;
  tan.convConBou8[3].cosTil := 6.12323399573677E-017;
  tan.convConBou8[3].sinTil := 1.0;
  tan.convConBou8[3].isCeiling := false;
  tan.convConBou8[3].isFloor := false;
  tan.convConBou8[3].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou8[4].til := 1.5707963267949;
  tan.convConBou8[4].cosTil := 6.12323399573677E-017;
  tan.convConBou8[4].sinTil := 1.0;
  tan.convConBou8[4].isCeiling := false;
  tan.convConBou8[4].isFloor := false;
  tan.convConBou8[4].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou8[5].til := 1.5707963267949;
  tan.convConBou8[5].cosTil := 6.12323399573677E-017;
  tan.convConBou8[5].sinTil := 1.0;
  tan.convConBou8[5].isCeiling := false;
  tan.convConBou8[5].isFloor := false;
  tan.convConBou8[5].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou8[6].til := 1.5707963267949;
  tan.convConBou8[6].cosTil := 6.12323399573677E-017;
  tan.convConBou8[6].sinTil := 1.0;
  tan.convConBou8[6].isCeiling := false;
  tan.convConBou8[6].isFloor := false;
  tan.convConBou8[6].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou8[7].til := 1.5707963267949;
  tan.convConBou8[7].cosTil := 6.12323399573677E-017;
  tan.convConBou8[7].sinTil := 1.0;
  tan.convConBou8[7].isCeiling := false;
  tan.convConBou8[7].isFloor := false;
  tan.convConBou8[7].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou8[8].til := 1.5707963267949;
  tan.convConBou8[8].cosTil := 6.12323399573677E-017;
  tan.convConBou8[8].sinTil := 1.0;
  tan.convConBou8[8].isCeiling := false;
  tan.convConBou8[8].isFloor := false;
  tan.convConBou8[8].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou8[9].til := 1.5707963267949;
  tan.convConBou8[9].cosTil := 6.12323399573677E-017;
  tan.convConBou8[9].sinTil := 1.0;
  tan.convConBou8[9].isCeiling := false;
  tan.convConBou8[9].isFloor := false;
  tan.convConBou8[9].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou8[10].til := 1.5707963267949;
  tan.convConBou8[10].cosTil := 6.12323399573677E-017;
  tan.convConBou8[10].sinTil := 1.0;
  tan.convConBou8[10].isCeiling := false;
  tan.convConBou8[10].isFloor := false;
  tan.convConBou8[10].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou9[1].til := 1.5707963267949;
  tan.convConBou9[1].cosTil := 6.12323399573677E-017;
  tan.convConBou9[1].sinTil := 1.0;
  tan.convConBou9[1].isCeiling := false;
  tan.convConBou9[1].isFloor := false;
  tan.convConBou9[1].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou9[1].homotopyInitialization := true;
  tan.convConBou9[2].til := 1.5707963267949;
  tan.convConBou9[2].cosTil := 6.12323399573677E-017;
  tan.convConBou9[2].sinTil := 1.0;
  tan.convConBou9[2].isCeiling := false;
  tan.convConBou9[2].isFloor := false;
  tan.convConBou9[2].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou9[2].homotopyInitialization := true;
  tan.convConBou9[3].til := 1.5707963267949;
  tan.convConBou9[3].cosTil := 6.12323399573677E-017;
  tan.convConBou9[3].sinTil := 1.0;
  tan.convConBou9[3].isCeiling := false;
  tan.convConBou9[3].isFloor := false;
  tan.convConBou9[3].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou9[3].homotopyInitialization := true;
  tan.convConBou9[4].til := 1.5707963267949;
  tan.convConBou9[4].cosTil := 6.12323399573677E-017;
  tan.convConBou9[4].sinTil := 1.0;
  tan.convConBou9[4].isCeiling := false;
  tan.convConBou9[4].isFloor := false;
  tan.convConBou9[4].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou9[4].homotopyInitialization := true;
  tan.convConBou9[5].til := 1.5707963267949;
  tan.convConBou9[5].cosTil := 6.12323399573677E-017;
  tan.convConBou9[5].sinTil := 1.0;
  tan.convConBou9[5].isCeiling := false;
  tan.convConBou9[5].isFloor := false;
  tan.convConBou9[5].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou9[5].homotopyInitialization := true;
  tan.convConBou9[6].til := 1.5707963267949;
  tan.convConBou9[6].cosTil := 6.12323399573677E-017;
  tan.convConBou9[6].sinTil := 1.0;
  tan.convConBou9[6].isCeiling := false;
  tan.convConBou9[6].isFloor := false;
  tan.convConBou9[6].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou9[6].homotopyInitialization := true;
  tan.convConBou9[7].til := 1.5707963267949;
  tan.convConBou9[7].cosTil := 6.12323399573677E-017;
  tan.convConBou9[7].sinTil := 1.0;
  tan.convConBou9[7].isCeiling := false;
  tan.convConBou9[7].isFloor := false;
  tan.convConBou9[7].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou9[7].homotopyInitialization := true;
  tan.convConBou9[8].til := 1.5707963267949;
  tan.convConBou9[8].cosTil := 6.12323399573677E-017;
  tan.convConBou9[8].sinTil := 1.0;
  tan.convConBou9[8].isCeiling := false;
  tan.convConBou9[8].isFloor := false;
  tan.convConBou9[8].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou9[8].homotopyInitialization := true;
  tan.convConBou9[9].til := 1.5707963267949;
  tan.convConBou9[9].cosTil := 6.12323399573677E-017;
  tan.convConBou9[9].sinTil := 1.0;
  tan.convConBou9[9].isCeiling := false;
  tan.convConBou9[9].isFloor := false;
  tan.convConBou9[9].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou9[9].homotopyInitialization := true;
  tan.convConBou9[10].til := 1.5707963267949;
  tan.convConBou9[10].cosTil := 6.12323399573677E-017;
  tan.convConBou9[10].sinTil := 1.0;
  tan.convConBou9[10].isCeiling := false;
  tan.convConBou9[10].isFloor := false;
  tan.convConBou9[10].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou9[10].homotopyInitialization := true;
  tan.convConBou5[1].til := 1.5707963267949;
  tan.convConBou5[1].cosTil := 6.12323399573677E-017;
  tan.convConBou5[1].sinTil := 1.0;
  tan.convConBou5[1].isCeiling := false;
  tan.convConBou5[1].isFloor := false;
  tan.convConBou5[1].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou5[2].til := 1.5707963267949;
  tan.convConBou5[2].cosTil := 6.12323399573677E-017;
  tan.convConBou5[2].sinTil := 1.0;
  tan.convConBou5[2].isCeiling := false;
  tan.convConBou5[2].isFloor := false;
  tan.convConBou5[2].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou5[3].til := 1.5707963267949;
  tan.convConBou5[3].cosTil := 6.12323399573677E-017;
  tan.convConBou5[3].sinTil := 1.0;
  tan.convConBou5[3].isCeiling := false;
  tan.convConBou5[3].isFloor := false;
  tan.convConBou5[3].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou5[4].til := 1.5707963267949;
  tan.convConBou5[4].cosTil := 6.12323399573677E-017;
  tan.convConBou5[4].sinTil := 1.0;
  tan.convConBou5[4].isCeiling := false;
  tan.convConBou5[4].isFloor := false;
  tan.convConBou5[4].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou5[5].til := 1.5707963267949;
  tan.convConBou5[5].cosTil := 6.12323399573677E-017;
  tan.convConBou5[5].sinTil := 1.0;
  tan.convConBou5[5].isCeiling := false;
  tan.convConBou5[5].isFloor := false;
  tan.convConBou5[5].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou5[6].til := 1.5707963267949;
  tan.convConBou5[6].cosTil := 6.12323399573677E-017;
  tan.convConBou5[6].sinTil := 1.0;
  tan.convConBou5[6].isCeiling := false;
  tan.convConBou5[6].isFloor := false;
  tan.convConBou5[6].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou5[7].til := 1.5707963267949;
  tan.convConBou5[7].cosTil := 6.12323399573677E-017;
  tan.convConBou5[7].sinTil := 1.0;
  tan.convConBou5[7].isCeiling := false;
  tan.convConBou5[7].isFloor := false;
  tan.convConBou5[7].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou5[8].til := 1.5707963267949;
  tan.convConBou5[8].cosTil := 6.12323399573677E-017;
  tan.convConBou5[8].sinTil := 1.0;
  tan.convConBou5[8].isCeiling := false;
  tan.convConBou5[8].isFloor := false;
  tan.convConBou5[8].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou5[9].til := 1.5707963267949;
  tan.convConBou5[9].cosTil := 6.12323399573677E-017;
  tan.convConBou5[9].sinTil := 1.0;
  tan.convConBou5[9].isCeiling := false;
  tan.convConBou5[9].isFloor := false;
  tan.convConBou5[9].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou5[10].til := 1.5707963267949;
  tan.convConBou5[10].cosTil := 6.12323399573677E-017;
  tan.convConBou5[10].sinTil := 1.0;
  tan.convConBou5[10].isCeiling := false;
  tan.convConBou5[10].isFloor := false;
  tan.convConBou5[10].conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou10.til := 0.0;
  tan.convConBou10.cosTil := 1.0;
  tan.convConBou10.sinTil := 0.0;
  tan.convConBou10.isCeiling := true;
  tan.convConBou10.isFloor := false;
  tan.convConBou10.conMod := Buildings.HeatTransfer.Types.InteriorConvection.
    Temperature;
  tan.convConBou10.homotopyInitialization := true;
  burn.datTanEnvBot.layers.material[1].x := 0.003176;
  burn.datTanEnvBot.layers.material[1].k := 4.671;
  burn.datTanEnvBot.layers.material[1].c := 473.0;
  burn.datTanEnvBot.layers.material[1].d := 7801.0;
  burn.datTanEnvBot.layers.material[1].R := 0.000679940055662599;
  burn.datTanEnvBot.layers.material[1].nStaRef := 6;
  burn.datTanEnvBot.layers.material[1].steadyState := false;
  burn.datTanEnvBot.layers.material[1].piRef := 331.4;
  burn.datTanEnvBot.layers.material[1].piMat := 2.82280754405134;
  burn.datTanEnvBot.layers.material[1].nStaReal := 0.0511069561385276;
  burn.datTanEnv.layers.material[1].x := 0.012;
  burn.datTanEnv.layers.material[1].k := 4.671;
  burn.datTanEnv.layers.material[1].c := 473.0;
  burn.datTanEnv.layers.material[1].d := 7801.0;
  burn.datTanEnv.layers.material[1].R := 0.00256904303147078;
  burn.datTanEnv.layers.material[1].nStaRef := 6;
  burn.datTanEnv.layers.material[1].steadyState := false;
  burn.datTanEnv.layers.material[1].piRef := 331.4;
  burn.datTanEnv.layers.material[1].piMat := 10.6655196878514;
  burn.datTanEnv.layers.material[1].nStaReal := 0.193099330498215;
  burn.datTanEnv.layers.material[2].x := 0.002;
  burn.datTanEnv.layers.material[2].k := 0.04;
  burn.datTanEnv.layers.material[2].c := 1380.0;
  burn.datTanEnv.layers.material[2].d := 150.0;
  burn.datTanEnv.layers.material[2].R := 0.05;
  burn.datTanEnv.layers.material[2].nStaRef := 6;
  burn.datTanEnv.layers.material[2].steadyState := false;
  burn.datTanEnv.layers.material[2].piRef := 331.4;
  burn.datTanEnv.layers.material[2].piMat := 4.54972526643093;
  burn.datTanEnv.layers.material[2].nStaReal := 0.0823728171351406;
  tan.datFlueWall.layers.material[1].c := 473.0;
  tan.flueWall[1].layers.material[1].c := 473.0;
  tan.datFlueWall.layers.material[1].d := 7801.0;
  tan.flueWall[1].layers.material[1].d := 7801.0;
  tan.datFlueWall.layers.material[1].nStaRef := 6;
  tan.flueWall[1].layers.material[1].nStaRef := 6;
  tan.datFlueWall.layers.material[1].steadyState := false;
  tan.flueWall[1].layers.material[1].steadyState := false;
  tan.datFlueWall.layers.material[1].piRef := 331.4;
  tan.flueWall[1].layers.material[1].piRef := 331.4;
  tan.datFlueWall.layers.material[1].piMat := 0.669261360412676;
  tan.flueWall[1].layers.material[1].piMat := 0.669261360412676;
  tan.datFlueWall.layers.material[1].nStaReal := 0.012116982988763;
  tan.flueWall[1].layers.material[1].nStaReal := 0.012116982988763;
  tan.flueWall[1].opa.layers.material[1].c := 473.0;
  tan.flueWall[1].opa.layers.material[1].d := 7801.0;
  tan.flueWall[1].opa.layers.material[1].nStaRef := 6;
  tan.flueWall[1].opa.layers.material[1].steadyState := false;
  tan.flueWall[1].opa.layers.material[1].piRef := 331.4;
  tan.flueWall[1].opa.layers.material[1].piMat := 0.669261360412676;
  tan.flueWall[1].opa.layers.material[1].nStaReal := 0.012116982988763;
  tan.flueWall[1].opa.lay[1].material.c := 473.0;
  tan.flueWall[1].opa.lay[1].material.d := 7801.0;
  tan.flueWall[1].opa.lay[1].material.nStaRef := 6;
  tan.flueWall[1].opa.lay[1].material.nSta := 1;
  tan.flueWall[1].opa.lay[1].material.steadyState := false;
  tan.flueWall[1].opa.lay[1].material.piRef := 331.4;
  tan.flueWall[1].opa.lay[1].material.piMat := 0.669261360412676;
  tan.flueWall[1].opa.lay[1].material.nStaReal := 0.012116982988763;
  tan.flueWall[1].opa.lay[1].steadyStateInitial := false;
  tan.flueWall[1].opa.lay[1].nSta := 1;
  tan.flueWall[2].layers.material[1].c := 473.0;
  tan.flueWall[2].layers.material[1].d := 7801.0;
  tan.flueWall[2].layers.material[1].nStaRef := 6;
  tan.flueWall[2].layers.material[1].steadyState := false;
  tan.flueWall[2].layers.material[1].piRef := 331.4;
  tan.flueWall[2].layers.material[1].piMat := 0.669261360412676;
  tan.flueWall[2].layers.material[1].nStaReal := 0.012116982988763;
  tan.flueWall[2].opa.layers.material[1].c := 473.0;
  tan.flueWall[2].opa.layers.material[1].d := 7801.0;
  tan.flueWall[2].opa.layers.material[1].nStaRef := 6;
  tan.flueWall[2].opa.layers.material[1].steadyState := false;
  tan.flueWall[2].opa.layers.material[1].piRef := 331.4;
  tan.flueWall[2].opa.layers.material[1].piMat := 0.669261360412676;
  tan.flueWall[2].opa.layers.material[1].nStaReal := 0.012116982988763;
  tan.flueWall[2].opa.lay[1].material.c := 473.0;
  tan.flueWall[2].opa.lay[1].material.d := 7801.0;
  tan.flueWall[2].opa.lay[1].material.nStaRef := 6;
  tan.flueWall[2].opa.lay[1].material.nSta := 1;
  tan.flueWall[2].opa.lay[1].material.steadyState := false;
  tan.flueWall[2].opa.lay[1].material.piRef := 331.4;
  tan.flueWall[2].opa.lay[1].material.piMat := 0.669261360412676;
  tan.flueWall[2].opa.lay[1].material.nStaReal := 0.012116982988763;
  tan.flueWall[2].opa.lay[1].steadyStateInitial := false;
  tan.flueWall[2].opa.lay[1].nSta := 1;
  tan.flueWall[3].layers.material[1].c := 473.0;
  tan.flueWall[3].layers.material[1].d := 7801.0;
  tan.flueWall[3].layers.material[1].nStaRef := 6;
  tan.flueWall[3].layers.material[1].steadyState := false;
  tan.flueWall[3].layers.material[1].piRef := 331.4;
  tan.flueWall[3].layers.material[1].piMat := 0.669261360412676;
  tan.flueWall[3].layers.material[1].nStaReal := 0.012116982988763;
  tan.flueWall[3].opa.layers.material[1].c := 473.0;
  tan.flueWall[3].opa.layers.material[1].d := 7801.0;
  tan.flueWall[3].opa.layers.material[1].nStaRef := 6;
  tan.flueWall[3].opa.layers.material[1].steadyState := false;
  tan.flueWall[3].opa.layers.material[1].piRef := 331.4;
  tan.flueWall[3].opa.layers.material[1].piMat := 0.669261360412676;
  tan.flueWall[3].opa.layers.material[1].nStaReal := 0.012116982988763;
  tan.flueWall[3].opa.lay[1].material.c := 473.0;
  tan.flueWall[3].opa.lay[1].material.d := 7801.0;
  tan.flueWall[3].opa.lay[1].material.nStaRef := 6;
  tan.flueWall[3].opa.lay[1].material.nSta := 1;
  tan.flueWall[3].opa.lay[1].material.steadyState := false;
  tan.flueWall[3].opa.lay[1].material.piRef := 331.4;
  tan.flueWall[3].opa.lay[1].material.piMat := 0.669261360412676;
  tan.flueWall[3].opa.lay[1].material.nStaReal := 0.012116982988763;
  tan.flueWall[3].opa.lay[1].steadyStateInitial := false;
  tan.flueWall[3].opa.lay[1].nSta := 1;
  tan.flueWall[4].layers.material[1].c := 473.0;
  tan.flueWall[4].layers.material[1].d := 7801.0;
  tan.flueWall[4].layers.material[1].nStaRef := 6;
  tan.flueWall[4].layers.material[1].steadyState := false;
  tan.flueWall[4].layers.material[1].piRef := 331.4;
  tan.flueWall[4].layers.material[1].piMat := 0.669261360412676;
  tan.flueWall[4].layers.material[1].nStaReal := 0.012116982988763;
  tan.flueWall[4].opa.layers.material[1].c := 473.0;
  tan.flueWall[4].opa.layers.material[1].d := 7801.0;
  tan.flueWall[4].opa.layers.material[1].nStaRef := 6;
  tan.flueWall[4].opa.layers.material[1].steadyState := false;
  tan.flueWall[4].opa.layers.material[1].piRef := 331.4;
  tan.flueWall[4].opa.layers.material[1].piMat := 0.669261360412676;
  tan.flueWall[4].opa.layers.material[1].nStaReal := 0.012116982988763;
  tan.flueWall[4].opa.lay[1].material.c := 473.0;
  tan.flueWall[4].opa.lay[1].material.d := 7801.0;
  tan.flueWall[4].opa.lay[1].material.nStaRef := 6;
  tan.flueWall[4].opa.lay[1].material.nSta := 1;
  tan.flueWall[4].opa.lay[1].material.steadyState := false;
  tan.flueWall[4].opa.lay[1].material.piRef := 331.4;
  tan.flueWall[4].opa.lay[1].material.piMat := 0.669261360412676;
  tan.flueWall[4].opa.lay[1].material.nStaReal := 0.012116982988763;
  tan.flueWall[4].opa.lay[1].steadyStateInitial := false;
  tan.flueWall[4].opa.lay[1].nSta := 1;
  tan.flueWall[5].layers.material[1].c := 473.0;
  tan.flueWall[5].layers.material[1].d := 7801.0;
  tan.flueWall[5].layers.material[1].nStaRef := 6;
  tan.flueWall[5].layers.material[1].steadyState := false;
  tan.flueWall[5].layers.material[1].piRef := 331.4;
  tan.flueWall[5].layers.material[1].piMat := 0.669261360412676;
  tan.flueWall[5].layers.material[1].nStaReal := 0.012116982988763;
  tan.flueWall[5].opa.layers.material[1].c := 473.0;
  tan.flueWall[5].opa.layers.material[1].d := 7801.0;
  tan.flueWall[5].opa.layers.material[1].nStaRef := 6;
  tan.flueWall[5].opa.layers.material[1].steadyState := false;
  tan.flueWall[5].opa.layers.material[1].piRef := 331.4;
  tan.flueWall[5].opa.layers.material[1].piMat := 0.669261360412676;
  tan.flueWall[5].opa.layers.material[1].nStaReal := 0.012116982988763;
  tan.flueWall[5].opa.lay[1].material.c := 473.0;
  tan.flueWall[5].opa.lay[1].material.d := 7801.0;
  tan.flueWall[5].opa.lay[1].material.nStaRef := 6;
  tan.flueWall[5].opa.lay[1].material.nSta := 1;
  tan.flueWall[5].opa.lay[1].material.steadyState := false;
  tan.flueWall[5].opa.lay[1].material.piRef := 331.4;
  tan.flueWall[5].opa.lay[1].material.piMat := 0.669261360412676;
  tan.flueWall[5].opa.lay[1].material.nStaReal := 0.012116982988763;
  tan.flueWall[5].opa.lay[1].steadyStateInitial := false;
  tan.flueWall[5].opa.lay[1].nSta := 1;
  tan.flueWall[6].layers.material[1].c := 473.0;
  tan.flueWall[6].layers.material[1].d := 7801.0;
  tan.flueWall[6].layers.material[1].nStaRef := 6;
  tan.flueWall[6].layers.material[1].steadyState := false;
  tan.flueWall[6].layers.material[1].piRef := 331.4;
  tan.flueWall[6].layers.material[1].piMat := 0.669261360412676;
  tan.flueWall[6].layers.material[1].nStaReal := 0.012116982988763;
  tan.flueWall[6].opa.layers.material[1].c := 473.0;
  tan.flueWall[6].opa.layers.material[1].d := 7801.0;
  tan.flueWall[6].opa.layers.material[1].nStaRef := 6;
  tan.flueWall[6].opa.layers.material[1].steadyState := false;
  tan.flueWall[6].opa.layers.material[1].piRef := 331.4;
  tan.flueWall[6].opa.layers.material[1].piMat := 0.669261360412676;
  tan.flueWall[6].opa.layers.material[1].nStaReal := 0.012116982988763;
  tan.flueWall[6].opa.lay[1].material.c := 473.0;
  tan.flueWall[6].opa.lay[1].material.d := 7801.0;
  tan.flueWall[6].opa.lay[1].material.nStaRef := 6;
  tan.flueWall[6].opa.lay[1].material.nSta := 1;
  tan.flueWall[6].opa.lay[1].material.steadyState := false;
  tan.flueWall[6].opa.lay[1].material.piRef := 331.4;
  tan.flueWall[6].opa.lay[1].material.piMat := 0.669261360412676;
  tan.flueWall[6].opa.lay[1].material.nStaReal := 0.012116982988763;
  tan.flueWall[6].opa.lay[1].steadyStateInitial := false;
  tan.flueWall[6].opa.lay[1].nSta := 1;
  tan.flueWall[7].layers.material[1].c := 473.0;
  tan.flueWall[7].layers.material[1].d := 7801.0;
  tan.flueWall[7].layers.material[1].nStaRef := 6;
  tan.flueWall[7].layers.material[1].steadyState := false;
  tan.flueWall[7].layers.material[1].piRef := 331.4;
  tan.flueWall[7].layers.material[1].piMat := 0.669261360412676;
  tan.flueWall[7].layers.material[1].nStaReal := 0.012116982988763;
  tan.flueWall[7].opa.layers.material[1].c := 473.0;
  tan.flueWall[7].opa.layers.material[1].d := 7801.0;
  tan.flueWall[7].opa.layers.material[1].nStaRef := 6;
  tan.flueWall[7].opa.layers.material[1].steadyState := false;
  tan.flueWall[7].opa.layers.material[1].piRef := 331.4;
  tan.flueWall[7].opa.layers.material[1].piMat := 0.669261360412676;
  tan.flueWall[7].opa.layers.material[1].nStaReal := 0.012116982988763;
  tan.flueWall[7].opa.lay[1].material.c := 473.0;
  tan.flueWall[7].opa.lay[1].material.d := 7801.0;
  tan.flueWall[7].opa.lay[1].material.nStaRef := 6;
  tan.flueWall[7].opa.lay[1].material.nSta := 1;
  tan.flueWall[7].opa.lay[1].material.steadyState := false;
  tan.flueWall[7].opa.lay[1].material.piRef := 331.4;
  tan.flueWall[7].opa.lay[1].material.piMat := 0.669261360412676;
  tan.flueWall[7].opa.lay[1].material.nStaReal := 0.012116982988763;
  tan.flueWall[7].opa.lay[1].steadyStateInitial := false;
  tan.flueWall[7].opa.lay[1].nSta := 1;
  tan.flueWall[8].layers.material[1].c := 473.0;
  tan.flueWall[8].layers.material[1].d := 7801.0;
  tan.flueWall[8].layers.material[1].nStaRef := 6;
  tan.flueWall[8].layers.material[1].steadyState := false;
  tan.flueWall[8].layers.material[1].piRef := 331.4;
  tan.flueWall[8].layers.material[1].piMat := 0.669261360412676;
  tan.flueWall[8].layers.material[1].nStaReal := 0.012116982988763;
  tan.flueWall[8].opa.layers.material[1].c := 473.0;
  tan.flueWall[8].opa.layers.material[1].d := 7801.0;
  tan.flueWall[8].opa.layers.material[1].nStaRef := 6;
  tan.flueWall[8].opa.layers.material[1].steadyState := false;
  tan.flueWall[8].opa.layers.material[1].piRef := 331.4;
  tan.flueWall[8].opa.layers.material[1].piMat := 0.669261360412676;
  tan.flueWall[8].opa.layers.material[1].nStaReal := 0.012116982988763;
  tan.flueWall[8].opa.lay[1].material.c := 473.0;
  tan.flueWall[8].opa.lay[1].material.d := 7801.0;
  tan.flueWall[8].opa.lay[1].material.nStaRef := 6;
  tan.flueWall[8].opa.lay[1].material.nSta := 1;
  tan.flueWall[8].opa.lay[1].material.steadyState := false;
  tan.flueWall[8].opa.lay[1].material.piRef := 331.4;
  tan.flueWall[8].opa.lay[1].material.piMat := 0.669261360412676;
  tan.flueWall[8].opa.lay[1].material.nStaReal := 0.012116982988763;
  tan.flueWall[8].opa.lay[1].steadyStateInitial := false;
  tan.flueWall[8].opa.lay[1].nSta := 1;
  tan.flueWall[9].layers.material[1].c := 473.0;
  tan.flueWall[9].layers.material[1].d := 7801.0;
  tan.flueWall[9].layers.material[1].nStaRef := 6;
  tan.flueWall[9].layers.material[1].steadyState := false;
  tan.flueWall[9].layers.material[1].piRef := 331.4;
  tan.flueWall[9].layers.material[1].piMat := 0.669261360412676;
  tan.flueWall[9].layers.material[1].nStaReal := 0.012116982988763;
  tan.flueWall[9].opa.layers.material[1].c := 473.0;
  tan.flueWall[9].opa.layers.material[1].d := 7801.0;
  tan.flueWall[9].opa.layers.material[1].nStaRef := 6;
  tan.flueWall[9].opa.layers.material[1].steadyState := false;
  tan.flueWall[9].opa.layers.material[1].piRef := 331.4;
  tan.flueWall[9].opa.layers.material[1].piMat := 0.669261360412676;
  tan.flueWall[9].opa.layers.material[1].nStaReal := 0.012116982988763;
  tan.flueWall[9].opa.lay[1].material.c := 473.0;
  tan.flueWall[9].opa.lay[1].material.d := 7801.0;
  tan.flueWall[9].opa.lay[1].material.nStaRef := 6;
  tan.flueWall[9].opa.lay[1].material.nSta := 1;
  tan.flueWall[9].opa.lay[1].material.steadyState := false;
  tan.flueWall[9].opa.lay[1].material.piRef := 331.4;
  tan.flueWall[9].opa.lay[1].material.piMat := 0.669261360412676;
  tan.flueWall[9].opa.lay[1].material.nStaReal := 0.012116982988763;
  tan.flueWall[9].opa.lay[1].steadyStateInitial := false;
  tan.flueWall[9].opa.lay[1].nSta := 1;
  tan.flueWall[10].layers.material[1].c := 473.0;
  tan.flueWall[10].layers.material[1].d := 7801.0;
  tan.flueWall[10].layers.material[1].nStaRef := 6;
  tan.flueWall[10].layers.material[1].steadyState := false;
  tan.flueWall[10].layers.material[1].piRef := 331.4;
  tan.flueWall[10].layers.material[1].piMat := 0.669261360412676;
  tan.flueWall[10].layers.material[1].nStaReal := 0.012116982988763;
  tan.flueWall[10].opa.layers.material[1].c := 473.0;
  tan.flueWall[10].opa.layers.material[1].d := 7801.0;
  tan.flueWall[10].opa.layers.material[1].nStaRef := 6;
  tan.flueWall[10].opa.layers.material[1].steadyState := false;
  tan.flueWall[10].opa.layers.material[1].piRef := 331.4;
  tan.flueWall[10].opa.layers.material[1].piMat := 0.669261360412676;
  tan.flueWall[10].opa.layers.material[1].nStaReal := 0.012116982988763;
  tan.flueWall[10].opa.lay[1].material.c := 473.0;
  tan.flueWall[10].opa.lay[1].material.d := 7801.0;
  tan.flueWall[10].opa.lay[1].material.nStaRef := 6;
  tan.flueWall[10].opa.lay[1].material.nSta := 1;
  tan.flueWall[10].opa.lay[1].material.steadyState := false;
  tan.flueWall[10].opa.lay[1].material.piRef := 331.4;
  tan.flueWall[10].opa.lay[1].material.piMat := 0.669261360412676;
  tan.flueWall[10].opa.lay[1].material.nStaReal := 0.012116982988763;
  tan.flueWall[10].opa.lay[1].steadyStateInitial := false;
  tan.flueWall[10].opa.lay[1].nSta := 1;
  tan.datTanEnv.layers.material[1].c := 473.0;
  tan.conExt[1].layers.material[1].c := 473.0;
  tan.datTanEnv.layers.material[1].d := 7801.0;
  tan.conExt[1].layers.material[1].d := 7801.0;
  tan.datTanEnv.layers.material[1].nStaRef := 6;
  tan.conExt[1].layers.material[1].nStaRef := 6;
  tan.datTanEnv.layers.material[1].steadyState := false;
  tan.conExt[1].layers.material[1].steadyState := false;
  tan.datTanEnv.layers.material[1].piRef := 331.4;
  tan.conExt[1].layers.material[1].piRef := 331.4;
  tan.datTanEnv.layers.material[1].piMat := 10.6655196878514;
  tan.conExt[1].layers.material[1].piMat := 10.6655196878514;
  tan.datTanEnv.layers.material[1].nStaReal := 0.193099330498215;
  tan.conExt[1].layers.material[1].nStaReal := 0.193099330498215;
  tan.datTanEnv.layers.material[2].c := 1380.0;
  tan.conExt[1].layers.material[2].c := 1380.0;
  tan.datTanEnv.layers.material[2].d := 150.0;
  tan.conExt[1].layers.material[2].d := 150.0;
  tan.datTanEnv.layers.material[2].nStaRef := 6;
  tan.conExt[1].layers.material[2].nStaRef := 6;
  tan.datTanEnv.layers.material[2].steadyState := false;
  tan.conExt[1].layers.material[2].steadyState := false;
  tan.datTanEnv.layers.material[2].piRef := 331.4;
  tan.conExt[1].layers.material[2].piRef := 331.4;
  tan.datTanEnv.layers.material[2].piMat := 4.54972526643093;
  tan.conExt[1].layers.material[2].piMat := 4.54972526643093;
  tan.datTanEnv.layers.material[2].nStaReal := 0.0823728171351406;
  tan.conExt[1].layers.material[2].nStaReal := 0.0823728171351406;
  tan.conExt[1].opa.layers.material[1].c := 473.0;
  tan.conExt[1].opa.layers.material[1].d := 7801.0;
  tan.conExt[1].opa.layers.material[1].nStaRef := 6;
  tan.conExt[1].opa.layers.material[1].steadyState := false;
  tan.conExt[1].opa.layers.material[1].piRef := 331.4;
  tan.conExt[1].opa.layers.material[1].piMat := 10.6655196878514;
  tan.conExt[1].opa.layers.material[1].nStaReal := 0.193099330498215;
  tan.conExt[1].opa.layers.material[2].c := 1380.0;
  tan.conExt[1].opa.layers.material[2].d := 150.0;
  tan.conExt[1].opa.layers.material[2].nStaRef := 6;
  tan.conExt[1].opa.layers.material[2].steadyState := false;
  tan.conExt[1].opa.layers.material[2].piRef := 331.4;
  tan.conExt[1].opa.layers.material[2].piMat := 4.54972526643093;
  tan.conExt[1].opa.layers.material[2].nStaReal := 0.0823728171351406;
  tan.conExt[1].opa.lay[1].material.c := 473.0;
  tan.conExt[1].opa.lay[1].material.d := 7801.0;
  tan.conExt[1].opa.lay[1].material.nStaRef := 6;
  tan.conExt[1].opa.lay[1].material.nSta := 1;
  tan.conExt[1].opa.lay[1].material.steadyState := false;
  tan.conExt[1].opa.lay[1].material.piRef := 331.4;
  tan.conExt[1].opa.lay[1].material.piMat := 10.6655196878514;
  tan.conExt[1].opa.lay[1].material.nStaReal := 0.193099330498215;
  tan.conExt[1].opa.lay[1].steadyStateInitial := false;
  tan.conExt[1].opa.lay[1].nSta := 1;
  tan.conExt[1].opa.lay[2].material.c := 1380.0;
  tan.conExt[1].opa.lay[2].material.d := 150.0;
  tan.conExt[1].opa.lay[2].material.nStaRef := 6;
  tan.conExt[1].opa.lay[2].material.nSta := 1;
  tan.conExt[1].opa.lay[2].material.steadyState := false;
  tan.conExt[1].opa.lay[2].material.piRef := 331.4;
  tan.conExt[1].opa.lay[2].material.piMat := 4.54972526643093;
  tan.conExt[1].opa.lay[2].material.nStaReal := 0.0823728171351406;
  tan.conExt[1].opa.lay[2].steadyStateInitial := false;
  tan.conExt[1].opa.lay[2].nSta := 1;
  tan.conExt[2].layers.material[1].c := 473.0;
  tan.conExt[2].layers.material[1].d := 7801.0;
  tan.conExt[2].layers.material[1].nStaRef := 6;
  tan.conExt[2].layers.material[1].steadyState := false;
  tan.conExt[2].layers.material[1].piRef := 331.4;
  tan.conExt[2].layers.material[1].piMat := 10.6655196878514;
  tan.conExt[2].layers.material[1].nStaReal := 0.193099330498215;
  tan.conExt[2].layers.material[2].c := 1380.0;
  tan.conExt[2].layers.material[2].d := 150.0;
  tan.conExt[2].layers.material[2].nStaRef := 6;
  tan.conExt[2].layers.material[2].steadyState := false;
  tan.conExt[2].layers.material[2].piRef := 331.4;
  tan.conExt[2].layers.material[2].piMat := 4.54972526643093;
  tan.conExt[2].layers.material[2].nStaReal := 0.0823728171351406;
  tan.conExt[2].opa.layers.material[1].c := 473.0;
  tan.conExt[2].opa.layers.material[1].d := 7801.0;
  tan.conExt[2].opa.layers.material[1].nStaRef := 6;
  tan.conExt[2].opa.layers.material[1].steadyState := false;
  tan.conExt[2].opa.layers.material[1].piRef := 331.4;
  tan.conExt[2].opa.layers.material[1].piMat := 10.6655196878514;
  tan.conExt[2].opa.layers.material[1].nStaReal := 0.193099330498215;
  tan.conExt[2].opa.layers.material[2].c := 1380.0;
  tan.conExt[2].opa.layers.material[2].d := 150.0;
  tan.conExt[2].opa.layers.material[2].nStaRef := 6;
  tan.conExt[2].opa.layers.material[2].steadyState := false;
  tan.conExt[2].opa.layers.material[2].piRef := 331.4;
  tan.conExt[2].opa.layers.material[2].piMat := 4.54972526643093;
  tan.conExt[2].opa.layers.material[2].nStaReal := 0.0823728171351406;
  tan.conExt[2].opa.lay[1].material.c := 473.0;
  tan.conExt[2].opa.lay[1].material.d := 7801.0;
  tan.conExt[2].opa.lay[1].material.nStaRef := 6;
  tan.conExt[2].opa.lay[1].material.nSta := 1;
  tan.conExt[2].opa.lay[1].material.steadyState := false;
  tan.conExt[2].opa.lay[1].material.piRef := 331.4;
  tan.conExt[2].opa.lay[1].material.piMat := 10.6655196878514;
  tan.conExt[2].opa.lay[1].material.nStaReal := 0.193099330498215;
  tan.conExt[2].opa.lay[1].steadyStateInitial := false;
  tan.conExt[2].opa.lay[1].nSta := 1;
  tan.conExt[2].opa.lay[2].material.c := 1380.0;
  tan.conExt[2].opa.lay[2].material.d := 150.0;
  tan.conExt[2].opa.lay[2].material.nStaRef := 6;
  tan.conExt[2].opa.lay[2].material.nSta := 1;
  tan.conExt[2].opa.lay[2].material.steadyState := false;
  tan.conExt[2].opa.lay[2].material.piRef := 331.4;
  tan.conExt[2].opa.lay[2].material.piMat := 4.54972526643093;
  tan.conExt[2].opa.lay[2].material.nStaReal := 0.0823728171351406;
  tan.conExt[2].opa.lay[2].steadyStateInitial := false;
  tan.conExt[2].opa.lay[2].nSta := 1;
  tan.conExt[3].layers.material[1].c := 473.0;
  tan.conExt[3].layers.material[1].d := 7801.0;
  tan.conExt[3].layers.material[1].nStaRef := 6;
  tan.conExt[3].layers.material[1].steadyState := false;
  tan.conExt[3].layers.material[1].piRef := 331.4;
  tan.conExt[3].layers.material[1].piMat := 10.6655196878514;
  tan.conExt[3].layers.material[1].nStaReal := 0.193099330498215;
  tan.conExt[3].layers.material[2].c := 1380.0;
  tan.conExt[3].layers.material[2].d := 150.0;
  tan.conExt[3].layers.material[2].nStaRef := 6;
  tan.conExt[3].layers.material[2].steadyState := false;
  tan.conExt[3].layers.material[2].piRef := 331.4;
  tan.conExt[3].layers.material[2].piMat := 4.54972526643093;
  tan.conExt[3].layers.material[2].nStaReal := 0.0823728171351406;
  tan.conExt[3].opa.layers.material[1].c := 473.0;
  tan.conExt[3].opa.layers.material[1].d := 7801.0;
  tan.conExt[3].opa.layers.material[1].nStaRef := 6;
  tan.conExt[3].opa.layers.material[1].steadyState := false;
  tan.conExt[3].opa.layers.material[1].piRef := 331.4;
  tan.conExt[3].opa.layers.material[1].piMat := 10.6655196878514;
  tan.conExt[3].opa.layers.material[1].nStaReal := 0.193099330498215;
  tan.conExt[3].opa.layers.material[2].c := 1380.0;
  tan.conExt[3].opa.layers.material[2].d := 150.0;
  tan.conExt[3].opa.layers.material[2].nStaRef := 6;
  tan.conExt[3].opa.layers.material[2].steadyState := false;
  tan.conExt[3].opa.layers.material[2].piRef := 331.4;
  tan.conExt[3].opa.layers.material[2].piMat := 4.54972526643093;
  tan.conExt[3].opa.layers.material[2].nStaReal := 0.0823728171351406;
  tan.conExt[3].opa.lay[1].material.c := 473.0;
  tan.conExt[3].opa.lay[1].material.d := 7801.0;
  tan.conExt[3].opa.lay[1].material.nStaRef := 6;
  tan.conExt[3].opa.lay[1].material.nSta := 1;
  tan.conExt[3].opa.lay[1].material.steadyState := false;
  tan.conExt[3].opa.lay[1].material.piRef := 331.4;
  tan.conExt[3].opa.lay[1].material.piMat := 10.6655196878514;
  tan.conExt[3].opa.lay[1].material.nStaReal := 0.193099330498215;
  tan.conExt[3].opa.lay[1].steadyStateInitial := false;
  tan.conExt[3].opa.lay[1].nSta := 1;
  tan.conExt[3].opa.lay[2].material.c := 1380.0;
  tan.conExt[3].opa.lay[2].material.d := 150.0;
  tan.conExt[3].opa.lay[2].material.nStaRef := 6;
  tan.conExt[3].opa.lay[2].material.nSta := 1;
  tan.conExt[3].opa.lay[2].material.steadyState := false;
  tan.conExt[3].opa.lay[2].material.piRef := 331.4;
  tan.conExt[3].opa.lay[2].material.piMat := 4.54972526643093;
  tan.conExt[3].opa.lay[2].material.nStaReal := 0.0823728171351406;
  tan.conExt[3].opa.lay[2].steadyStateInitial := false;
  tan.conExt[3].opa.lay[2].nSta := 1;
  tan.conExt[4].layers.material[1].c := 473.0;
  tan.conExt[4].layers.material[1].d := 7801.0;
  tan.conExt[4].layers.material[1].nStaRef := 6;
  tan.conExt[4].layers.material[1].steadyState := false;
  tan.conExt[4].layers.material[1].piRef := 331.4;
  tan.conExt[4].layers.material[1].piMat := 10.6655196878514;
  tan.conExt[4].layers.material[1].nStaReal := 0.193099330498215;
  tan.conExt[4].layers.material[2].c := 1380.0;
  tan.conExt[4].layers.material[2].d := 150.0;
  tan.conExt[4].layers.material[2].nStaRef := 6;
  tan.conExt[4].layers.material[2].steadyState := false;
  tan.conExt[4].layers.material[2].piRef := 331.4;
  tan.conExt[4].layers.material[2].piMat := 4.54972526643093;
  tan.conExt[4].layers.material[2].nStaReal := 0.0823728171351406;
  tan.conExt[4].opa.layers.material[1].c := 473.0;
  tan.conExt[4].opa.layers.material[1].d := 7801.0;
  tan.conExt[4].opa.layers.material[1].nStaRef := 6;
  tan.conExt[4].opa.layers.material[1].steadyState := false;
  tan.conExt[4].opa.layers.material[1].piRef := 331.4;
  tan.conExt[4].opa.layers.material[1].piMat := 10.6655196878514;
  tan.conExt[4].opa.layers.material[1].nStaReal := 0.193099330498215;
  tan.conExt[4].opa.layers.material[2].c := 1380.0;
  tan.conExt[4].opa.layers.material[2].d := 150.0;
  tan.conExt[4].opa.layers.material[2].nStaRef := 6;
  tan.conExt[4].opa.layers.material[2].steadyState := false;
  tan.conExt[4].opa.layers.material[2].piRef := 331.4;
  tan.conExt[4].opa.layers.material[2].piMat := 4.54972526643093;
  tan.conExt[4].opa.layers.material[2].nStaReal := 0.0823728171351406;
  tan.conExt[4].opa.lay[1].material.c := 473.0;
  tan.conExt[4].opa.lay[1].material.d := 7801.0;
  tan.conExt[4].opa.lay[1].material.nStaRef := 6;
  tan.conExt[4].opa.lay[1].material.nSta := 1;
  tan.conExt[4].opa.lay[1].material.steadyState := false;
  tan.conExt[4].opa.lay[1].material.piRef := 331.4;
  tan.conExt[4].opa.lay[1].material.piMat := 10.6655196878514;
  tan.conExt[4].opa.lay[1].material.nStaReal := 0.193099330498215;
  tan.conExt[4].opa.lay[1].steadyStateInitial := false;
  tan.conExt[4].opa.lay[1].nSta := 1;
  tan.conExt[4].opa.lay[2].material.c := 1380.0;
  tan.conExt[4].opa.lay[2].material.d := 150.0;
  tan.conExt[4].opa.lay[2].material.nStaRef := 6;
  tan.conExt[4].opa.lay[2].material.nSta := 1;
  tan.conExt[4].opa.lay[2].material.steadyState := false;
  tan.conExt[4].opa.lay[2].material.piRef := 331.4;
  tan.conExt[4].opa.lay[2].material.piMat := 4.54972526643093;
  tan.conExt[4].opa.lay[2].material.nStaReal := 0.0823728171351406;
  tan.conExt[4].opa.lay[2].steadyStateInitial := false;
  tan.conExt[4].opa.lay[2].nSta := 1;
  tan.conExt[5].layers.material[1].c := 473.0;
  tan.conExt[5].layers.material[1].d := 7801.0;
  tan.conExt[5].layers.material[1].nStaRef := 6;
  tan.conExt[5].layers.material[1].steadyState := false;
  tan.conExt[5].layers.material[1].piRef := 331.4;
  tan.conExt[5].layers.material[1].piMat := 10.6655196878514;
  tan.conExt[5].layers.material[1].nStaReal := 0.193099330498215;
  tan.conExt[5].layers.material[2].c := 1380.0;
  tan.conExt[5].layers.material[2].d := 150.0;
  tan.conExt[5].layers.material[2].nStaRef := 6;
  tan.conExt[5].layers.material[2].steadyState := false;
  tan.conExt[5].layers.material[2].piRef := 331.4;
  tan.conExt[5].layers.material[2].piMat := 4.54972526643093;
  tan.conExt[5].layers.material[2].nStaReal := 0.0823728171351406;
  tan.conExt[5].opa.layers.material[1].c := 473.0;
  tan.conExt[5].opa.layers.material[1].d := 7801.0;
  tan.conExt[5].opa.layers.material[1].nStaRef := 6;
  tan.conExt[5].opa.layers.material[1].steadyState := false;
  tan.conExt[5].opa.layers.material[1].piRef := 331.4;
  tan.conExt[5].opa.layers.material[1].piMat := 10.6655196878514;
  tan.conExt[5].opa.layers.material[1].nStaReal := 0.193099330498215;
  tan.conExt[5].opa.layers.material[2].c := 1380.0;
  tan.conExt[5].opa.layers.material[2].d := 150.0;
  tan.conExt[5].opa.layers.material[2].nStaRef := 6;
  tan.conExt[5].opa.layers.material[2].steadyState := false;
  tan.conExt[5].opa.layers.material[2].piRef := 331.4;
  tan.conExt[5].opa.layers.material[2].piMat := 4.54972526643093;
  tan.conExt[5].opa.layers.material[2].nStaReal := 0.0823728171351406;
  tan.conExt[5].opa.lay[1].material.c := 473.0;
  tan.conExt[5].opa.lay[1].material.d := 7801.0;
  tan.conExt[5].opa.lay[1].material.nStaRef := 6;
  tan.conExt[5].opa.lay[1].material.nSta := 1;
  tan.conExt[5].opa.lay[1].material.steadyState := false;
  tan.conExt[5].opa.lay[1].material.piRef := 331.4;
  tan.conExt[5].opa.lay[1].material.piMat := 10.6655196878514;
  tan.conExt[5].opa.lay[1].material.nStaReal := 0.193099330498215;
  tan.conExt[5].opa.lay[1].steadyStateInitial := false;
  tan.conExt[5].opa.lay[1].nSta := 1;
  tan.conExt[5].opa.lay[2].material.c := 1380.0;
  tan.conExt[5].opa.lay[2].material.d := 150.0;
  tan.conExt[5].opa.lay[2].material.nStaRef := 6;
  tan.conExt[5].opa.lay[2].material.nSta := 1;
  tan.conExt[5].opa.lay[2].material.steadyState := false;
  tan.conExt[5].opa.lay[2].material.piRef := 331.4;
  tan.conExt[5].opa.lay[2].material.piMat := 4.54972526643093;
  tan.conExt[5].opa.lay[2].material.nStaReal := 0.0823728171351406;
  tan.conExt[5].opa.lay[2].steadyStateInitial := false;
  tan.conExt[5].opa.lay[2].nSta := 1;
  tan.conExt[6].layers.material[1].c := 473.0;
  tan.conExt[6].layers.material[1].d := 7801.0;
  tan.conExt[6].layers.material[1].nStaRef := 6;
  tan.conExt[6].layers.material[1].steadyState := false;
  tan.conExt[6].layers.material[1].piRef := 331.4;
  tan.conExt[6].layers.material[1].piMat := 10.6655196878514;
  tan.conExt[6].layers.material[1].nStaReal := 0.193099330498215;
  tan.conExt[6].layers.material[2].c := 1380.0;
  tan.conExt[6].layers.material[2].d := 150.0;
  tan.conExt[6].layers.material[2].nStaRef := 6;
  tan.conExt[6].layers.material[2].steadyState := false;
  tan.conExt[6].layers.material[2].piRef := 331.4;
  tan.conExt[6].layers.material[2].piMat := 4.54972526643093;
  tan.conExt[6].layers.material[2].nStaReal := 0.0823728171351406;
  tan.conExt[6].opa.layers.material[1].c := 473.0;
  tan.conExt[6].opa.layers.material[1].d := 7801.0;
  tan.conExt[6].opa.layers.material[1].nStaRef := 6;
  tan.conExt[6].opa.layers.material[1].steadyState := false;
  tan.conExt[6].opa.layers.material[1].piRef := 331.4;
  tan.conExt[6].opa.layers.material[1].piMat := 10.6655196878514;
  tan.conExt[6].opa.layers.material[1].nStaReal := 0.193099330498215;
  tan.conExt[6].opa.layers.material[2].c := 1380.0;
  tan.conExt[6].opa.layers.material[2].d := 150.0;
  tan.conExt[6].opa.layers.material[2].nStaRef := 6;
  tan.conExt[6].opa.layers.material[2].steadyState := false;
  tan.conExt[6].opa.layers.material[2].piRef := 331.4;
  tan.conExt[6].opa.layers.material[2].piMat := 4.54972526643093;
  tan.conExt[6].opa.layers.material[2].nStaReal := 0.0823728171351406;
  tan.conExt[6].opa.lay[1].material.c := 473.0;
  tan.conExt[6].opa.lay[1].material.d := 7801.0;
  tan.conExt[6].opa.lay[1].material.nStaRef := 6;
  tan.conExt[6].opa.lay[1].material.nSta := 1;
  tan.conExt[6].opa.lay[1].material.steadyState := false;
  tan.conExt[6].opa.lay[1].material.piRef := 331.4;
  tan.conExt[6].opa.lay[1].material.piMat := 10.6655196878514;
  tan.conExt[6].opa.lay[1].material.nStaReal := 0.193099330498215;
  tan.conExt[6].opa.lay[1].steadyStateInitial := false;
  tan.conExt[6].opa.lay[1].nSta := 1;
  tan.conExt[6].opa.lay[2].material.c := 1380.0;
  tan.conExt[6].opa.lay[2].material.d := 150.0;
  tan.conExt[6].opa.lay[2].material.nStaRef := 6;
  tan.conExt[6].opa.lay[2].material.nSta := 1;
  tan.conExt[6].opa.lay[2].material.steadyState := false;
  tan.conExt[6].opa.lay[2].material.piRef := 331.4;
  tan.conExt[6].opa.lay[2].material.piMat := 4.54972526643093;
  tan.conExt[6].opa.lay[2].material.nStaReal := 0.0823728171351406;
  tan.conExt[6].opa.lay[2].steadyStateInitial := false;
  tan.conExt[6].opa.lay[2].nSta := 1;
  tan.conExt[7].layers.material[1].c := 473.0;
  tan.conExt[7].layers.material[1].d := 7801.0;
  tan.conExt[7].layers.material[1].nStaRef := 6;
  tan.conExt[7].layers.material[1].steadyState := false;
  tan.conExt[7].layers.material[1].piRef := 331.4;
  tan.conExt[7].layers.material[1].piMat := 10.6655196878514;
  tan.conExt[7].layers.material[1].nStaReal := 0.193099330498215;
  tan.conExt[7].layers.material[2].c := 1380.0;
  tan.conExt[7].layers.material[2].d := 150.0;
  tan.conExt[7].layers.material[2].nStaRef := 6;
  tan.conExt[7].layers.material[2].steadyState := false;
  tan.conExt[7].layers.material[2].piRef := 331.4;
  tan.conExt[7].layers.material[2].piMat := 4.54972526643093;
  tan.conExt[7].layers.material[2].nStaReal := 0.0823728171351406;
  tan.conExt[7].opa.layers.material[1].c := 473.0;
  tan.conExt[7].opa.layers.material[1].d := 7801.0;
  tan.conExt[7].opa.layers.material[1].nStaRef := 6;
  tan.conExt[7].opa.layers.material[1].steadyState := false;
  tan.conExt[7].opa.layers.material[1].piRef := 331.4;
  tan.conExt[7].opa.layers.material[1].piMat := 10.6655196878514;
  tan.conExt[7].opa.layers.material[1].nStaReal := 0.193099330498215;
  tan.conExt[7].opa.layers.material[2].c := 1380.0;
  tan.conExt[7].opa.layers.material[2].d := 150.0;
  tan.conExt[7].opa.layers.material[2].nStaRef := 6;
  tan.conExt[7].opa.layers.material[2].steadyState := false;
  tan.conExt[7].opa.layers.material[2].piRef := 331.4;
  tan.conExt[7].opa.layers.material[2].piMat := 4.54972526643093;
  tan.conExt[7].opa.layers.material[2].nStaReal := 0.0823728171351406;
  tan.conExt[7].opa.lay[1].material.c := 473.0;
  tan.conExt[7].opa.lay[1].material.d := 7801.0;
  tan.conExt[7].opa.lay[1].material.nStaRef := 6;
  tan.conExt[7].opa.lay[1].material.nSta := 1;
  tan.conExt[7].opa.lay[1].material.steadyState := false;
  tan.conExt[7].opa.lay[1].material.piRef := 331.4;
  tan.conExt[7].opa.lay[1].material.piMat := 10.6655196878514;
  tan.conExt[7].opa.lay[1].material.nStaReal := 0.193099330498215;
  tan.conExt[7].opa.lay[1].steadyStateInitial := false;
  tan.conExt[7].opa.lay[1].nSta := 1;
  tan.conExt[7].opa.lay[2].material.c := 1380.0;
  tan.conExt[7].opa.lay[2].material.d := 150.0;
  tan.conExt[7].opa.lay[2].material.nStaRef := 6;
  tan.conExt[7].opa.lay[2].material.nSta := 1;
  tan.conExt[7].opa.lay[2].material.steadyState := false;
  tan.conExt[7].opa.lay[2].material.piRef := 331.4;
  tan.conExt[7].opa.lay[2].material.piMat := 4.54972526643093;
  tan.conExt[7].opa.lay[2].material.nStaReal := 0.0823728171351406;
  tan.conExt[7].opa.lay[2].steadyStateInitial := false;
  tan.conExt[7].opa.lay[2].nSta := 1;
  tan.conExt[8].layers.material[1].c := 473.0;
  tan.conExt[8].layers.material[1].d := 7801.0;
  tan.conExt[8].layers.material[1].nStaRef := 6;
  tan.conExt[8].layers.material[1].steadyState := false;
  tan.conExt[8].layers.material[1].piRef := 331.4;
  tan.conExt[8].layers.material[1].piMat := 10.6655196878514;
  tan.conExt[8].layers.material[1].nStaReal := 0.193099330498215;
  tan.conExt[8].layers.material[2].c := 1380.0;
  tan.conExt[8].layers.material[2].d := 150.0;
  tan.conExt[8].layers.material[2].nStaRef := 6;
  tan.conExt[8].layers.material[2].steadyState := false;
  tan.conExt[8].layers.material[2].piRef := 331.4;
  tan.conExt[8].layers.material[2].piMat := 4.54972526643093;
  tan.conExt[8].layers.material[2].nStaReal := 0.0823728171351406;
  tan.conExt[8].opa.layers.material[1].c := 473.0;
  tan.conExt[8].opa.layers.material[1].d := 7801.0;
  tan.conExt[8].opa.layers.material[1].nStaRef := 6;
  tan.conExt[8].opa.layers.material[1].steadyState := false;
  tan.conExt[8].opa.layers.material[1].piRef := 331.4;
  tan.conExt[8].opa.layers.material[1].piMat := 10.6655196878514;
  tan.conExt[8].opa.layers.material[1].nStaReal := 0.193099330498215;
  tan.conExt[8].opa.layers.material[2].c := 1380.0;
  tan.conExt[8].opa.layers.material[2].d := 150.0;
  tan.conExt[8].opa.layers.material[2].nStaRef := 6;
  tan.conExt[8].opa.layers.material[2].steadyState := false;
  tan.conExt[8].opa.layers.material[2].piRef := 331.4;
  tan.conExt[8].opa.layers.material[2].piMat := 4.54972526643093;
  tan.conExt[8].opa.layers.material[2].nStaReal := 0.0823728171351406;
  tan.conExt[8].opa.lay[1].material.c := 473.0;
  tan.conExt[8].opa.lay[1].material.d := 7801.0;
  tan.conExt[8].opa.lay[1].material.nStaRef := 6;
  tan.conExt[8].opa.lay[1].material.nSta := 1;
  tan.conExt[8].opa.lay[1].material.steadyState := false;
  tan.conExt[8].opa.lay[1].material.piRef := 331.4;
  tan.conExt[8].opa.lay[1].material.piMat := 10.6655196878514;
  tan.conExt[8].opa.lay[1].material.nStaReal := 0.193099330498215;
  tan.conExt[8].opa.lay[1].steadyStateInitial := false;
  tan.conExt[8].opa.lay[1].nSta := 1;
  tan.conExt[8].opa.lay[2].material.c := 1380.0;
  tan.conExt[8].opa.lay[2].material.d := 150.0;
  tan.conExt[8].opa.lay[2].material.nStaRef := 6;
  tan.conExt[8].opa.lay[2].material.nSta := 1;
  tan.conExt[8].opa.lay[2].material.steadyState := false;
  tan.conExt[8].opa.lay[2].material.piRef := 331.4;
  tan.conExt[8].opa.lay[2].material.piMat := 4.54972526643093;
  tan.conExt[8].opa.lay[2].material.nStaReal := 0.0823728171351406;
  tan.conExt[8].opa.lay[2].steadyStateInitial := false;
  tan.conExt[8].opa.lay[2].nSta := 1;
  tan.conExt[9].layers.material[1].c := 473.0;
  tan.conExt[9].layers.material[1].d := 7801.0;
  tan.conExt[9].layers.material[1].nStaRef := 6;
  tan.conExt[9].layers.material[1].steadyState := false;
  tan.conExt[9].layers.material[1].piRef := 331.4;
  tan.conExt[9].layers.material[1].piMat := 10.6655196878514;
  tan.conExt[9].layers.material[1].nStaReal := 0.193099330498215;
  tan.conExt[9].layers.material[2].c := 1380.0;
  tan.conExt[9].layers.material[2].d := 150.0;
  tan.conExt[9].layers.material[2].nStaRef := 6;
  tan.conExt[9].layers.material[2].steadyState := false;
  tan.conExt[9].layers.material[2].piRef := 331.4;
  tan.conExt[9].layers.material[2].piMat := 4.54972526643093;
  tan.conExt[9].layers.material[2].nStaReal := 0.0823728171351406;
  tan.conExt[9].opa.layers.material[1].c := 473.0;
  tan.conExt[9].opa.layers.material[1].d := 7801.0;
  tan.conExt[9].opa.layers.material[1].nStaRef := 6;
  tan.conExt[9].opa.layers.material[1].steadyState := false;
  tan.conExt[9].opa.layers.material[1].piRef := 331.4;
  tan.conExt[9].opa.layers.material[1].piMat := 10.6655196878514;
  tan.conExt[9].opa.layers.material[1].nStaReal := 0.193099330498215;
  tan.conExt[9].opa.layers.material[2].c := 1380.0;
  tan.conExt[9].opa.layers.material[2].d := 150.0;
  tan.conExt[9].opa.layers.material[2].nStaRef := 6;
  tan.conExt[9].opa.layers.material[2].steadyState := false;
  tan.conExt[9].opa.layers.material[2].piRef := 331.4;
  tan.conExt[9].opa.layers.material[2].piMat := 4.54972526643093;
  tan.conExt[9].opa.layers.material[2].nStaReal := 0.0823728171351406;
  tan.conExt[9].opa.lay[1].material.c := 473.0;
  tan.conExt[9].opa.lay[1].material.d := 7801.0;
  tan.conExt[9].opa.lay[1].material.nStaRef := 6;
  tan.conExt[9].opa.lay[1].material.nSta := 1;
  tan.conExt[9].opa.lay[1].material.steadyState := false;
  tan.conExt[9].opa.lay[1].material.piRef := 331.4;
  tan.conExt[9].opa.lay[1].material.piMat := 10.6655196878514;
  tan.conExt[9].opa.lay[1].material.nStaReal := 0.193099330498215;
  tan.conExt[9].opa.lay[1].steadyStateInitial := false;
  tan.conExt[9].opa.lay[1].nSta := 1;
  tan.conExt[9].opa.lay[2].material.c := 1380.0;
  tan.conExt[9].opa.lay[2].material.d := 150.0;
  tan.conExt[9].opa.lay[2].material.nStaRef := 6;
  tan.conExt[9].opa.lay[2].material.nSta := 1;
  tan.conExt[9].opa.lay[2].material.steadyState := false;
  tan.conExt[9].opa.lay[2].material.piRef := 331.4;
  tan.conExt[9].opa.lay[2].material.piMat := 4.54972526643093;
  tan.conExt[9].opa.lay[2].material.nStaReal := 0.0823728171351406;
  tan.conExt[9].opa.lay[2].steadyStateInitial := false;
  tan.conExt[9].opa.lay[2].nSta := 1;
  tan.conExt[10].layers.material[1].c := 473.0;
  tan.conExt[10].layers.material[1].d := 7801.0;
  tan.conExt[10].layers.material[1].nStaRef := 6;
  tan.conExt[10].layers.material[1].steadyState := false;
  tan.conExt[10].layers.material[1].piRef := 331.4;
  tan.conExt[10].layers.material[1].piMat := 10.6655196878514;
  tan.conExt[10].layers.material[1].nStaReal := 0.193099330498215;
  tan.conExt[10].layers.material[2].c := 1380.0;
  tan.conExt[10].layers.material[2].d := 150.0;
  tan.conExt[10].layers.material[2].nStaRef := 6;
  tan.conExt[10].layers.material[2].steadyState := false;
  tan.conExt[10].layers.material[2].piRef := 331.4;
  tan.conExt[10].layers.material[2].piMat := 4.54972526643093;
  tan.conExt[10].layers.material[2].nStaReal := 0.0823728171351406;
  tan.conExt[10].opa.layers.material[1].c := 473.0;
  tan.conExt[10].opa.layers.material[1].d := 7801.0;
  tan.conExt[10].opa.layers.material[1].nStaRef := 6;
  tan.conExt[10].opa.layers.material[1].steadyState := false;
  tan.conExt[10].opa.layers.material[1].piRef := 331.4;
  tan.conExt[10].opa.layers.material[1].piMat := 10.6655196878514;
  tan.conExt[10].opa.layers.material[1].nStaReal := 0.193099330498215;
  tan.conExt[10].opa.layers.material[2].c := 1380.0;
  tan.conExt[10].opa.layers.material[2].d := 150.0;
  tan.conExt[10].opa.layers.material[2].nStaRef := 6;
  tan.conExt[10].opa.layers.material[2].steadyState := false;
  tan.conExt[10].opa.layers.material[2].piRef := 331.4;
  tan.conExt[10].opa.layers.material[2].piMat := 4.54972526643093;
  tan.conExt[10].opa.layers.material[2].nStaReal := 0.0823728171351406;
  tan.conExt[10].opa.lay[1].material.c := 473.0;
  tan.conExt[10].opa.lay[1].material.d := 7801.0;
  tan.conExt[10].opa.lay[1].material.nStaRef := 6;
  tan.conExt[10].opa.lay[1].material.nSta := 1;
  tan.conExt[10].opa.lay[1].material.steadyState := false;
  tan.conExt[10].opa.lay[1].material.piRef := 331.4;
  tan.conExt[10].opa.lay[1].material.piMat := 10.6655196878514;
  tan.conExt[10].opa.lay[1].material.nStaReal := 0.193099330498215;
  tan.conExt[10].opa.lay[1].steadyStateInitial := false;
  tan.conExt[10].opa.lay[1].nSta := 1;
  tan.conExt[10].opa.lay[2].material.c := 1380.0;
  tan.conExt[10].opa.lay[2].material.d := 150.0;
  tan.conExt[10].opa.lay[2].material.nStaRef := 6;
  tan.conExt[10].opa.lay[2].material.nSta := 1;
  tan.conExt[10].opa.lay[2].material.steadyState := false;
  tan.conExt[10].opa.lay[2].material.piRef := 331.4;
  tan.conExt[10].opa.lay[2].material.piMat := 4.54972526643093;
  tan.conExt[10].opa.lay[2].material.nStaReal := 0.0823728171351406;
  tan.conExt[10].opa.lay[2].steadyStateInitial := false;
  tan.conExt[10].opa.lay[2].nSta := 1;
  tan.vol[1].dynBal.traceDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[1].dynBal.p_start := 101325.0;
  tan.vol[1].dynBal.T_start := 293.15;
  tan.vol[1].dynBal.medium.standardOrderComponents := true;
  tan.vol[2].dynBal.traceDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[2].dynBal.p_start := 101325.0;
  tan.vol[2].dynBal.T_start := 293.15;
  tan.vol[2].dynBal.medium.standardOrderComponents := true;
  tan.vol[3].dynBal.traceDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[3].dynBal.p_start := 101325.0;
  tan.vol[3].dynBal.T_start := 293.15;
  tan.vol[3].dynBal.medium.standardOrderComponents := true;
  tan.vol[4].dynBal.traceDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[4].dynBal.p_start := 101325.0;
  tan.vol[4].dynBal.T_start := 293.15;
  tan.vol[4].dynBal.medium.standardOrderComponents := true;
  tan.vol[5].dynBal.traceDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[5].dynBal.p_start := 101325.0;
  tan.vol[5].dynBal.T_start := 293.15;
  tan.vol[5].dynBal.medium.standardOrderComponents := true;
  tan.vol[6].dynBal.traceDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[6].dynBal.p_start := 101325.0;
  tan.vol[6].dynBal.T_start := 293.15;
  tan.vol[6].dynBal.medium.standardOrderComponents := true;
  tan.vol[7].dynBal.traceDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[7].dynBal.p_start := 101325.0;
  tan.vol[7].dynBal.T_start := 293.15;
  tan.vol[7].dynBal.medium.standardOrderComponents := true;
  tan.vol[8].dynBal.traceDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[8].dynBal.p_start := 101325.0;
  tan.vol[8].dynBal.T_start := 293.15;
  tan.vol[8].dynBal.medium.standardOrderComponents := true;
  tan.vol[9].dynBal.traceDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[9].dynBal.p_start := 101325.0;
  tan.vol[9].dynBal.T_start := 293.15;
  tan.vol[9].dynBal.medium.standardOrderComponents := true;
  tan.vol[10].dynBal.traceDynamics := Modelica.Fluid.Types.Dynamics.
    DynamicFreeInitial;
  tan.vol[10].dynBal.p_start := 101325.0;
  tan.vol[10].dynBal.T_start := 293.15;
  tan.vol[10].dynBal.medium.standardOrderComponents := true;
  tan.datTanEnvTop.layers.material[1].c := 473.0;
  tan.conOpa.layers.material[1].c := 473.0;
  tan.datTanEnvTop.layers.material[1].d := 7801.0;
  tan.conOpa.layers.material[1].d := 7801.0;
  tan.datTanEnvTop.layers.material[1].nStaRef := 6;
  tan.conOpa.layers.material[1].nStaRef := 6;
  tan.datTanEnvTop.layers.material[1].steadyState := false;
  tan.conOpa.layers.material[1].steadyState := false;
  tan.datTanEnvTop.layers.material[1].piRef := 331.4;
  tan.conOpa.layers.material[1].piRef := 331.4;
  tan.datTanEnvTop.layers.material[1].piMat := 10.6655196878514;
  tan.conOpa.layers.material[1].piMat := 10.6655196878514;
  tan.datTanEnvTop.layers.material[1].nStaReal := 0.193099330498215;
  tan.conOpa.layers.material[1].nStaReal := 0.193099330498215;
  tan.datTanEnvTop.layers.material[2].c := 1380.0;
  tan.conOpa.layers.material[2].c := 1380.0;
  tan.datTanEnvTop.layers.material[2].d := 150.0;
  tan.conOpa.layers.material[2].d := 150.0;
  tan.datTanEnvTop.layers.material[2].nStaRef := 6;
  tan.conOpa.layers.material[2].nStaRef := 6;
  tan.datTanEnvTop.layers.material[2].steadyState := false;
  tan.conOpa.layers.material[2].steadyState := false;
  tan.datTanEnvTop.layers.material[2].piRef := 331.4;
  tan.conOpa.layers.material[2].piRef := 331.4;
  tan.datTanEnvTop.layers.material[2].piMat := 4.54972526643093;
  tan.conOpa.layers.material[2].piMat := 4.54972526643093;
  tan.datTanEnvTop.layers.material[2].nStaReal := 0.0823728171351406;
  tan.conOpa.layers.material[2].nStaReal := 0.0823728171351406;
  tan.conOpa.opa.layers.material[1].c := 473.0;
  tan.conOpa.opa.layers.material[1].d := 7801.0;
  tan.conOpa.opa.layers.material[1].nStaRef := 6;
  tan.conOpa.opa.layers.material[1].steadyState := false;
  tan.conOpa.opa.layers.material[1].piRef := 331.4;
  tan.conOpa.opa.layers.material[1].piMat := 10.6655196878514;
  tan.conOpa.opa.layers.material[1].nStaReal := 0.193099330498215;
  tan.conOpa.opa.layers.material[2].c := 1380.0;
  tan.conOpa.opa.layers.material[2].d := 150.0;
  tan.conOpa.opa.layers.material[2].nStaRef := 6;
  tan.conOpa.opa.layers.material[2].steadyState := false;
  tan.conOpa.opa.layers.material[2].piRef := 331.4;
  tan.conOpa.opa.layers.material[2].piMat := 4.54972526643093;
  tan.conOpa.opa.layers.material[2].nStaReal := 0.0823728171351406;
  tan.conOpa.opa.lay[1].material.c := 473.0;
  tan.conOpa.opa.lay[1].material.d := 7801.0;
  tan.conOpa.opa.lay[1].material.nStaRef := 6;
  tan.conOpa.opa.lay[1].material.nSta := 1;
  tan.conOpa.opa.lay[1].material.steadyState := false;
  tan.conOpa.opa.lay[1].material.piRef := 331.4;
  tan.conOpa.opa.lay[1].material.piMat := 10.6655196878514;
  tan.conOpa.opa.lay[1].material.nStaReal := 0.193099330498215;
  tan.conOpa.opa.lay[1].steadyStateInitial := false;
  tan.conOpa.opa.lay[1].nSta := 1;
  tan.conOpa.opa.lay[2].material.c := 1380.0;
  tan.conOpa.opa.lay[2].material.d := 150.0;
  tan.conOpa.opa.lay[2].material.nStaRef := 6;
  tan.conOpa.opa.lay[2].material.nSta := 1;
  tan.conOpa.opa.lay[2].material.steadyState := false;
  tan.conOpa.opa.lay[2].material.piRef := 331.4;
  tan.conOpa.opa.lay[2].material.piMat := 4.54972526643093;
  tan.conOpa.opa.lay[2].material.nStaReal := 0.0823728171351406;
  tan.conOpa.opa.lay[2].steadyStateInitial := false;
  tan.conOpa.opa.lay[2].nSta := 1;
  tan.datTanEnvBot.layers.material[1].c := 473.0;
  tan.conOpa3.layers.material[1].c := 473.0;
  tan.datTanEnvBot.layers.material[1].d := 7801.0;
  tan.conOpa3.layers.material[1].d := 7801.0;
  tan.datTanEnvBot.layers.material[1].nStaRef := 6;
  tan.conOpa3.layers.material[1].nStaRef := 6;
  tan.datTanEnvBot.layers.material[1].steadyState := false;
  tan.conOpa3.layers.material[1].steadyState := false;
  tan.datTanEnvBot.layers.material[1].piRef := 331.4;
  tan.conOpa3.layers.material[1].piRef := 331.4;
  tan.datTanEnvBot.layers.material[1].piMat := 2.82280754405134;
  tan.conOpa3.layers.material[1].piMat := 2.82280754405134;
  tan.datTanEnvBot.layers.material[1].nStaReal := 0.0511069561385276;
  tan.conOpa3.layers.material[1].nStaReal := 0.0511069561385276;
  tan.conOpa3.opa.layers.material[1].c := 473.0;
  tan.conOpa3.opa.layers.material[1].d := 7801.0;
  tan.conOpa3.opa.layers.material[1].nStaRef := 6;
  tan.conOpa3.opa.layers.material[1].steadyState := false;
  tan.conOpa3.opa.layers.material[1].piRef := 331.4;
  tan.conOpa3.opa.layers.material[1].piMat := 2.82280754405134;
  tan.conOpa3.opa.layers.material[1].nStaReal := 0.0511069561385276;
  tan.conOpa3.opa.lay[1].material.c := 473.0;
  tan.conOpa3.opa.lay[1].material.d := 7801.0;
  tan.conOpa3.opa.lay[1].material.nStaRef := 6;
  tan.conOpa3.opa.lay[1].material.nSta := 1;
  tan.conOpa3.opa.lay[1].material.steadyState := false;
  tan.conOpa3.opa.lay[1].material.piRef := 331.4;
  tan.conOpa3.opa.lay[1].material.piMat := 2.82280754405134;
  tan.conOpa3.opa.lay[1].material.nStaReal := 0.0511069561385276;
  tan.conOpa3.opa.lay[1].steadyStateInitial := false;
  tan.conOpa3.opa.lay[1].nSta := 1;
  tan.buoHeaTra.TWat[8].Q_flow := 0.0;
  tan.buoHeaTra.buoMasIn.smoDel := 1E-005;
  tan.buoHeaTra.TWat[3].Q_flow := 0.0;
  tan.buoHeaTra.dH_BU.smoDel := 1E-005;
  tan.buoHeaTra.TWat[1].Q_flow := 0.0;
  tan.buoHeaTra.TWat[2].Q_flow := 0.0;
  tan.buoHeaTra.TWat[4].Q_flow := 0.0;
  tan.buoHeaTra.TWat[5].Q_flow := 0.0;
  tan.buoHeaTra.TWat[6].Q_flow := 0.0;
  tan.buoHeaTra.TWat[7].Q_flow := 0.0;
  tan.buoHeaTra.TWat[9].Q_flow := 0.0;
  tan.buoHeaTra.TWat[10].Q_flow := 0.0;
  T_sensor.port.Q_flow := 0;
  burn.TtanBot.port.Q_flow := 0;
  burn.convConBou7.u := 2;
  burn.heaCoef.y := 2;
  der(tan.vol[10].dynBal.m) := 0.0;
  der(tan.vol[1].dynBal.m) := 0.0;
  der(tan.vol[2].dynBal.m) := 0.0;
  der(tan.vol[3].dynBal.m) := 0.0;
  der(tan.vol[4].dynBal.m) := 0.0;
  der(tan.vol[5].dynBal.m) := 0.0;
  der(tan.vol[6].dynBal.m) := 0.0;
  der(tan.vol[7].dynBal.m) := 0.0;
  der(tan.vol[8].dynBal.m) := 0.0;
  der(tan.vol[9].dynBal.m) := 0.0;
  tan.T_WL[10].port.Q_flow := 0;
  tan.T_WL[1].port.Q_flow := 0;
  tan.T_WL[2].port.Q_flow := 0;
  tan.T_WL[3].port.Q_flow := 0;
  tan.T_WL[4].port.Q_flow := 0;
  tan.T_WL[5].port.Q_flow := 0;
  tan.T_WL[6].port.Q_flow := 0;
  tan.T_WL[7].port.Q_flow := 0;
  tan.T_WL[8].port.Q_flow := 0;
  tan.T_WL[9].port.Q_flow := 0;
  tan.absIRJac1.y := 0.9;
  tan.absIRJac2[10].y := 0.9;
  tan.absIRJac2[1].y := 0.9;
  tan.absIRJac2[2].y := 0.9;
  tan.absIRJac2[3].y := 0.9;
  tan.absIRJac2[4].y := 0.9;
  tan.absIRJac2[5].y := 0.9;
  tan.absIRJac2[6].y := 0.9;
  tan.absIRJac2[7].y := 0.9;
  tan.absIRJac2[8].y := 0.9;
  tan.absIRJac2[9].y := 0.9;
  tan.buoHeaTra.TWatBot.Q_flow := 0;
  tan.buoHeaTra.WatT[10].port.Q_flow := 0;
  tan.buoHeaTra.WatT[1].port.Q_flow := 0;
  tan.buoHeaTra.WatT[2].port.Q_flow := 0;
  tan.buoHeaTra.WatT[3].port.Q_flow := 0;
  tan.buoHeaTra.WatT[4].port.Q_flow := 0;
  tan.buoHeaTra.WatT[5].port.Q_flow := 0;
  tan.buoHeaTra.WatT[6].port.Q_flow := 0;
  tan.buoHeaTra.WatT[7].port.Q_flow := 0;
  tan.buoHeaTra.WatT[8].port.Q_flow := 0;
  tan.buoHeaTra.WatT[9].port.Q_flow := 0;
  tan.buoHeaTra.buoBas.T_vol.Q_flow := 0;
  tan.buoHeaTra.buoBas.T_vol_nSeg.port.Q_flow := 0;
  tan.buoHeaTra.buoFlu[10].T_vol.Q_flow := 0;
  tan.buoHeaTra.buoFlu[10].T_vol_nSeg.port.Q_flow := 0;
  tan.buoHeaTra.buoFlu[1].T_vol.Q_flow := 0;
  tan.buoHeaTra.buoFlu[1].T_vol_nSeg.port.Q_flow := 0;
  tan.buoHeaTra.buoFlu[2].T_vol.Q_flow := 0;
  tan.buoHeaTra.buoFlu[2].T_vol_nSeg.port.Q_flow := 0;
  tan.buoHeaTra.buoFlu[3].T_vol.Q_flow := 0;
  tan.buoHeaTra.buoFlu[3].T_vol_nSeg.port.Q_flow := 0;
  tan.buoHeaTra.buoFlu[4].T_vol.Q_flow := 0;
  tan.buoHeaTra.buoFlu[4].T_vol_nSeg.port.Q_flow := 0;
  tan.buoHeaTra.buoFlu[5].T_vol.Q_flow := 0;
  tan.buoHeaTra.buoFlu[5].T_vol_nSeg.port.Q_flow := 0;
  tan.buoHeaTra.buoFlu[6].T_vol.Q_flow := 0;
  tan.buoHeaTra.buoFlu[6].T_vol_nSeg.port.Q_flow := 0;
  tan.buoHeaTra.buoFlu[7].T_vol.Q_flow := 0;
  tan.buoHeaTra.buoFlu[7].T_vol_nSeg.port.Q_flow := 0;
  tan.buoHeaTra.buoFlu[8].T_vol.Q_flow := 0;
  tan.buoHeaTra.buoFlu[8].T_vol_nSeg.port.Q_flow := 0;
  tan.buoHeaTra.buoFlu[9].T_vol.Q_flow := 0;
  tan.buoHeaTra.buoFlu[9].T_vol_nSeg.port.Q_flow := 0;
  tan.buoHeaTra.mDCal1.mDotD[10] := 0.0;
  tan.buoHeaTra.qBuo.mDotD[10] := 0.0;
  tan.convConBou5[10].u := 2;
  tan.convConBou5[1].u := 2;
  tan.convConBou5[2].u := 2;
  tan.convConBou5[3].u := 2;
  tan.convConBou5[4].u := 2;
  tan.convConBou5[5].u := 2;
  tan.convConBou5[6].u := 2;
  tan.convConBou5[7].u := 2;
  tan.convConBou5[8].u := 2;
  tan.convConBou5[9].u := 2;
  tan.convConBou8[10].u := 0.2;
  tan.convConBou8[1].u := 0.2;
  tan.convConBou8[2].u := 0.2;
  tan.convConBou8[3].u := 0.2;
  tan.convConBou8[4].u := 0.2;
  tan.convConBou8[5].u := 0.2;
  tan.convConBou8[6].u := 0.2;
  tan.convConBou8[7].u := 0.2;
  tan.convConBou8[8].u := 0.2;
  tan.convConBou8[9].u := 0.2;
  tan.finCoef[10].y := 0.2;
  tan.finCoef[1].y := 0.2;
  tan.finCoef[2].y := 0.2;
  tan.finCoef[3].y := 0.2;
  tan.finCoef[4].y := 0.2;
  tan.finCoef[5].y := 0.2;
  tan.finCoef[6].y := 0.2;
  tan.finCoef[7].y := 0.2;
  tan.finCoef[8].y := 0.2;
  tan.finCoef[9].y := 0.2;
  tan.fsRadiationExchange1[10].T_In := 0.9;
  tan.fsRadiationExchange1[1].T_In := 0.9;
  tan.fsRadiationExchange1[2].T_In := 0.9;
  tan.fsRadiationExchange1[3].T_In := 0.9;
  tan.fsRadiationExchange1[4].T_In := 0.9;
  tan.fsRadiationExchange1[5].T_In := 0.9;
  tan.fsRadiationExchange1[6].T_In := 0.9;
  tan.fsRadiationExchange1[7].T_In := 0.9;
  tan.fsRadiationExchange1[8].T_In := 0.9;
  tan.fsRadiationExchange1[9].T_In := 0.9;
  tan.fsRadiationExchange2.T_In := 0.9;
  tan.heaCoe[10].y := 2;
  tan.heaCoe[1].y := 2;
  tan.heaCoe[2].y := 2;
  tan.heaCoe[3].y := 2;
  tan.heaCoe[4].y := 2;
  tan.heaCoe[5].y := 2;
  tan.heaCoe[6].y := 2;
  tan.heaCoe[7].y := 2;
  tan.heaCoe[8].y := 2;
  tan.heaCoe[9].y := 2;
  tan.heaPor[10].Q_flow := 0.0;
  tan.heaPor[1].Q_flow := 0.0;
  tan.heaPor[2].Q_flow := 0;
  tan.heaPor[3].Q_flow := 0.0;
  tan.heaPor[4].Q_flow := 0.0;
  tan.heaPor[5].Q_flow := 0.0;
  tan.heaPor[6].Q_flow := 0.0;
  tan.heaPor[7].Q_flow := 0.0;
  tan.heaPor[8].Q_flow := 0.0;
  tan.heaPor[9].Q_flow := 0.0;
  tan.smoDel := 1E-005;
  tan.temperatureSensor[10].port.Q_flow := 0;
  tan.temperatureSensor[1].port.Q_flow := 0;
  tan.temperatureSensor[2].port.Q_flow := 0;
  tan.temperatureSensor[3].port.Q_flow := 0;
  tan.temperatureSensor[4].port.Q_flow := 0;
  tan.temperatureSensor[5].port.Q_flow := 0;
  tan.temperatureSensor[6].port.Q_flow := 0;
  tan.temperatureSensor[7].port.Q_flow := 0;
  tan.temperatureSensor[8].port.Q_flow := 0;
  tan.temperatureSensor[9].port.Q_flow := 0;
  tan.vol[10].dynBal.Hb_flow := 0.0;
  tan.vol[10].dynBal.mb_flow := 0.0;
  tan.vol[10].dynBal.medium.MM := 0.018015268;
  tan.vol[10].dynBal.medium.R := 461.523636506545;
  tan.vol[10].dynBal.medium.X[1] := 1.0;
  tan.vol[10].p := 101325.0;
  tan.vol[1].dynBal.Hb_flow := 0.0;
  tan.vol[1].dynBal.mb_flow := 0.0;
  tan.vol[1].dynBal.medium.MM := 0.018015268;
  tan.vol[1].dynBal.medium.R := 461.523636506545;
  tan.vol[1].dynBal.medium.X[1] := 1.0;
  tan.vol[1].p := 101325.0;
  tan.vol[2].dynBal.Hb_flow := 0.0;
  tan.vol[2].dynBal.mb_flow := 0.0;
  tan.vol[2].dynBal.medium.MM := 0.018015268;
  tan.vol[2].dynBal.medium.R := 461.523636506545;
  tan.vol[2].dynBal.medium.X[1] := 1.0;
  tan.vol[2].p := 101325.0;
  tan.vol[3].dynBal.Hb_flow := 0.0;
  tan.vol[3].dynBal.mb_flow := 0.0;
  tan.vol[3].dynBal.medium.MM := 0.018015268;
  tan.vol[3].dynBal.medium.R := 461.523636506545;
  tan.vol[3].dynBal.medium.X[1] := 1.0;
  tan.vol[3].p := 101325.0;
  tan.vol[4].dynBal.Hb_flow := 0.0;
  tan.vol[4].dynBal.mb_flow := 0.0;
  tan.vol[4].dynBal.medium.MM := 0.018015268;
  tan.vol[4].dynBal.medium.R := 461.523636506545;
  tan.vol[4].dynBal.medium.X[1] := 1.0;
  tan.vol[4].p := 101325.0;
  tan.vol[5].dynBal.Hb_flow := 0.0;
  tan.vol[5].dynBal.mb_flow := 0.0;
  tan.vol[5].dynBal.medium.MM := 0.018015268;
  tan.vol[5].dynBal.medium.R := 461.523636506545;
  tan.vol[5].dynBal.medium.X[1] := 1.0;
  tan.vol[5].p := 101325.0;
  tan.vol[6].dynBal.Hb_flow := 0.0;
  tan.vol[6].dynBal.mb_flow := 0.0;
  tan.vol[6].dynBal.medium.MM := 0.018015268;
  tan.vol[6].dynBal.medium.R := 461.523636506545;
  tan.vol[6].dynBal.medium.X[1] := 1.0;
  tan.vol[6].p := 101325.0;
  tan.vol[7].dynBal.Hb_flow := 0.0;
  tan.vol[7].dynBal.mb_flow := 0.0;
  tan.vol[7].dynBal.medium.MM := 0.018015268;
  tan.vol[7].dynBal.medium.R := 461.523636506545;
  tan.vol[7].dynBal.medium.X[1] := 1.0;
  tan.vol[7].p := 101325.0;
  tan.vol[8].dynBal.Hb_flow := 0.0;
  tan.vol[8].dynBal.mb_flow := 0.0;
  tan.vol[8].dynBal.medium.MM := 0.018015268;
  tan.vol[8].dynBal.medium.R := 461.523636506545;
  tan.vol[8].dynBal.medium.X[1] := 1.0;
  tan.vol[8].p := 101325.0;
  tan.vol[9].dynBal.Hb_flow := 0.0;
  tan.vol[9].dynBal.mb_flow := 0.0;
  tan.vol[9].dynBal.medium.MM := 0.018015268;
  tan.vol[9].dynBal.medium.R := 461.523636506545;
  tan.vol[9].dynBal.medium.X[1] := 1.0;
  tan.vol[9].p := 101325.0;
// -----------------------------------------------------------------------------

// Bound Parameter Section
  system.p_start := system.p_ambient;
  system.T_start := system.T_ambient;
  burn.T_AD_flame.deltaHc_H := burn.deltaHc_H;
  burn.T_AD_flame.cp_G := burn.cp_G;
  burn.T_AD_flame.stoich := burn.stoich;
  burn.T_AD_flame.EA := burn.EA;
  burn.T_AD_flame.const.k := burn.T_AD_flame.deltaHc_H/burn.T_AD_flame.cp_G/((1+
    burn.T_AD_flame.stoich)*(1+burn.T_AD_flame.EA));
  burn.convConBou7.A := burn.datTanEnvBot.A;
  burn.convConBou7.hFixed := burn.hFixed;
  burn.fsRadiationExchange4.A := burn.datTanEnvBot.A;
  burn.hotGasTemp.A_B := burn.datTanEnvBot.A;
  burn.T_F0.deltaHc_L := burn.deltaHc_L;
  burn.T_F0.deltaHc_H := burn.deltaHc_H;
  burn.T_F0.gain1.k := burn.T_F0.deltaHc_L/burn.T_F0.deltaHc_H;
  burn.h_CB.DT := burn.DTan;
  burn.h_CB.DF := burn.DFlu;
  burn.h_CB.DM := 0.5*(burn.h_CB.DT+burn.h_CB.DF);
  burn.h_CB.Xn := 0.5*(burn.h_CB.DT-burn.h_CB.DF);
  tan.flueWall[1].A := 0.1*tan.datFlueWall.A;
  tan.flueWall[1].AOpa := tan.flueWall[1].A;
  tan.flueWall[1].T_a_start := tan.datFlueWall.T_a_start;
  tan.flueWall[1].T_b_start := tan.datFlueWall.T_b_start;
  tan.flueWall[1].opa.A := tan.flueWall[1].AOpa;
  tan.flueWall[1].opa.lay[1].A := tan.flueWall[1].opa.A;
  tan.flueWall[1].opa.lay[1].R := (if tan.flueWall[1].opa.lay[1].material.R == 0
     then tan.flueWall[1].opa.lay[1].material.x/tan.flueWall[1].opa.lay[1].material.k
    /tan.flueWall[1].opa.lay[1].A else tan.flueWall[1].opa.lay[1].material.R/
    tan.flueWall[1].opa.lay[1].A);
  tan.flueWall[1].opa.R := tan.flueWall[1].opa.lay[1].R;
  tan.flueWall[1].opa.UA := 1/tan.flueWall[1].opa.R;
  tan.flueWall[1].opa.U := tan.flueWall[1].opa.UA/tan.flueWall[1].opa.A;
  tan.flueWall[1].opa.T_a_start := tan.flueWall[1].T_a_start;
  tan.flueWall[1].opa.T_b_start := tan.flueWall[1].T_b_start;
  tan.flueWall[2].A := 0.1*tan.datFlueWall.A;
  tan.flueWall[2].AOpa := tan.flueWall[2].A;
  tan.flueWall[2].T_a_start := tan.datFlueWall.T_a_start;
  tan.flueWall[2].T_b_start := tan.datFlueWall.T_b_start;
  tan.flueWall[2].opa.A := tan.flueWall[2].AOpa;
  tan.flueWall[2].opa.lay[1].A := tan.flueWall[2].opa.A;
  tan.flueWall[2].opa.lay[1].R := (if tan.flueWall[2].opa.lay[1].material.R == 0
     then tan.flueWall[2].opa.lay[1].material.x/tan.flueWall[2].opa.lay[1].material.k
    /tan.flueWall[2].opa.lay[1].A else tan.flueWall[2].opa.lay[1].material.R/
    tan.flueWall[2].opa.lay[1].A);
  tan.flueWall[2].opa.R := tan.flueWall[2].opa.lay[1].R;
  tan.flueWall[2].opa.UA := 1/tan.flueWall[2].opa.R;
  tan.flueWall[2].opa.U := tan.flueWall[2].opa.UA/tan.flueWall[2].opa.A;
  tan.flueWall[2].opa.T_a_start := tan.flueWall[2].T_a_start;
  tan.flueWall[2].opa.T_b_start := tan.flueWall[2].T_b_start;
  tan.flueWall[3].A := 0.1*tan.datFlueWall.A;
  tan.flueWall[3].AOpa := tan.flueWall[3].A;
  tan.flueWall[3].T_a_start := tan.datFlueWall.T_a_start;
  tan.flueWall[3].T_b_start := tan.datFlueWall.T_b_start;
  tan.flueWall[3].opa.A := tan.flueWall[3].AOpa;
  tan.flueWall[3].opa.lay[1].A := tan.flueWall[3].opa.A;
  tan.flueWall[3].opa.lay[1].R := (if tan.flueWall[3].opa.lay[1].material.R == 0
     then tan.flueWall[3].opa.lay[1].material.x/tan.flueWall[3].opa.lay[1].material.k
    /tan.flueWall[3].opa.lay[1].A else tan.flueWall[3].opa.lay[1].material.R/
    tan.flueWall[3].opa.lay[1].A);
  tan.flueWall[3].opa.R := tan.flueWall[3].opa.lay[1].R;
  tan.flueWall[3].opa.UA := 1/tan.flueWall[3].opa.R;
  tan.flueWall[3].opa.U := tan.flueWall[3].opa.UA/tan.flueWall[3].opa.A;
  tan.flueWall[3].opa.T_a_start := tan.flueWall[3].T_a_start;
  tan.flueWall[3].opa.T_b_start := tan.flueWall[3].T_b_start;
  tan.flueWall[4].A := 0.1*tan.datFlueWall.A;
  tan.flueWall[4].AOpa := tan.flueWall[4].A;
  tan.flueWall[4].T_a_start := tan.datFlueWall.T_a_start;
  tan.flueWall[4].T_b_start := tan.datFlueWall.T_b_start;
  tan.flueWall[4].opa.A := tan.flueWall[4].AOpa;
  tan.flueWall[4].opa.lay[1].A := tan.flueWall[4].opa.A;
  tan.flueWall[4].opa.lay[1].R := (if tan.flueWall[4].opa.lay[1].material.R == 0
     then tan.flueWall[4].opa.lay[1].material.x/tan.flueWall[4].opa.lay[1].material.k
    /tan.flueWall[4].opa.lay[1].A else tan.flueWall[4].opa.lay[1].material.R/
    tan.flueWall[4].opa.lay[1].A);
  tan.flueWall[4].opa.R := tan.flueWall[4].opa.lay[1].R;
  tan.flueWall[4].opa.UA := 1/tan.flueWall[4].opa.R;
  tan.flueWall[4].opa.U := tan.flueWall[4].opa.UA/tan.flueWall[4].opa.A;
  tan.flueWall[4].opa.T_a_start := tan.flueWall[4].T_a_start;
  tan.flueWall[4].opa.T_b_start := tan.flueWall[4].T_b_start;
  tan.flueWall[5].A := 0.1*tan.datFlueWall.A;
  tan.flueWall[5].AOpa := tan.flueWall[5].A;
  tan.flueWall[5].T_a_start := tan.datFlueWall.T_a_start;
  tan.flueWall[5].T_b_start := tan.datFlueWall.T_b_start;
  tan.flueWall[5].opa.A := tan.flueWall[5].AOpa;
  tan.flueWall[5].opa.lay[1].A := tan.flueWall[5].opa.A;
  tan.flueWall[5].opa.lay[1].R := (if tan.flueWall[5].opa.lay[1].material.R == 0
     then tan.flueWall[5].opa.lay[1].material.x/tan.flueWall[5].opa.lay[1].material.k
    /tan.flueWall[5].opa.lay[1].A else tan.flueWall[5].opa.lay[1].material.R/
    tan.flueWall[5].opa.lay[1].A);
  tan.flueWall[5].opa.R := tan.flueWall[5].opa.lay[1].R;
  tan.flueWall[5].opa.UA := 1/tan.flueWall[5].opa.R;
  tan.flueWall[5].opa.U := tan.flueWall[5].opa.UA/tan.flueWall[5].opa.A;
  tan.flueWall[5].opa.T_a_start := tan.flueWall[5].T_a_start;
  tan.flueWall[5].opa.T_b_start := tan.flueWall[5].T_b_start;
  tan.flueWall[6].A := 0.1*tan.datFlueWall.A;
  tan.flueWall[6].AOpa := tan.flueWall[6].A;
  tan.flueWall[6].T_a_start := tan.datFlueWall.T_a_start;
  tan.flueWall[6].T_b_start := tan.datFlueWall.T_b_start;
  tan.flueWall[6].opa.A := tan.flueWall[6].AOpa;
  tan.flueWall[6].opa.lay[1].A := tan.flueWall[6].opa.A;
  tan.flueWall[6].opa.lay[1].R := (if tan.flueWall[6].opa.lay[1].material.R == 0
     then tan.flueWall[6].opa.lay[1].material.x/tan.flueWall[6].opa.lay[1].material.k
    /tan.flueWall[6].opa.lay[1].A else tan.flueWall[6].opa.lay[1].material.R/
    tan.flueWall[6].opa.lay[1].A);
  tan.flueWall[6].opa.R := tan.flueWall[6].opa.lay[1].R;
  tan.flueWall[6].opa.UA := 1/tan.flueWall[6].opa.R;
  tan.flueWall[6].opa.U := tan.flueWall[6].opa.UA/tan.flueWall[6].opa.A;
  tan.flueWall[6].opa.T_a_start := tan.flueWall[6].T_a_start;
  tan.flueWall[6].opa.T_b_start := tan.flueWall[6].T_b_start;
  tan.flueWall[7].A := 0.1*tan.datFlueWall.A;
  tan.flueWall[7].AOpa := tan.flueWall[7].A;
  tan.flueWall[7].T_a_start := tan.datFlueWall.T_a_start;
  tan.flueWall[7].T_b_start := tan.datFlueWall.T_b_start;
  tan.flueWall[7].opa.A := tan.flueWall[7].AOpa;
  tan.flueWall[7].opa.lay[1].A := tan.flueWall[7].opa.A;
  tan.flueWall[7].opa.lay[1].R := (if tan.flueWall[7].opa.lay[1].material.R == 0
     then tan.flueWall[7].opa.lay[1].material.x/tan.flueWall[7].opa.lay[1].material.k
    /tan.flueWall[7].opa.lay[1].A else tan.flueWall[7].opa.lay[1].material.R/
    tan.flueWall[7].opa.lay[1].A);
  tan.flueWall[7].opa.R := tan.flueWall[7].opa.lay[1].R;
  tan.flueWall[7].opa.UA := 1/tan.flueWall[7].opa.R;
  tan.flueWall[7].opa.U := tan.flueWall[7].opa.UA/tan.flueWall[7].opa.A;
  tan.flueWall[7].opa.T_a_start := tan.flueWall[7].T_a_start;
  tan.flueWall[7].opa.T_b_start := tan.flueWall[7].T_b_start;
  tan.flueWall[8].A := 0.1*tan.datFlueWall.A;
  tan.flueWall[8].AOpa := tan.flueWall[8].A;
  tan.flueWall[8].T_a_start := tan.datFlueWall.T_a_start;
  tan.flueWall[8].T_b_start := tan.datFlueWall.T_b_start;
  tan.flueWall[8].opa.A := tan.flueWall[8].AOpa;
  tan.flueWall[8].opa.lay[1].A := tan.flueWall[8].opa.A;
  tan.flueWall[8].opa.lay[1].R := (if tan.flueWall[8].opa.lay[1].material.R == 0
     then tan.flueWall[8].opa.lay[1].material.x/tan.flueWall[8].opa.lay[1].material.k
    /tan.flueWall[8].opa.lay[1].A else tan.flueWall[8].opa.lay[1].material.R/
    tan.flueWall[8].opa.lay[1].A);
  tan.flueWall[8].opa.R := tan.flueWall[8].opa.lay[1].R;
  tan.flueWall[8].opa.UA := 1/tan.flueWall[8].opa.R;
  tan.flueWall[8].opa.U := tan.flueWall[8].opa.UA/tan.flueWall[8].opa.A;
  tan.flueWall[8].opa.T_a_start := tan.flueWall[8].T_a_start;
  tan.flueWall[8].opa.T_b_start := tan.flueWall[8].T_b_start;
  tan.flueWall[9].A := 0.1*tan.datFlueWall.A;
  tan.flueWall[9].AOpa := tan.flueWall[9].A;
  tan.flueWall[9].T_a_start := tan.datFlueWall.T_a_start;
  tan.flueWall[9].T_b_start := tan.datFlueWall.T_b_start;
  tan.flueWall[9].opa.A := tan.flueWall[9].AOpa;
  tan.flueWall[9].opa.lay[1].A := tan.flueWall[9].opa.A;
  tan.flueWall[9].opa.lay[1].R := (if tan.flueWall[9].opa.lay[1].material.R == 0
     then tan.flueWall[9].opa.lay[1].material.x/tan.flueWall[9].opa.lay[1].material.k
    /tan.flueWall[9].opa.lay[1].A else tan.flueWall[9].opa.lay[1].material.R/
    tan.flueWall[9].opa.lay[1].A);
  tan.flueWall[9].opa.R := tan.flueWall[9].opa.lay[1].R;
  tan.flueWall[9].opa.UA := 1/tan.flueWall[9].opa.R;
  tan.flueWall[9].opa.U := tan.flueWall[9].opa.UA/tan.flueWall[9].opa.A;
  tan.flueWall[9].opa.T_a_start := tan.flueWall[9].T_a_start;
  tan.flueWall[9].opa.T_b_start := tan.flueWall[9].T_b_start;
  tan.flueWall[10].A := 0.1*tan.datFlueWall.A;
  tan.flueWall[10].AOpa := tan.flueWall[10].A;
  tan.flueWall[10].T_a_start := tan.datFlueWall.T_a_start;
  tan.flueWall[10].T_b_start := tan.datFlueWall.T_b_start;
  tan.flueWall[10].opa.A := tan.flueWall[10].AOpa;
  tan.flueWall[10].opa.lay[1].A := tan.flueWall[10].opa.A;
  tan.flueWall[10].opa.lay[1].R := (if tan.flueWall[10].opa.lay[1].material.R
     == 0 then tan.flueWall[10].opa.lay[1].material.x/tan.flueWall[10].opa.lay[1].material.k
    /tan.flueWall[10].opa.lay[1].A else tan.flueWall[10].opa.lay[1].material.R/
    tan.flueWall[10].opa.lay[1].A);
  tan.flueWall[10].opa.R := tan.flueWall[10].opa.lay[1].R;
  tan.flueWall[10].opa.UA := 1/tan.flueWall[10].opa.R;
  tan.flueWall[10].opa.U := tan.flueWall[10].opa.UA/tan.flueWall[10].opa.A;
  tan.flueWall[10].opa.T_a_start := tan.flueWall[10].T_a_start;
  tan.flueWall[10].opa.T_b_start := tan.flueWall[10].T_b_start;
  tan.convConBou1[1].A := 0.1*tan.datFlueWall.A;
  tan.convConBou1[1].hFixed := tan.hFixed;
  tan.convConBou1[2].A := 0.1*tan.datFlueWall.A;
  tan.convConBou1[2].hFixed := tan.hFixed;
  tan.convConBou1[3].A := 0.1*tan.datFlueWall.A;
  tan.convConBou1[3].hFixed := tan.hFixed;
  tan.convConBou1[4].A := 0.1*tan.datFlueWall.A;
  tan.convConBou1[4].hFixed := tan.hFixed;
  tan.convConBou1[5].A := 0.1*tan.datFlueWall.A;
  tan.convConBou1[5].hFixed := tan.hFixed;
  tan.convConBou1[6].A := 0.1*tan.datFlueWall.A;
  tan.convConBou1[6].hFixed := tan.hFixed;
  tan.convConBou1[7].A := 0.1*tan.datFlueWall.A;
  tan.convConBou1[7].hFixed := tan.hFixed;
  tan.convConBou1[8].A := 0.1*tan.datFlueWall.A;
  tan.convConBou1[8].hFixed := tan.hFixed;
  tan.convConBou1[9].A := 0.1*tan.datFlueWall.A;
  tan.convConBou1[9].hFixed := tan.hFixed;
  tan.convConBou1[10].A := 0.1*tan.datFlueWall.A;
  tan.convConBou1[10].hFixed := tan.hFixed;
  tan.conExt[1].A := 0.1*tan.datTanEnv.A;
  tan.conExt[1].AOpa := tan.conExt[1].A;
  tan.conExt[1].T_a_start := tan.datTanEnv.T_a_start;
  tan.conExt[1].T_b_start := tan.datTanEnv.T_b_start;
  tan.conExt[1].opa.A := tan.conExt[1].AOpa;
  tan.conExt[1].opa.lay[1].A := tan.conExt[1].opa.A;
  tan.conExt[1].opa.lay[1].R := (if tan.conExt[1].opa.lay[1].material.R == 0
     then tan.conExt[1].opa.lay[1].material.x/tan.conExt[1].opa.lay[1].material.k
    /tan.conExt[1].opa.lay[1].A else tan.conExt[1].opa.lay[1].material.R/
    tan.conExt[1].opa.lay[1].A);
  tan.conExt[1].opa.lay[2].A := tan.conExt[1].opa.A;
  tan.conExt[1].opa.lay[2].R := (if tan.conExt[1].opa.lay[2].material.R == 0
     then tan.conExt[1].opa.lay[2].material.x/tan.conExt[1].opa.lay[2].material.k
    /tan.conExt[1].opa.lay[2].A else tan.conExt[1].opa.lay[2].material.R/
    tan.conExt[1].opa.lay[2].A);
  tan.conExt[1].opa.R := tan.conExt[1].opa.lay[1].R+tan.conExt[1].opa.lay[2].R;
  tan.conExt[1].opa.UA := 1/tan.conExt[1].opa.R;
  tan.conExt[1].opa.U := tan.conExt[1].opa.UA/tan.conExt[1].opa.A;
  tan.conExt[1].opa.T_a_start := tan.conExt[1].T_a_start;
  tan.conExt[1].opa.T_b_start := tan.conExt[1].T_b_start;
  tan.conExt[2].A := 0.1*tan.datTanEnv.A;
  tan.conExt[2].AOpa := tan.conExt[2].A;
  tan.conExt[2].T_a_start := tan.datTanEnv.T_a_start;
  tan.conExt[2].T_b_start := tan.datTanEnv.T_b_start;
  tan.conExt[2].opa.A := tan.conExt[2].AOpa;
  tan.conExt[2].opa.lay[1].A := tan.conExt[2].opa.A;
  tan.conExt[2].opa.lay[1].R := (if tan.conExt[2].opa.lay[1].material.R == 0
     then tan.conExt[2].opa.lay[1].material.x/tan.conExt[2].opa.lay[1].material.k
    /tan.conExt[2].opa.lay[1].A else tan.conExt[2].opa.lay[1].material.R/
    tan.conExt[2].opa.lay[1].A);
  tan.conExt[2].opa.lay[2].A := tan.conExt[2].opa.A;
  tan.conExt[2].opa.lay[2].R := (if tan.conExt[2].opa.lay[2].material.R == 0
     then tan.conExt[2].opa.lay[2].material.x/tan.conExt[2].opa.lay[2].material.k
    /tan.conExt[2].opa.lay[2].A else tan.conExt[2].opa.lay[2].material.R/
    tan.conExt[2].opa.lay[2].A);
  tan.conExt[2].opa.R := tan.conExt[2].opa.lay[1].R+tan.conExt[2].opa.lay[2].R;
  tan.conExt[2].opa.UA := 1/tan.conExt[2].opa.R;
  tan.conExt[2].opa.U := tan.conExt[2].opa.UA/tan.conExt[2].opa.A;
  tan.conExt[2].opa.T_a_start := tan.conExt[2].T_a_start;
  tan.conExt[2].opa.T_b_start := tan.conExt[2].T_b_start;
  tan.conExt[3].A := 0.1*tan.datTanEnv.A;
  tan.conExt[3].AOpa := tan.conExt[3].A;
  tan.conExt[3].T_a_start := tan.datTanEnv.T_a_start;
  tan.conExt[3].T_b_start := tan.datTanEnv.T_b_start;
  tan.conExt[3].opa.A := tan.conExt[3].AOpa;
  tan.conExt[3].opa.lay[1].A := tan.conExt[3].opa.A;
  tan.conExt[3].opa.lay[1].R := (if tan.conExt[3].opa.lay[1].material.R == 0
     then tan.conExt[3].opa.lay[1].material.x/tan.conExt[3].opa.lay[1].material.k
    /tan.conExt[3].opa.lay[1].A else tan.conExt[3].opa.lay[1].material.R/
    tan.conExt[3].opa.lay[1].A);
  tan.conExt[3].opa.lay[2].A := tan.conExt[3].opa.A;
  tan.conExt[3].opa.lay[2].R := (if tan.conExt[3].opa.lay[2].material.R == 0
     then tan.conExt[3].opa.lay[2].material.x/tan.conExt[3].opa.lay[2].material.k
    /tan.conExt[3].opa.lay[2].A else tan.conExt[3].opa.lay[2].material.R/
    tan.conExt[3].opa.lay[2].A);
  tan.conExt[3].opa.R := tan.conExt[3].opa.lay[1].R+tan.conExt[3].opa.lay[2].R;
  tan.conExt[3].opa.UA := 1/tan.conExt[3].opa.R;
  tan.conExt[3].opa.U := tan.conExt[3].opa.UA/tan.conExt[3].opa.A;
  tan.conExt[3].opa.T_a_start := tan.conExt[3].T_a_start;
  tan.conExt[3].opa.T_b_start := tan.conExt[3].T_b_start;
  tan.conExt[4].A := 0.1*tan.datTanEnv.A;
  tan.conExt[4].AOpa := tan.conExt[4].A;
  tan.conExt[4].T_a_start := tan.datTanEnv.T_a_start;
  tan.conExt[4].T_b_start := tan.datTanEnv.T_b_start;
  tan.conExt[4].opa.A := tan.conExt[4].AOpa;
  tan.conExt[4].opa.lay[1].A := tan.conExt[4].opa.A;
  tan.conExt[4].opa.lay[1].R := (if tan.conExt[4].opa.lay[1].material.R == 0
     then tan.conExt[4].opa.lay[1].material.x/tan.conExt[4].opa.lay[1].material.k
    /tan.conExt[4].opa.lay[1].A else tan.conExt[4].opa.lay[1].material.R/
    tan.conExt[4].opa.lay[1].A);
  tan.conExt[4].opa.lay[2].A := tan.conExt[4].opa.A;
  tan.conExt[4].opa.lay[2].R := (if tan.conExt[4].opa.lay[2].material.R == 0
     then tan.conExt[4].opa.lay[2].material.x/tan.conExt[4].opa.lay[2].material.k
    /tan.conExt[4].opa.lay[2].A else tan.conExt[4].opa.lay[2].material.R/
    tan.conExt[4].opa.lay[2].A);
  tan.conExt[4].opa.R := tan.conExt[4].opa.lay[1].R+tan.conExt[4].opa.lay[2].R;
  tan.conExt[4].opa.UA := 1/tan.conExt[4].opa.R;
  tan.conExt[4].opa.U := tan.conExt[4].opa.UA/tan.conExt[4].opa.A;
  tan.conExt[4].opa.T_a_start := tan.conExt[4].T_a_start;
  tan.conExt[4].opa.T_b_start := tan.conExt[4].T_b_start;
  tan.conExt[5].A := 0.1*tan.datTanEnv.A;
  tan.conExt[5].AOpa := tan.conExt[5].A;
  tan.conExt[5].T_a_start := tan.datTanEnv.T_a_start;
  tan.conExt[5].T_b_start := tan.datTanEnv.T_b_start;
  tan.conExt[5].opa.A := tan.conExt[5].AOpa;
  tan.conExt[5].opa.lay[1].A := tan.conExt[5].opa.A;
  tan.conExt[5].opa.lay[1].R := (if tan.conExt[5].opa.lay[1].material.R == 0
     then tan.conExt[5].opa.lay[1].material.x/tan.conExt[5].opa.lay[1].material.k
    /tan.conExt[5].opa.lay[1].A else tan.conExt[5].opa.lay[1].material.R/
    tan.conExt[5].opa.lay[1].A);
  tan.conExt[5].opa.lay[2].A := tan.conExt[5].opa.A;
  tan.conExt[5].opa.lay[2].R := (if tan.conExt[5].opa.lay[2].material.R == 0
     then tan.conExt[5].opa.lay[2].material.x/tan.conExt[5].opa.lay[2].material.k
    /tan.conExt[5].opa.lay[2].A else tan.conExt[5].opa.lay[2].material.R/
    tan.conExt[5].opa.lay[2].A);
  tan.conExt[5].opa.R := tan.conExt[5].opa.lay[1].R+tan.conExt[5].opa.lay[2].R;
  tan.conExt[5].opa.UA := 1/tan.conExt[5].opa.R;
  tan.conExt[5].opa.U := tan.conExt[5].opa.UA/tan.conExt[5].opa.A;
  tan.conExt[5].opa.T_a_start := tan.conExt[5].T_a_start;
  tan.conExt[5].opa.T_b_start := tan.conExt[5].T_b_start;
  tan.conExt[6].A := 0.1*tan.datTanEnv.A;
  tan.conExt[6].AOpa := tan.conExt[6].A;
  tan.conExt[6].T_a_start := tan.datTanEnv.T_a_start;
  tan.conExt[6].T_b_start := tan.datTanEnv.T_b_start;
  tan.conExt[6].opa.A := tan.conExt[6].AOpa;
  tan.conExt[6].opa.lay[1].A := tan.conExt[6].opa.A;
  tan.conExt[6].opa.lay[1].R := (if tan.conExt[6].opa.lay[1].material.R == 0
     then tan.conExt[6].opa.lay[1].material.x/tan.conExt[6].opa.lay[1].material.k
    /tan.conExt[6].opa.lay[1].A else tan.conExt[6].opa.lay[1].material.R/
    tan.conExt[6].opa.lay[1].A);
  tan.conExt[6].opa.lay[2].A := tan.conExt[6].opa.A;
  tan.conExt[6].opa.lay[2].R := (if tan.conExt[6].opa.lay[2].material.R == 0
     then tan.conExt[6].opa.lay[2].material.x/tan.conExt[6].opa.lay[2].material.k
    /tan.conExt[6].opa.lay[2].A else tan.conExt[6].opa.lay[2].material.R/
    tan.conExt[6].opa.lay[2].A);
  tan.conExt[6].opa.R := tan.conExt[6].opa.lay[1].R+tan.conExt[6].opa.lay[2].R;
  tan.conExt[6].opa.UA := 1/tan.conExt[6].opa.R;
  tan.conExt[6].opa.U := tan.conExt[6].opa.UA/tan.conExt[6].opa.A;
  tan.conExt[6].opa.T_a_start := tan.conExt[6].T_a_start;
  tan.conExt[6].opa.T_b_start := tan.conExt[6].T_b_start;
  tan.conExt[7].A := 0.1*tan.datTanEnv.A;
  tan.conExt[7].AOpa := tan.conExt[7].A;
  tan.conExt[7].T_a_start := tan.datTanEnv.T_a_start;
  tan.conExt[7].T_b_start := tan.datTanEnv.T_b_start;
  tan.conExt[7].opa.A := tan.conExt[7].AOpa;
  tan.conExt[7].opa.lay[1].A := tan.conExt[7].opa.A;
  tan.conExt[7].opa.lay[1].R := (if tan.conExt[7].opa.lay[1].material.R == 0
     then tan.conExt[7].opa.lay[1].material.x/tan.conExt[7].opa.lay[1].material.k
    /tan.conExt[7].opa.lay[1].A else tan.conExt[7].opa.lay[1].material.R/
    tan.conExt[7].opa.lay[1].A);
  tan.conExt[7].opa.lay[2].A := tan.conExt[7].opa.A;
  tan.conExt[7].opa.lay[2].R := (if tan.conExt[7].opa.lay[2].material.R == 0
     then tan.conExt[7].opa.lay[2].material.x/tan.conExt[7].opa.lay[2].material.k
    /tan.conExt[7].opa.lay[2].A else tan.conExt[7].opa.lay[2].material.R/
    tan.conExt[7].opa.lay[2].A);
  tan.conExt[7].opa.R := tan.conExt[7].opa.lay[1].R+tan.conExt[7].opa.lay[2].R;
  tan.conExt[7].opa.UA := 1/tan.conExt[7].opa.R;
  tan.conExt[7].opa.U := tan.conExt[7].opa.UA/tan.conExt[7].opa.A;
  tan.conExt[7].opa.T_a_start := tan.conExt[7].T_a_start;
  tan.conExt[7].opa.T_b_start := tan.conExt[7].T_b_start;
  tan.conExt[8].A := 0.1*tan.datTanEnv.A;
  tan.conExt[8].AOpa := tan.conExt[8].A;
  tan.conExt[8].T_a_start := tan.datTanEnv.T_a_start;
  tan.conExt[8].T_b_start := tan.datTanEnv.T_b_start;
  tan.conExt[8].opa.A := tan.conExt[8].AOpa;
  tan.conExt[8].opa.lay[1].A := tan.conExt[8].opa.A;
  tan.conExt[8].opa.lay[1].R := (if tan.conExt[8].opa.lay[1].material.R == 0
     then tan.conExt[8].opa.lay[1].material.x/tan.conExt[8].opa.lay[1].material.k
    /tan.conExt[8].opa.lay[1].A else tan.conExt[8].opa.lay[1].material.R/
    tan.conExt[8].opa.lay[1].A);
  tan.conExt[8].opa.lay[2].A := tan.conExt[8].opa.A;
  tan.conExt[8].opa.lay[2].R := (if tan.conExt[8].opa.lay[2].material.R == 0
     then tan.conExt[8].opa.lay[2].material.x/tan.conExt[8].opa.lay[2].material.k
    /tan.conExt[8].opa.lay[2].A else tan.conExt[8].opa.lay[2].material.R/
    tan.conExt[8].opa.lay[2].A);
  tan.conExt[8].opa.R := tan.conExt[8].opa.lay[1].R+tan.conExt[8].opa.lay[2].R;
  tan.conExt[8].opa.UA := 1/tan.conExt[8].opa.R;
  tan.conExt[8].opa.U := tan.conExt[8].opa.UA/tan.conExt[8].opa.A;
  tan.conExt[8].opa.T_a_start := tan.conExt[8].T_a_start;
  tan.conExt[8].opa.T_b_start := tan.conExt[8].T_b_start;
  tan.conExt[9].A := 0.1*tan.datTanEnv.A;
  tan.conExt[9].AOpa := tan.conExt[9].A;
  tan.conExt[9].T_a_start := tan.datTanEnv.T_a_start;
  tan.conExt[9].T_b_start := tan.datTanEnv.T_b_start;
  tan.conExt[9].opa.A := tan.conExt[9].AOpa;
  tan.conExt[9].opa.lay[1].A := tan.conExt[9].opa.A;
  tan.conExt[9].opa.lay[1].R := (if tan.conExt[9].opa.lay[1].material.R == 0
     then tan.conExt[9].opa.lay[1].material.x/tan.conExt[9].opa.lay[1].material.k
    /tan.conExt[9].opa.lay[1].A else tan.conExt[9].opa.lay[1].material.R/
    tan.conExt[9].opa.lay[1].A);
  tan.conExt[9].opa.lay[2].A := tan.conExt[9].opa.A;
  tan.conExt[9].opa.lay[2].R := (if tan.conExt[9].opa.lay[2].material.R == 0
     then tan.conExt[9].opa.lay[2].material.x/tan.conExt[9].opa.lay[2].material.k
    /tan.conExt[9].opa.lay[2].A else tan.conExt[9].opa.lay[2].material.R/
    tan.conExt[9].opa.lay[2].A);
  tan.conExt[9].opa.R := tan.conExt[9].opa.lay[1].R+tan.conExt[9].opa.lay[2].R;
  tan.conExt[9].opa.UA := 1/tan.conExt[9].opa.R;
  tan.conExt[9].opa.U := tan.conExt[9].opa.UA/tan.conExt[9].opa.A;
  tan.conExt[9].opa.T_a_start := tan.conExt[9].T_a_start;
  tan.conExt[9].opa.T_b_start := tan.conExt[9].T_b_start;
  tan.conExt[10].A := 0.1*tan.datTanEnv.A;
  tan.conExt[10].AOpa := tan.conExt[10].A;
  tan.conExt[10].T_a_start := tan.datTanEnv.T_a_start;
  tan.conExt[10].T_b_start := tan.datTanEnv.T_b_start;
  tan.conExt[10].opa.A := tan.conExt[10].AOpa;
  tan.conExt[10].opa.lay[1].A := tan.conExt[10].opa.A;
  tan.conExt[10].opa.lay[1].R := (if tan.conExt[10].opa.lay[1].material.R == 0
     then tan.conExt[10].opa.lay[1].material.x/tan.conExt[10].opa.lay[1].material.k
    /tan.conExt[10].opa.lay[1].A else tan.conExt[10].opa.lay[1].material.R/
    tan.conExt[10].opa.lay[1].A);
  tan.conExt[10].opa.lay[2].A := tan.conExt[10].opa.A;
  tan.conExt[10].opa.lay[2].R := (if tan.conExt[10].opa.lay[2].material.R == 0
     then tan.conExt[10].opa.lay[2].material.x/tan.conExt[10].opa.lay[2].material.k
    /tan.conExt[10].opa.lay[2].A else tan.conExt[10].opa.lay[2].material.R/
    tan.conExt[10].opa.lay[2].A);
  tan.conExt[10].opa.R := tan.conExt[10].opa.lay[1].R+tan.conExt[10].opa.lay[2].R;
  tan.conExt[10].opa.UA := 1/tan.conExt[10].opa.R;
  tan.conExt[10].opa.U := tan.conExt[10].opa.UA/tan.conExt[10].opa.A;
  tan.conExt[10].opa.T_a_start := tan.conExt[10].T_a_start;
  tan.conExt[10].opa.T_b_start := tan.conExt[10].T_b_start;
  tan.vol[1].X_start[1] := tan.X_start[1];
  tan.vol[1].m_flow_nominal := tan.m_flow_nominal;
  tan.vol[1].m_flow_small := 0.0001*abs(tan.vol[1].m_flow_nominal);
  tan.vol[1].V := 0.1*tan.VTan;
  tan.vol[1].state_start.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    tan.vol[1].p_start, 
    tan.vol[1].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[1].p_start, 
      tan.vol[1].T_start, 0));
  tan.vol[1].state_start.d := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[1].p_start, 
    tan.vol[1].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[1].p_start, 
      tan.vol[1].T_start, 0));
  tan.vol[1].rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[1].p_start, 
    tan.vol[1].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[1].p_start, 
      tan.vol[1].T_start, 0));
  tan.vol[2].X_start[1] := tan.X_start[1];
  tan.vol[2].m_flow_nominal := tan.m_flow_nominal;
  tan.vol[2].m_flow_small := 0.0001*abs(tan.vol[2].m_flow_nominal);
  tan.vol[2].V := 0.1*tan.VTan;
  tan.vol[2].state_start.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    tan.vol[2].p_start, 
    tan.vol[2].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[2].p_start, 
      tan.vol[2].T_start, 0));
  tan.vol[2].state_start.d := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[2].p_start, 
    tan.vol[2].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[2].p_start, 
      tan.vol[2].T_start, 0));
  tan.vol[2].rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[2].p_start, 
    tan.vol[2].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[2].p_start, 
      tan.vol[2].T_start, 0));
  tan.vol[3].X_start[1] := tan.X_start[1];
  tan.vol[3].m_flow_nominal := tan.m_flow_nominal;
  tan.vol[3].m_flow_small := 0.0001*abs(tan.vol[3].m_flow_nominal);
  tan.vol[3].V := 0.1*tan.VTan;
  tan.vol[3].state_start.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    tan.vol[3].p_start, 
    tan.vol[3].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[3].p_start, 
      tan.vol[3].T_start, 0));
  tan.vol[3].state_start.d := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[3].p_start, 
    tan.vol[3].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[3].p_start, 
      tan.vol[3].T_start, 0));
  tan.vol[3].rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[3].p_start, 
    tan.vol[3].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[3].p_start, 
      tan.vol[3].T_start, 0));
  tan.vol[4].X_start[1] := tan.X_start[1];
  tan.vol[4].m_flow_nominal := tan.m_flow_nominal;
  tan.vol[4].m_flow_small := 0.0001*abs(tan.vol[4].m_flow_nominal);
  tan.vol[4].V := 0.1*tan.VTan;
  tan.vol[4].state_start.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    tan.vol[4].p_start, 
    tan.vol[4].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[4].p_start, 
      tan.vol[4].T_start, 0));
  tan.vol[4].state_start.d := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[4].p_start, 
    tan.vol[4].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[4].p_start, 
      tan.vol[4].T_start, 0));
  tan.vol[4].rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[4].p_start, 
    tan.vol[4].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[4].p_start, 
      tan.vol[4].T_start, 0));
  tan.vol[5].X_start[1] := tan.X_start[1];
  tan.vol[5].m_flow_nominal := tan.m_flow_nominal;
  tan.vol[5].m_flow_small := 0.0001*abs(tan.vol[5].m_flow_nominal);
  tan.vol[5].V := 0.1*tan.VTan;
  tan.vol[5].state_start.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    tan.vol[5].p_start, 
    tan.vol[5].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[5].p_start, 
      tan.vol[5].T_start, 0));
  tan.vol[5].state_start.d := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[5].p_start, 
    tan.vol[5].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[5].p_start, 
      tan.vol[5].T_start, 0));
  tan.vol[5].rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[5].p_start, 
    tan.vol[5].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[5].p_start, 
      tan.vol[5].T_start, 0));
  tan.vol[6].X_start[1] := tan.X_start[1];
  tan.vol[6].m_flow_nominal := tan.m_flow_nominal;
  tan.vol[6].m_flow_small := 0.0001*abs(tan.vol[6].m_flow_nominal);
  tan.vol[6].V := 0.1*tan.VTan;
  tan.vol[6].state_start.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    tan.vol[6].p_start, 
    tan.vol[6].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[6].p_start, 
      tan.vol[6].T_start, 0));
  tan.vol[6].state_start.d := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[6].p_start, 
    tan.vol[6].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[6].p_start, 
      tan.vol[6].T_start, 0));
  tan.vol[6].rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[6].p_start, 
    tan.vol[6].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[6].p_start, 
      tan.vol[6].T_start, 0));
  tan.vol[7].X_start[1] := tan.X_start[1];
  tan.vol[7].m_flow_nominal := tan.m_flow_nominal;
  tan.vol[7].m_flow_small := 0.0001*abs(tan.vol[7].m_flow_nominal);
  tan.vol[7].V := 0.1*tan.VTan;
  tan.vol[7].state_start.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    tan.vol[7].p_start, 
    tan.vol[7].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[7].p_start, 
      tan.vol[7].T_start, 0));
  tan.vol[7].state_start.d := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[7].p_start, 
    tan.vol[7].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[7].p_start, 
      tan.vol[7].T_start, 0));
  tan.vol[7].rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[7].p_start, 
    tan.vol[7].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[7].p_start, 
      tan.vol[7].T_start, 0));
  tan.vol[8].X_start[1] := tan.X_start[1];
  tan.vol[8].m_flow_nominal := tan.m_flow_nominal;
  tan.vol[8].m_flow_small := 0.0001*abs(tan.vol[8].m_flow_nominal);
  tan.vol[8].V := 0.1*tan.VTan;
  tan.vol[8].state_start.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    tan.vol[8].p_start, 
    tan.vol[8].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[8].p_start, 
      tan.vol[8].T_start, 0));
  tan.vol[8].state_start.d := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[8].p_start, 
    tan.vol[8].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[8].p_start, 
      tan.vol[8].T_start, 0));
  tan.vol[8].rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[8].p_start, 
    tan.vol[8].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[8].p_start, 
      tan.vol[8].T_start, 0));
  tan.vol[9].X_start[1] := tan.X_start[1];
  tan.vol[9].m_flow_nominal := tan.m_flow_nominal;
  tan.vol[9].m_flow_small := 0.0001*abs(tan.vol[9].m_flow_nominal);
  tan.vol[9].V := 0.1*tan.VTan;
  tan.vol[9].state_start.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    tan.vol[9].p_start, 
    tan.vol[9].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[9].p_start, 
      tan.vol[9].T_start, 0));
  tan.vol[9].state_start.d := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[9].p_start, 
    tan.vol[9].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[9].p_start, 
      tan.vol[9].T_start, 0));
  tan.vol[9].rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[9].p_start, 
    tan.vol[9].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[9].p_start, 
      tan.vol[9].T_start, 0));
  tan.vol[10].X_start[1] := tan.X_start[1];
  tan.vol[10].m_flow_nominal := tan.m_flow_nominal;
  tan.vol[10].m_flow_small := 0.0001*abs(tan.vol[10].m_flow_nominal);
  tan.vol[10].V := 0.1*tan.VTan;
  tan.vol[10].state_start.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    tan.vol[10].p_start, 
    tan.vol[10].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[10].p_start, 
      tan.vol[10].T_start, 0));
  tan.vol[10].state_start.d := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[10].p_start, 
    tan.vol[10].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[10].p_start, 
      tan.vol[10].T_start, 0));
  tan.vol[10].rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[10].p_start, 
    tan.vol[10].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[10].p_start, 
      tan.vol[10].T_start, 0));
  tan.conOpa.A := tan.datTanEnvTop.A;
  tan.conOpa.AOpa := tan.conOpa.A;
  tan.conOpa.T_a_start := tan.datTanEnvTop.T_a_start;
  tan.conOpa.T_b_start := tan.datTanEnvTop.T_b_start;
  tan.conOpa.opa.A := tan.conOpa.AOpa;
  tan.conOpa.opa.lay[1].A := tan.conOpa.opa.A;
  tan.conOpa.opa.lay[1].R := (if tan.conOpa.opa.lay[1].material.R == 0 then 
    tan.conOpa.opa.lay[1].material.x/tan.conOpa.opa.lay[1].material.k/
    tan.conOpa.opa.lay[1].A else tan.conOpa.opa.lay[1].material.R/
    tan.conOpa.opa.lay[1].A);
  tan.conOpa.opa.lay[2].A := tan.conOpa.opa.A;
  tan.conOpa.opa.lay[2].R := (if tan.conOpa.opa.lay[2].material.R == 0 then 
    tan.conOpa.opa.lay[2].material.x/tan.conOpa.opa.lay[2].material.k/
    tan.conOpa.opa.lay[2].A else tan.conOpa.opa.lay[2].material.R/
    tan.conOpa.opa.lay[2].A);
  tan.conOpa.opa.R := tan.conOpa.opa.lay[1].R+tan.conOpa.opa.lay[2].R;
  tan.conOpa.opa.UA := 1/tan.conOpa.opa.R;
  tan.conOpa.opa.U := tan.conOpa.opa.UA/tan.conOpa.opa.A;
  tan.conOpa.opa.T_a_start := tan.conOpa.T_a_start;
  tan.conOpa.opa.T_b_start := tan.conOpa.T_b_start;
  tan.conOpa3.A := tan.datTanEnvBot.A;
  tan.conOpa3.AOpa := tan.conOpa3.A;
  tan.conOpa3.T_a_start := tan.datTanEnvBot.T_a_start;
  tan.conOpa3.T_b_start := tan.datTanEnvBot.T_b_start;
  tan.conOpa3.opa.A := tan.conOpa3.AOpa;
  tan.conOpa3.opa.lay[1].A := tan.conOpa3.opa.A;
  tan.conOpa3.opa.lay[1].R := (if tan.conOpa3.opa.lay[1].material.R == 0 then 
    tan.conOpa3.opa.lay[1].material.x/tan.conOpa3.opa.lay[1].material.k/
    tan.conOpa3.opa.lay[1].A else tan.conOpa3.opa.lay[1].material.R/
    tan.conOpa3.opa.lay[1].A);
  tan.conOpa3.opa.R := tan.conOpa3.opa.lay[1].R;
  tan.conOpa3.opa.UA := 1/tan.conOpa3.opa.R;
  tan.conOpa3.opa.U := tan.conOpa3.opa.UA/tan.conOpa3.opa.A;
  tan.conOpa3.opa.T_a_start := tan.conOpa3.T_a_start;
  tan.conOpa3.opa.T_b_start := tan.conOpa3.T_b_start;
  tan.m_flow_C[1] := tan.c_sr*tan.m_flow_sr;
  tan.m_flow_C[2] := tan.c_sr*tan.m_flow_sr;
  tan.m_flow_C[3] := tan.c_sr*tan.m_flow_sr;
  tan.m_flow_C[4] := tan.c_sr*tan.m_flow_sr;
  tan.m_flow_C[5] := tan.c_sr*tan.m_flow_sr;
  tan.m_flow_C[6] := tan.c_sr*tan.m_flow_sr;
  tan.m_flow_C[7] := tan.c_sr*tan.m_flow_sr;
  tan.m_flow_C[8] := tan.c_sr*tan.m_flow_sr;
  tan.m_flow_C[9] := tan.c_sr*tan.m_flow_sr;
  tan.m_flow_C[10] := tan.m_flow_sr;
  tan.convConBou2.A := tan.datTanEnvBot.A;
  tan.convConBou2.hFixed := tan.hFixed;
  tan.convConBou3.A := tan.datTanEnvTop.A;
  tan.convConBou3.hFixed := tan.hFixed;
  tan.convConBou4[1].A := 0.1*tan.datTanEnv.A;
  tan.convConBou4[1].hFixed := tan.hFixed;
  tan.convConBou4[2].A := 0.1*tan.datTanEnv.A;
  tan.convConBou4[2].hFixed := tan.hFixed;
  tan.convConBou4[3].A := 0.1*tan.datTanEnv.A;
  tan.convConBou4[3].hFixed := tan.hFixed;
  tan.convConBou4[4].A := 0.1*tan.datTanEnv.A;
  tan.convConBou4[4].hFixed := tan.hFixed;
  tan.convConBou4[5].A := 0.1*tan.datTanEnv.A;
  tan.convConBou4[5].hFixed := tan.hFixed;
  tan.convConBou4[6].A := 0.1*tan.datTanEnv.A;
  tan.convConBou4[6].hFixed := tan.hFixed;
  tan.convConBou4[7].A := 0.1*tan.datTanEnv.A;
  tan.convConBou4[7].hFixed := tan.hFixed;
  tan.convConBou4[8].A := 0.1*tan.datTanEnv.A;
  tan.convConBou4[8].hFixed := tan.hFixed;
  tan.convConBou4[9].A := 0.1*tan.datTanEnv.A;
  tan.convConBou4[9].hFixed := tan.hFixed;
  tan.convConBou4[10].A := 0.1*tan.datTanEnv.A;
  tan.convConBou4[10].hFixed := tan.hFixed;
  tan.draHeaTra.TIn := tan.TIn;
  tan.convConBou8[1].A := 0.1*tan.datTanEnv.A;
  tan.convConBou8[1].hFixed := tan.hFixed;
  tan.convConBou8[2].A := 0.1*tan.datTanEnv.A;
  tan.convConBou8[2].hFixed := tan.hFixed;
  tan.convConBou8[3].A := 0.1*tan.datTanEnv.A;
  tan.convConBou8[3].hFixed := tan.hFixed;
  tan.convConBou8[4].A := 0.1*tan.datTanEnv.A;
  tan.convConBou8[4].hFixed := tan.hFixed;
  tan.convConBou8[5].A := 0.1*tan.datTanEnv.A;
  tan.convConBou8[5].hFixed := tan.hFixed;
  tan.convConBou8[6].A := 0.1*tan.datTanEnv.A;
  tan.convConBou8[6].hFixed := tan.hFixed;
  tan.convConBou8[7].A := 0.1*tan.datTanEnv.A;
  tan.convConBou8[7].hFixed := tan.hFixed;
  tan.convConBou8[8].A := 0.1*tan.datTanEnv.A;
  tan.convConBou8[8].hFixed := tan.hFixed;
  tan.convConBou8[9].A := 0.1*tan.datTanEnv.A;
  tan.convConBou8[9].hFixed := tan.hFixed;
  tan.convConBou8[10].A := 0.1*tan.datTanEnv.A;
  tan.convConBou8[10].hFixed := tan.hFixed;
  tan.convConBou9[1].A := 0.1*tan.datTanEnv.A;
  tan.convConBou9[1].hFixed := tan.hFixed;
  tan.convConBou9[2].A := 0.1*tan.datTanEnv.A;
  tan.convConBou9[2].hFixed := tan.hFixed;
  tan.convConBou9[3].A := 0.1*tan.datTanEnv.A;
  tan.convConBou9[3].hFixed := tan.hFixed;
  tan.convConBou9[4].A := 0.1*tan.datTanEnv.A;
  tan.convConBou9[4].hFixed := tan.hFixed;
  tan.convConBou9[5].A := 0.1*tan.datTanEnv.A;
  tan.convConBou9[5].hFixed := tan.hFixed;
  tan.convConBou9[6].A := 0.1*tan.datTanEnv.A;
  tan.convConBou9[6].hFixed := tan.hFixed;
  tan.convConBou9[7].A := 0.1*tan.datTanEnv.A;
  tan.convConBou9[7].hFixed := tan.hFixed;
  tan.convConBou9[8].A := 0.1*tan.datTanEnv.A;
  tan.convConBou9[8].hFixed := tan.hFixed;
  tan.convConBou9[9].A := 0.1*tan.datTanEnv.A;
  tan.convConBou9[9].hFixed := tan.hFixed;
  tan.convConBou9[10].A := 0.1*tan.datTanEnv.A;
  tan.convConBou9[10].hFixed := tan.hFixed;
  tan.fsRadiationExchange1[1].A := 0.1*tan.datTanEnv.A;
  tan.fsRadiationExchange1[2].A := 0.1*tan.datTanEnv.A;
  tan.fsRadiationExchange1[3].A := 0.1*tan.datTanEnv.A;
  tan.fsRadiationExchange1[4].A := 0.1*tan.datTanEnv.A;
  tan.fsRadiationExchange1[5].A := 0.1*tan.datTanEnv.A;
  tan.fsRadiationExchange1[6].A := 0.1*tan.datTanEnv.A;
  tan.fsRadiationExchange1[7].A := 0.1*tan.datTanEnv.A;
  tan.fsRadiationExchange1[8].A := 0.1*tan.datTanEnv.A;
  tan.fsRadiationExchange1[9].A := 0.1*tan.datTanEnv.A;
  tan.fsRadiationExchange1[10].A := 0.1*tan.datTanEnv.A;
  tan.convConBou5[1].A := 0.1*tan.datFlueWall.A;
  tan.convConBou5[1].hFixed := tan.hFixed;
  tan.convConBou5[2].A := 0.1*tan.datFlueWall.A;
  tan.convConBou5[2].hFixed := tan.hFixed;
  tan.convConBou5[3].A := 0.1*tan.datFlueWall.A;
  tan.convConBou5[3].hFixed := tan.hFixed;
  tan.convConBou5[4].A := 0.1*tan.datFlueWall.A;
  tan.convConBou5[4].hFixed := tan.hFixed;
  tan.convConBou5[5].A := 0.1*tan.datFlueWall.A;
  tan.convConBou5[5].hFixed := tan.hFixed;
  tan.convConBou5[6].A := 0.1*tan.datFlueWall.A;
  tan.convConBou5[6].hFixed := tan.hFixed;
  tan.convConBou5[7].A := 0.1*tan.datFlueWall.A;
  tan.convConBou5[7].hFixed := tan.hFixed;
  tan.convConBou5[8].A := 0.1*tan.datFlueWall.A;
  tan.convConBou5[8].hFixed := tan.hFixed;
  tan.convConBou5[9].A := 0.1*tan.datFlueWall.A;
  tan.convConBou5[9].hFixed := tan.hFixed;
  tan.convConBou5[10].A := 0.1*tan.datFlueWall.A;
  tan.convConBou5[10].hFixed := tan.hFixed;
  tan.convConBou10.A := tan.datTanEnvTop.A;
  tan.convConBou10.hFixed := tan.hFixed;
  tan.fsRadiationExchange2.A := tan.datTanEnvTop.A;
  tan.buoHeaTra.A := tan.datTanEnvBot.A;
  tan.buoHeaTra.c_wI := tan.c_wI;
  tan.buoHeaTra.m_flow_C := tan.c_sr*tan.m_flow_sr;
  tan.buoHeaTra.buoBas.c_w := tan.buoHeaTra.c_wI;
  tan.buoHeaTra.buoBas.A := tan.buoHeaTra.A;
  tan.buoHeaTra.buoBas.t_H.c_w := tan.buoHeaTra.buoBas.c_w;
  tan.buoHeaTra.buoBas.t_H.A := tan.buoHeaTra.buoBas.A;
  tan.buoHeaTra.buoBas.m_flow_buo_x.c_w := tan.buoHeaTra.buoBas.c_w;
  tan.buoHeaTra.buoBas.m_flow_buo_x.A := tan.buoHeaTra.buoBas.A;
  tan.buoHeaTra.buoFlu[1].c_w := tan.buoHeaTra.c_wI;
  tan.buoHeaTra.buoFlu[1].A := tan.buoHeaTra.A;
  tan.buoHeaTra.buoFlu[1].t_H.c_w := tan.buoHeaTra.buoFlu[1].c_w;
  tan.buoHeaTra.buoFlu[1].t_H.A := tan.buoHeaTra.buoFlu[1].A;
  tan.buoHeaTra.buoFlu[1].m_flow_buo_x.c_w := tan.buoHeaTra.buoFlu[1].c_w;
  tan.buoHeaTra.buoFlu[1].m_flow_buo_x.A := tan.buoHeaTra.buoFlu[1].A;
  tan.buoHeaTra.buoFlu[2].c_w := tan.buoHeaTra.c_wI;
  tan.buoHeaTra.buoFlu[2].A := tan.buoHeaTra.A;
  tan.buoHeaTra.buoFlu[2].t_H.c_w := tan.buoHeaTra.buoFlu[2].c_w;
  tan.buoHeaTra.buoFlu[2].t_H.A := tan.buoHeaTra.buoFlu[2].A;
  tan.buoHeaTra.buoFlu[2].m_flow_buo_x.c_w := tan.buoHeaTra.buoFlu[2].c_w;
  tan.buoHeaTra.buoFlu[2].m_flow_buo_x.A := tan.buoHeaTra.buoFlu[2].A;
  tan.buoHeaTra.buoFlu[3].c_w := tan.buoHeaTra.c_wI;
  tan.buoHeaTra.buoFlu[3].A := tan.buoHeaTra.A;
  tan.buoHeaTra.buoFlu[3].t_H.c_w := tan.buoHeaTra.buoFlu[3].c_w;
  tan.buoHeaTra.buoFlu[3].t_H.A := tan.buoHeaTra.buoFlu[3].A;
  tan.buoHeaTra.buoFlu[3].m_flow_buo_x.c_w := tan.buoHeaTra.buoFlu[3].c_w;
  tan.buoHeaTra.buoFlu[3].m_flow_buo_x.A := tan.buoHeaTra.buoFlu[3].A;
  tan.buoHeaTra.buoFlu[4].c_w := tan.buoHeaTra.c_wI;
  tan.buoHeaTra.buoFlu[4].A := tan.buoHeaTra.A;
  tan.buoHeaTra.buoFlu[4].t_H.c_w := tan.buoHeaTra.buoFlu[4].c_w;
  tan.buoHeaTra.buoFlu[4].t_H.A := tan.buoHeaTra.buoFlu[4].A;
  tan.buoHeaTra.buoFlu[4].m_flow_buo_x.c_w := tan.buoHeaTra.buoFlu[4].c_w;
  tan.buoHeaTra.buoFlu[4].m_flow_buo_x.A := tan.buoHeaTra.buoFlu[4].A;
  tan.buoHeaTra.buoFlu[5].c_w := tan.buoHeaTra.c_wI;
  tan.buoHeaTra.buoFlu[5].A := tan.buoHeaTra.A;
  tan.buoHeaTra.buoFlu[5].t_H.c_w := tan.buoHeaTra.buoFlu[5].c_w;
  tan.buoHeaTra.buoFlu[5].t_H.A := tan.buoHeaTra.buoFlu[5].A;
  tan.buoHeaTra.buoFlu[5].m_flow_buo_x.c_w := tan.buoHeaTra.buoFlu[5].c_w;
  tan.buoHeaTra.buoFlu[5].m_flow_buo_x.A := tan.buoHeaTra.buoFlu[5].A;
  tan.buoHeaTra.buoFlu[6].c_w := tan.buoHeaTra.c_wI;
  tan.buoHeaTra.buoFlu[6].A := tan.buoHeaTra.A;
  tan.buoHeaTra.buoFlu[6].t_H.c_w := tan.buoHeaTra.buoFlu[6].c_w;
  tan.buoHeaTra.buoFlu[6].t_H.A := tan.buoHeaTra.buoFlu[6].A;
  tan.buoHeaTra.buoFlu[6].m_flow_buo_x.c_w := tan.buoHeaTra.buoFlu[6].c_w;
  tan.buoHeaTra.buoFlu[6].m_flow_buo_x.A := tan.buoHeaTra.buoFlu[6].A;
  tan.buoHeaTra.buoFlu[7].c_w := tan.buoHeaTra.c_wI;
  tan.buoHeaTra.buoFlu[7].A := tan.buoHeaTra.A;
  tan.buoHeaTra.buoFlu[7].t_H.c_w := tan.buoHeaTra.buoFlu[7].c_w;
  tan.buoHeaTra.buoFlu[7].t_H.A := tan.buoHeaTra.buoFlu[7].A;
  tan.buoHeaTra.buoFlu[7].m_flow_buo_x.c_w := tan.buoHeaTra.buoFlu[7].c_w;
  tan.buoHeaTra.buoFlu[7].m_flow_buo_x.A := tan.buoHeaTra.buoFlu[7].A;
  tan.buoHeaTra.buoFlu[8].c_w := tan.buoHeaTra.c_wI;
  tan.buoHeaTra.buoFlu[8].A := tan.buoHeaTra.A;
  tan.buoHeaTra.buoFlu[8].t_H.c_w := tan.buoHeaTra.buoFlu[8].c_w;
  tan.buoHeaTra.buoFlu[8].t_H.A := tan.buoHeaTra.buoFlu[8].A;
  tan.buoHeaTra.buoFlu[8].m_flow_buo_x.c_w := tan.buoHeaTra.buoFlu[8].c_w;
  tan.buoHeaTra.buoFlu[8].m_flow_buo_x.A := tan.buoHeaTra.buoFlu[8].A;
  tan.buoHeaTra.buoFlu[9].c_w := tan.buoHeaTra.c_wI;
  tan.buoHeaTra.buoFlu[9].A := tan.buoHeaTra.A;
  tan.buoHeaTra.buoFlu[9].t_H.c_w := tan.buoHeaTra.buoFlu[9].c_w;
  tan.buoHeaTra.buoFlu[9].t_H.A := tan.buoHeaTra.buoFlu[9].A;
  tan.buoHeaTra.buoFlu[9].m_flow_buo_x.c_w := tan.buoHeaTra.buoFlu[9].c_w;
  tan.buoHeaTra.buoFlu[9].m_flow_buo_x.A := tan.buoHeaTra.buoFlu[9].A;
  tan.buoHeaTra.buoFlu[10].c_w := tan.buoHeaTra.c_wI;
  tan.buoHeaTra.buoFlu[10].A := tan.buoHeaTra.A;
  tan.buoHeaTra.buoFlu[10].t_H.c_w := tan.buoHeaTra.buoFlu[10].c_w;
  tan.buoHeaTra.buoFlu[10].t_H.A := tan.buoHeaTra.buoFlu[10].A;
  tan.buoHeaTra.buoFlu[10].m_flow_buo_x.c_w := tan.buoHeaTra.buoFlu[10].c_w;
  tan.buoHeaTra.buoFlu[10].m_flow_buo_x.A := tan.buoHeaTra.buoFlu[10].A;
  tan.buoHeaTra.qBuo.m_flow_C := tan.buoHeaTra.m_flow_C;
  tan.flueWall[1].opa.lay[1].UA := 1/tan.flueWall[1].opa.lay[1].R;
  tan.flueWall[1].opa.lay[1].U := tan.flueWall[1].opa.lay[1].UA/tan.flueWall[1].opa.lay[1].A;
  tan.flueWall[1].opa.lay[1].C := tan.flueWall[1].opa.lay[1].A*tan.flueWall[1].opa.lay[1].material.x
    *tan.flueWall[1].opa.lay[1].material.d*tan.flueWall[1].opa.lay[1].material.c
    /tan.flueWall[1].opa.lay[1].material.nSta;
  tan.flueWall[1].opa.lay[1].UAnSta := tan.flueWall[1].opa.lay[1].UA*
    tan.flueWall[1].opa.lay[1].nSta;
  tan.flueWall[1].opa.lay[1].UAnSta2 := 2*tan.flueWall[1].opa.lay[1].UAnSta;
  tan.flueWall[2].opa.lay[1].UA := 1/tan.flueWall[2].opa.lay[1].R;
  tan.flueWall[2].opa.lay[1].U := tan.flueWall[2].opa.lay[1].UA/tan.flueWall[2].opa.lay[1].A;
  tan.flueWall[2].opa.lay[1].C := tan.flueWall[2].opa.lay[1].A*tan.flueWall[2].opa.lay[1].material.x
    *tan.flueWall[2].opa.lay[1].material.d*tan.flueWall[2].opa.lay[1].material.c
    /tan.flueWall[2].opa.lay[1].material.nSta;
  tan.flueWall[2].opa.lay[1].UAnSta := tan.flueWall[2].opa.lay[1].UA*
    tan.flueWall[2].opa.lay[1].nSta;
  tan.flueWall[2].opa.lay[1].UAnSta2 := 2*tan.flueWall[2].opa.lay[1].UAnSta;
  tan.flueWall[3].opa.lay[1].UA := 1/tan.flueWall[3].opa.lay[1].R;
  tan.flueWall[3].opa.lay[1].U := tan.flueWall[3].opa.lay[1].UA/tan.flueWall[3].opa.lay[1].A;
  tan.flueWall[3].opa.lay[1].C := tan.flueWall[3].opa.lay[1].A*tan.flueWall[3].opa.lay[1].material.x
    *tan.flueWall[3].opa.lay[1].material.d*tan.flueWall[3].opa.lay[1].material.c
    /tan.flueWall[3].opa.lay[1].material.nSta;
  tan.flueWall[3].opa.lay[1].UAnSta := tan.flueWall[3].opa.lay[1].UA*
    tan.flueWall[3].opa.lay[1].nSta;
  tan.flueWall[3].opa.lay[1].UAnSta2 := 2*tan.flueWall[3].opa.lay[1].UAnSta;
  tan.flueWall[4].opa.lay[1].UA := 1/tan.flueWall[4].opa.lay[1].R;
  tan.flueWall[4].opa.lay[1].U := tan.flueWall[4].opa.lay[1].UA/tan.flueWall[4].opa.lay[1].A;
  tan.flueWall[4].opa.lay[1].C := tan.flueWall[4].opa.lay[1].A*tan.flueWall[4].opa.lay[1].material.x
    *tan.flueWall[4].opa.lay[1].material.d*tan.flueWall[4].opa.lay[1].material.c
    /tan.flueWall[4].opa.lay[1].material.nSta;
  tan.flueWall[4].opa.lay[1].UAnSta := tan.flueWall[4].opa.lay[1].UA*
    tan.flueWall[4].opa.lay[1].nSta;
  tan.flueWall[4].opa.lay[1].UAnSta2 := 2*tan.flueWall[4].opa.lay[1].UAnSta;
  tan.flueWall[5].opa.lay[1].UA := 1/tan.flueWall[5].opa.lay[1].R;
  tan.flueWall[5].opa.lay[1].U := tan.flueWall[5].opa.lay[1].UA/tan.flueWall[5].opa.lay[1].A;
  tan.flueWall[5].opa.lay[1].C := tan.flueWall[5].opa.lay[1].A*tan.flueWall[5].opa.lay[1].material.x
    *tan.flueWall[5].opa.lay[1].material.d*tan.flueWall[5].opa.lay[1].material.c
    /tan.flueWall[5].opa.lay[1].material.nSta;
  tan.flueWall[5].opa.lay[1].UAnSta := tan.flueWall[5].opa.lay[1].UA*
    tan.flueWall[5].opa.lay[1].nSta;
  tan.flueWall[5].opa.lay[1].UAnSta2 := 2*tan.flueWall[5].opa.lay[1].UAnSta;
  tan.flueWall[6].opa.lay[1].UA := 1/tan.flueWall[6].opa.lay[1].R;
  tan.flueWall[6].opa.lay[1].U := tan.flueWall[6].opa.lay[1].UA/tan.flueWall[6].opa.lay[1].A;
  tan.flueWall[6].opa.lay[1].C := tan.flueWall[6].opa.lay[1].A*tan.flueWall[6].opa.lay[1].material.x
    *tan.flueWall[6].opa.lay[1].material.d*tan.flueWall[6].opa.lay[1].material.c
    /tan.flueWall[6].opa.lay[1].material.nSta;
  tan.flueWall[6].opa.lay[1].UAnSta := tan.flueWall[6].opa.lay[1].UA*
    tan.flueWall[6].opa.lay[1].nSta;
  tan.flueWall[6].opa.lay[1].UAnSta2 := 2*tan.flueWall[6].opa.lay[1].UAnSta;
  tan.flueWall[7].opa.lay[1].UA := 1/tan.flueWall[7].opa.lay[1].R;
  tan.flueWall[7].opa.lay[1].U := tan.flueWall[7].opa.lay[1].UA/tan.flueWall[7].opa.lay[1].A;
  tan.flueWall[7].opa.lay[1].C := tan.flueWall[7].opa.lay[1].A*tan.flueWall[7].opa.lay[1].material.x
    *tan.flueWall[7].opa.lay[1].material.d*tan.flueWall[7].opa.lay[1].material.c
    /tan.flueWall[7].opa.lay[1].material.nSta;
  tan.flueWall[7].opa.lay[1].UAnSta := tan.flueWall[7].opa.lay[1].UA*
    tan.flueWall[7].opa.lay[1].nSta;
  tan.flueWall[7].opa.lay[1].UAnSta2 := 2*tan.flueWall[7].opa.lay[1].UAnSta;
  tan.flueWall[8].opa.lay[1].UA := 1/tan.flueWall[8].opa.lay[1].R;
  tan.flueWall[8].opa.lay[1].U := tan.flueWall[8].opa.lay[1].UA/tan.flueWall[8].opa.lay[1].A;
  tan.flueWall[8].opa.lay[1].C := tan.flueWall[8].opa.lay[1].A*tan.flueWall[8].opa.lay[1].material.x
    *tan.flueWall[8].opa.lay[1].material.d*tan.flueWall[8].opa.lay[1].material.c
    /tan.flueWall[8].opa.lay[1].material.nSta;
  tan.flueWall[8].opa.lay[1].UAnSta := tan.flueWall[8].opa.lay[1].UA*
    tan.flueWall[8].opa.lay[1].nSta;
  tan.flueWall[8].opa.lay[1].UAnSta2 := 2*tan.flueWall[8].opa.lay[1].UAnSta;
  tan.flueWall[9].opa.lay[1].UA := 1/tan.flueWall[9].opa.lay[1].R;
  tan.flueWall[9].opa.lay[1].U := tan.flueWall[9].opa.lay[1].UA/tan.flueWall[9].opa.lay[1].A;
  tan.flueWall[9].opa.lay[1].C := tan.flueWall[9].opa.lay[1].A*tan.flueWall[9].opa.lay[1].material.x
    *tan.flueWall[9].opa.lay[1].material.d*tan.flueWall[9].opa.lay[1].material.c
    /tan.flueWall[9].opa.lay[1].material.nSta;
  tan.flueWall[9].opa.lay[1].UAnSta := tan.flueWall[9].opa.lay[1].UA*
    tan.flueWall[9].opa.lay[1].nSta;
  tan.flueWall[9].opa.lay[1].UAnSta2 := 2*tan.flueWall[9].opa.lay[1].UAnSta;
  tan.flueWall[10].opa.lay[1].UA := 1/tan.flueWall[10].opa.lay[1].R;
  tan.flueWall[10].opa.lay[1].U := tan.flueWall[10].opa.lay[1].UA/
    tan.flueWall[10].opa.lay[1].A;
  tan.flueWall[10].opa.lay[1].C := tan.flueWall[10].opa.lay[1].A*
    tan.flueWall[10].opa.lay[1].material.x*tan.flueWall[10].opa.lay[1].material.d
    *tan.flueWall[10].opa.lay[1].material.c/tan.flueWall[10].opa.lay[1].material.nSta;
  tan.flueWall[10].opa.lay[1].UAnSta := tan.flueWall[10].opa.lay[1].UA*
    tan.flueWall[10].opa.lay[1].nSta;
  tan.flueWall[10].opa.lay[1].UAnSta2 := 2*tan.flueWall[10].opa.lay[1].UAnSta;
  tan.conExt[1].opa.lay[1].UA := 1/tan.conExt[1].opa.lay[1].R;
  tan.conExt[1].opa.lay[1].U := tan.conExt[1].opa.lay[1].UA/tan.conExt[1].opa.lay[1].A;
  tan.conExt[1].opa.lay[1].C := tan.conExt[1].opa.lay[1].A*tan.conExt[1].opa.lay[1].material.x
    *tan.conExt[1].opa.lay[1].material.d*tan.conExt[1].opa.lay[1].material.c/
    tan.conExt[1].opa.lay[1].material.nSta;
  tan.conExt[1].opa.lay[1].UAnSta := tan.conExt[1].opa.lay[1].UA*
    tan.conExt[1].opa.lay[1].nSta;
  tan.conExt[1].opa.lay[1].UAnSta2 := 2*tan.conExt[1].opa.lay[1].UAnSta;
  tan.conExt[1].opa.lay[2].UA := 1/tan.conExt[1].opa.lay[2].R;
  tan.conExt[1].opa.lay[2].U := tan.conExt[1].opa.lay[2].UA/tan.conExt[1].opa.lay[2].A;
  tan.conExt[1].opa.lay[2].C := tan.conExt[1].opa.lay[2].A*tan.conExt[1].opa.lay[2].material.x
    *tan.conExt[1].opa.lay[2].material.d*tan.conExt[1].opa.lay[2].material.c/
    tan.conExt[1].opa.lay[2].material.nSta;
  tan.conExt[1].opa.lay[2].UAnSta := tan.conExt[1].opa.lay[2].UA*
    tan.conExt[1].opa.lay[2].nSta;
  tan.conExt[1].opa.lay[2].UAnSta2 := 2*tan.conExt[1].opa.lay[2].UAnSta;
  tan.conExt[2].opa.lay[1].UA := 1/tan.conExt[2].opa.lay[1].R;
  tan.conExt[2].opa.lay[1].U := tan.conExt[2].opa.lay[1].UA/tan.conExt[2].opa.lay[1].A;
  tan.conExt[2].opa.lay[1].C := tan.conExt[2].opa.lay[1].A*tan.conExt[2].opa.lay[1].material.x
    *tan.conExt[2].opa.lay[1].material.d*tan.conExt[2].opa.lay[1].material.c/
    tan.conExt[2].opa.lay[1].material.nSta;
  tan.conExt[2].opa.lay[1].UAnSta := tan.conExt[2].opa.lay[1].UA*
    tan.conExt[2].opa.lay[1].nSta;
  tan.conExt[2].opa.lay[1].UAnSta2 := 2*tan.conExt[2].opa.lay[1].UAnSta;
  tan.conExt[2].opa.lay[2].UA := 1/tan.conExt[2].opa.lay[2].R;
  tan.conExt[2].opa.lay[2].U := tan.conExt[2].opa.lay[2].UA/tan.conExt[2].opa.lay[2].A;
  tan.conExt[2].opa.lay[2].C := tan.conExt[2].opa.lay[2].A*tan.conExt[2].opa.lay[2].material.x
    *tan.conExt[2].opa.lay[2].material.d*tan.conExt[2].opa.lay[2].material.c/
    tan.conExt[2].opa.lay[2].material.nSta;
  tan.conExt[2].opa.lay[2].UAnSta := tan.conExt[2].opa.lay[2].UA*
    tan.conExt[2].opa.lay[2].nSta;
  tan.conExt[2].opa.lay[2].UAnSta2 := 2*tan.conExt[2].opa.lay[2].UAnSta;
  tan.conExt[3].opa.lay[1].UA := 1/tan.conExt[3].opa.lay[1].R;
  tan.conExt[3].opa.lay[1].U := tan.conExt[3].opa.lay[1].UA/tan.conExt[3].opa.lay[1].A;
  tan.conExt[3].opa.lay[1].C := tan.conExt[3].opa.lay[1].A*tan.conExt[3].opa.lay[1].material.x
    *tan.conExt[3].opa.lay[1].material.d*tan.conExt[3].opa.lay[1].material.c/
    tan.conExt[3].opa.lay[1].material.nSta;
  tan.conExt[3].opa.lay[1].UAnSta := tan.conExt[3].opa.lay[1].UA*
    tan.conExt[3].opa.lay[1].nSta;
  tan.conExt[3].opa.lay[1].UAnSta2 := 2*tan.conExt[3].opa.lay[1].UAnSta;
  tan.conExt[3].opa.lay[2].UA := 1/tan.conExt[3].opa.lay[2].R;
  tan.conExt[3].opa.lay[2].U := tan.conExt[3].opa.lay[2].UA/tan.conExt[3].opa.lay[2].A;
  tan.conExt[3].opa.lay[2].C := tan.conExt[3].opa.lay[2].A*tan.conExt[3].opa.lay[2].material.x
    *tan.conExt[3].opa.lay[2].material.d*tan.conExt[3].opa.lay[2].material.c/
    tan.conExt[3].opa.lay[2].material.nSta;
  tan.conExt[3].opa.lay[2].UAnSta := tan.conExt[3].opa.lay[2].UA*
    tan.conExt[3].opa.lay[2].nSta;
  tan.conExt[3].opa.lay[2].UAnSta2 := 2*tan.conExt[3].opa.lay[2].UAnSta;
  tan.conExt[4].opa.lay[1].UA := 1/tan.conExt[4].opa.lay[1].R;
  tan.conExt[4].opa.lay[1].U := tan.conExt[4].opa.lay[1].UA/tan.conExt[4].opa.lay[1].A;
  tan.conExt[4].opa.lay[1].C := tan.conExt[4].opa.lay[1].A*tan.conExt[4].opa.lay[1].material.x
    *tan.conExt[4].opa.lay[1].material.d*tan.conExt[4].opa.lay[1].material.c/
    tan.conExt[4].opa.lay[1].material.nSta;
  tan.conExt[4].opa.lay[1].UAnSta := tan.conExt[4].opa.lay[1].UA*
    tan.conExt[4].opa.lay[1].nSta;
  tan.conExt[4].opa.lay[1].UAnSta2 := 2*tan.conExt[4].opa.lay[1].UAnSta;
  tan.conExt[4].opa.lay[2].UA := 1/tan.conExt[4].opa.lay[2].R;
  tan.conExt[4].opa.lay[2].U := tan.conExt[4].opa.lay[2].UA/tan.conExt[4].opa.lay[2].A;
  tan.conExt[4].opa.lay[2].C := tan.conExt[4].opa.lay[2].A*tan.conExt[4].opa.lay[2].material.x
    *tan.conExt[4].opa.lay[2].material.d*tan.conExt[4].opa.lay[2].material.c/
    tan.conExt[4].opa.lay[2].material.nSta;
  tan.conExt[4].opa.lay[2].UAnSta := tan.conExt[4].opa.lay[2].UA*
    tan.conExt[4].opa.lay[2].nSta;
  tan.conExt[4].opa.lay[2].UAnSta2 := 2*tan.conExt[4].opa.lay[2].UAnSta;
  tan.conExt[5].opa.lay[1].UA := 1/tan.conExt[5].opa.lay[1].R;
  tan.conExt[5].opa.lay[1].U := tan.conExt[5].opa.lay[1].UA/tan.conExt[5].opa.lay[1].A;
  tan.conExt[5].opa.lay[1].C := tan.conExt[5].opa.lay[1].A*tan.conExt[5].opa.lay[1].material.x
    *tan.conExt[5].opa.lay[1].material.d*tan.conExt[5].opa.lay[1].material.c/
    tan.conExt[5].opa.lay[1].material.nSta;
  tan.conExt[5].opa.lay[1].UAnSta := tan.conExt[5].opa.lay[1].UA*
    tan.conExt[5].opa.lay[1].nSta;
  tan.conExt[5].opa.lay[1].UAnSta2 := 2*tan.conExt[5].opa.lay[1].UAnSta;
  tan.conExt[5].opa.lay[2].UA := 1/tan.conExt[5].opa.lay[2].R;
  tan.conExt[5].opa.lay[2].U := tan.conExt[5].opa.lay[2].UA/tan.conExt[5].opa.lay[2].A;
  tan.conExt[5].opa.lay[2].C := tan.conExt[5].opa.lay[2].A*tan.conExt[5].opa.lay[2].material.x
    *tan.conExt[5].opa.lay[2].material.d*tan.conExt[5].opa.lay[2].material.c/
    tan.conExt[5].opa.lay[2].material.nSta;
  tan.conExt[5].opa.lay[2].UAnSta := tan.conExt[5].opa.lay[2].UA*
    tan.conExt[5].opa.lay[2].nSta;
  tan.conExt[5].opa.lay[2].UAnSta2 := 2*tan.conExt[5].opa.lay[2].UAnSta;
  tan.conExt[6].opa.lay[1].UA := 1/tan.conExt[6].opa.lay[1].R;
  tan.conExt[6].opa.lay[1].U := tan.conExt[6].opa.lay[1].UA/tan.conExt[6].opa.lay[1].A;
  tan.conExt[6].opa.lay[1].C := tan.conExt[6].opa.lay[1].A*tan.conExt[6].opa.lay[1].material.x
    *tan.conExt[6].opa.lay[1].material.d*tan.conExt[6].opa.lay[1].material.c/
    tan.conExt[6].opa.lay[1].material.nSta;
  tan.conExt[6].opa.lay[1].UAnSta := tan.conExt[6].opa.lay[1].UA*
    tan.conExt[6].opa.lay[1].nSta;
  tan.conExt[6].opa.lay[1].UAnSta2 := 2*tan.conExt[6].opa.lay[1].UAnSta;
  tan.conExt[6].opa.lay[2].UA := 1/tan.conExt[6].opa.lay[2].R;
  tan.conExt[6].opa.lay[2].U := tan.conExt[6].opa.lay[2].UA/tan.conExt[6].opa.lay[2].A;
  tan.conExt[6].opa.lay[2].C := tan.conExt[6].opa.lay[2].A*tan.conExt[6].opa.lay[2].material.x
    *tan.conExt[6].opa.lay[2].material.d*tan.conExt[6].opa.lay[2].material.c/
    tan.conExt[6].opa.lay[2].material.nSta;
  tan.conExt[6].opa.lay[2].UAnSta := tan.conExt[6].opa.lay[2].UA*
    tan.conExt[6].opa.lay[2].nSta;
  tan.conExt[6].opa.lay[2].UAnSta2 := 2*tan.conExt[6].opa.lay[2].UAnSta;
  tan.conExt[7].opa.lay[1].UA := 1/tan.conExt[7].opa.lay[1].R;
  tan.conExt[7].opa.lay[1].U := tan.conExt[7].opa.lay[1].UA/tan.conExt[7].opa.lay[1].A;
  tan.conExt[7].opa.lay[1].C := tan.conExt[7].opa.lay[1].A*tan.conExt[7].opa.lay[1].material.x
    *tan.conExt[7].opa.lay[1].material.d*tan.conExt[7].opa.lay[1].material.c/
    tan.conExt[7].opa.lay[1].material.nSta;
  tan.conExt[7].opa.lay[1].UAnSta := tan.conExt[7].opa.lay[1].UA*
    tan.conExt[7].opa.lay[1].nSta;
  tan.conExt[7].opa.lay[1].UAnSta2 := 2*tan.conExt[7].opa.lay[1].UAnSta;
  tan.conExt[7].opa.lay[2].UA := 1/tan.conExt[7].opa.lay[2].R;
  tan.conExt[7].opa.lay[2].U := tan.conExt[7].opa.lay[2].UA/tan.conExt[7].opa.lay[2].A;
  tan.conExt[7].opa.lay[2].C := tan.conExt[7].opa.lay[2].A*tan.conExt[7].opa.lay[2].material.x
    *tan.conExt[7].opa.lay[2].material.d*tan.conExt[7].opa.lay[2].material.c/
    tan.conExt[7].opa.lay[2].material.nSta;
  tan.conExt[7].opa.lay[2].UAnSta := tan.conExt[7].opa.lay[2].UA*
    tan.conExt[7].opa.lay[2].nSta;
  tan.conExt[7].opa.lay[2].UAnSta2 := 2*tan.conExt[7].opa.lay[2].UAnSta;
  tan.conExt[8].opa.lay[1].UA := 1/tan.conExt[8].opa.lay[1].R;
  tan.conExt[8].opa.lay[1].U := tan.conExt[8].opa.lay[1].UA/tan.conExt[8].opa.lay[1].A;
  tan.conExt[8].opa.lay[1].C := tan.conExt[8].opa.lay[1].A*tan.conExt[8].opa.lay[1].material.x
    *tan.conExt[8].opa.lay[1].material.d*tan.conExt[8].opa.lay[1].material.c/
    tan.conExt[8].opa.lay[1].material.nSta;
  tan.conExt[8].opa.lay[1].UAnSta := tan.conExt[8].opa.lay[1].UA*
    tan.conExt[8].opa.lay[1].nSta;
  tan.conExt[8].opa.lay[1].UAnSta2 := 2*tan.conExt[8].opa.lay[1].UAnSta;
  tan.conExt[8].opa.lay[2].UA := 1/tan.conExt[8].opa.lay[2].R;
  tan.conExt[8].opa.lay[2].U := tan.conExt[8].opa.lay[2].UA/tan.conExt[8].opa.lay[2].A;
  tan.conExt[8].opa.lay[2].C := tan.conExt[8].opa.lay[2].A*tan.conExt[8].opa.lay[2].material.x
    *tan.conExt[8].opa.lay[2].material.d*tan.conExt[8].opa.lay[2].material.c/
    tan.conExt[8].opa.lay[2].material.nSta;
  tan.conExt[8].opa.lay[2].UAnSta := tan.conExt[8].opa.lay[2].UA*
    tan.conExt[8].opa.lay[2].nSta;
  tan.conExt[8].opa.lay[2].UAnSta2 := 2*tan.conExt[8].opa.lay[2].UAnSta;
  tan.conExt[9].opa.lay[1].UA := 1/tan.conExt[9].opa.lay[1].R;
  tan.conExt[9].opa.lay[1].U := tan.conExt[9].opa.lay[1].UA/tan.conExt[9].opa.lay[1].A;
  tan.conExt[9].opa.lay[1].C := tan.conExt[9].opa.lay[1].A*tan.conExt[9].opa.lay[1].material.x
    *tan.conExt[9].opa.lay[1].material.d*tan.conExt[9].opa.lay[1].material.c/
    tan.conExt[9].opa.lay[1].material.nSta;
  tan.conExt[9].opa.lay[1].UAnSta := tan.conExt[9].opa.lay[1].UA*
    tan.conExt[9].opa.lay[1].nSta;
  tan.conExt[9].opa.lay[1].UAnSta2 := 2*tan.conExt[9].opa.lay[1].UAnSta;
  tan.conExt[9].opa.lay[2].UA := 1/tan.conExt[9].opa.lay[2].R;
  tan.conExt[9].opa.lay[2].U := tan.conExt[9].opa.lay[2].UA/tan.conExt[9].opa.lay[2].A;
  tan.conExt[9].opa.lay[2].C := tan.conExt[9].opa.lay[2].A*tan.conExt[9].opa.lay[2].material.x
    *tan.conExt[9].opa.lay[2].material.d*tan.conExt[9].opa.lay[2].material.c/
    tan.conExt[9].opa.lay[2].material.nSta;
  tan.conExt[9].opa.lay[2].UAnSta := tan.conExt[9].opa.lay[2].UA*
    tan.conExt[9].opa.lay[2].nSta;
  tan.conExt[9].opa.lay[2].UAnSta2 := 2*tan.conExt[9].opa.lay[2].UAnSta;
  tan.conExt[10].opa.lay[1].UA := 1/tan.conExt[10].opa.lay[1].R;
  tan.conExt[10].opa.lay[1].U := tan.conExt[10].opa.lay[1].UA/tan.conExt[10].opa.lay[1].A;
  tan.conExt[10].opa.lay[1].C := tan.conExt[10].opa.lay[1].A*tan.conExt[10].opa.lay[1].material.x
    *tan.conExt[10].opa.lay[1].material.d*tan.conExt[10].opa.lay[1].material.c/
    tan.conExt[10].opa.lay[1].material.nSta;
  tan.conExt[10].opa.lay[1].UAnSta := tan.conExt[10].opa.lay[1].UA*
    tan.conExt[10].opa.lay[1].nSta;
  tan.conExt[10].opa.lay[1].UAnSta2 := 2*tan.conExt[10].opa.lay[1].UAnSta;
  tan.conExt[10].opa.lay[2].UA := 1/tan.conExt[10].opa.lay[2].R;
  tan.conExt[10].opa.lay[2].U := tan.conExt[10].opa.lay[2].UA/tan.conExt[10].opa.lay[2].A;
  tan.conExt[10].opa.lay[2].C := tan.conExt[10].opa.lay[2].A*tan.conExt[10].opa.lay[2].material.x
    *tan.conExt[10].opa.lay[2].material.d*tan.conExt[10].opa.lay[2].material.c/
    tan.conExt[10].opa.lay[2].material.nSta;
  tan.conExt[10].opa.lay[2].UAnSta := tan.conExt[10].opa.lay[2].UA*
    tan.conExt[10].opa.lay[2].nSta;
  tan.conExt[10].opa.lay[2].UAnSta2 := 2*tan.conExt[10].opa.lay[2].UAnSta;
  tan.vol[1].dynBal.X_start[1] := tan.vol[1].X_start[1];
  tan.vol[1].dynBal.rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT
    (
    tan.vol[1].dynBal.p_start, 
    tan.vol[1].dynBal.T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[1].dynBal.p_start,
       tan.vol[1].dynBal.T_start, 0));
  tan.vol[2].dynBal.X_start[1] := tan.vol[2].X_start[1];
  tan.vol[2].dynBal.rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT
    (
    tan.vol[2].dynBal.p_start, 
    tan.vol[2].dynBal.T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[2].dynBal.p_start,
       tan.vol[2].dynBal.T_start, 0));
  tan.vol[3].dynBal.X_start[1] := tan.vol[3].X_start[1];
  tan.vol[3].dynBal.rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT
    (
    tan.vol[3].dynBal.p_start, 
    tan.vol[3].dynBal.T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[3].dynBal.p_start,
       tan.vol[3].dynBal.T_start, 0));
  tan.vol[4].dynBal.X_start[1] := tan.vol[4].X_start[1];
  tan.vol[4].dynBal.rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT
    (
    tan.vol[4].dynBal.p_start, 
    tan.vol[4].dynBal.T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[4].dynBal.p_start,
       tan.vol[4].dynBal.T_start, 0));
  tan.vol[5].dynBal.X_start[1] := tan.vol[5].X_start[1];
  tan.vol[5].dynBal.rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT
    (
    tan.vol[5].dynBal.p_start, 
    tan.vol[5].dynBal.T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[5].dynBal.p_start,
       tan.vol[5].dynBal.T_start, 0));
  tan.vol[6].dynBal.X_start[1] := tan.vol[6].X_start[1];
  tan.vol[6].dynBal.rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT
    (
    tan.vol[6].dynBal.p_start, 
    tan.vol[6].dynBal.T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[6].dynBal.p_start,
       tan.vol[6].dynBal.T_start, 0));
  tan.vol[7].dynBal.X_start[1] := tan.vol[7].X_start[1];
  tan.vol[7].dynBal.rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT
    (
    tan.vol[7].dynBal.p_start, 
    tan.vol[7].dynBal.T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[7].dynBal.p_start,
       tan.vol[7].dynBal.T_start, 0));
  tan.vol[8].dynBal.X_start[1] := tan.vol[8].X_start[1];
  tan.vol[8].dynBal.rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT
    (
    tan.vol[8].dynBal.p_start, 
    tan.vol[8].dynBal.T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[8].dynBal.p_start,
       tan.vol[8].dynBal.T_start, 0));
  tan.vol[9].dynBal.X_start[1] := tan.vol[9].X_start[1];
  tan.vol[9].dynBal.rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT
    (
    tan.vol[9].dynBal.p_start, 
    tan.vol[9].dynBal.T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[9].dynBal.p_start,
       tan.vol[9].dynBal.T_start, 0));
  tan.vol[10].dynBal.X_start[1] := tan.vol[10].X_start[1];
  tan.vol[10].dynBal.rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT
    (
    tan.vol[10].dynBal.p_start, 
    tan.vol[10].dynBal.T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[10].dynBal.p_start,
       tan.vol[10].dynBal.T_start, 0));
  tan.conOpa.opa.lay[1].UA := 1/tan.conOpa.opa.lay[1].R;
  tan.conOpa.opa.lay[1].U := tan.conOpa.opa.lay[1].UA/tan.conOpa.opa.lay[1].A;
  tan.conOpa.opa.lay[1].C := tan.conOpa.opa.lay[1].A*tan.conOpa.opa.lay[1].material.x
    *tan.conOpa.opa.lay[1].material.d*tan.conOpa.opa.lay[1].material.c/
    tan.conOpa.opa.lay[1].material.nSta;
  tan.conOpa.opa.lay[1].UAnSta := tan.conOpa.opa.lay[1].UA*tan.conOpa.opa.lay[1].nSta;
  tan.conOpa.opa.lay[1].UAnSta2 := 2*tan.conOpa.opa.lay[1].UAnSta;
  tan.conOpa.opa.lay[2].UA := 1/tan.conOpa.opa.lay[2].R;
  tan.conOpa.opa.lay[2].U := tan.conOpa.opa.lay[2].UA/tan.conOpa.opa.lay[2].A;
  tan.conOpa.opa.lay[2].C := tan.conOpa.opa.lay[2].A*tan.conOpa.opa.lay[2].material.x
    *tan.conOpa.opa.lay[2].material.d*tan.conOpa.opa.lay[2].material.c/
    tan.conOpa.opa.lay[2].material.nSta;
  tan.conOpa.opa.lay[2].UAnSta := tan.conOpa.opa.lay[2].UA*tan.conOpa.opa.lay[2].nSta;
  tan.conOpa.opa.lay[2].UAnSta2 := 2*tan.conOpa.opa.lay[2].UAnSta;
  tan.conOpa3.opa.lay[1].UA := 1/tan.conOpa3.opa.lay[1].R;
  tan.conOpa3.opa.lay[1].U := tan.conOpa3.opa.lay[1].UA/tan.conOpa3.opa.lay[1].A;
  tan.conOpa3.opa.lay[1].C := tan.conOpa3.opa.lay[1].A*tan.conOpa3.opa.lay[1].material.x
    *tan.conOpa3.opa.lay[1].material.d*tan.conOpa3.opa.lay[1].material.c/
    tan.conOpa3.opa.lay[1].material.nSta;
  tan.conOpa3.opa.lay[1].UAnSta := tan.conOpa3.opa.lay[1].UA*tan.conOpa3.opa.lay[1].nSta;
  tan.conOpa3.opa.lay[1].UAnSta2 := 2*tan.conOpa3.opa.lay[1].UAnSta;
  tan.buoHeaTra.buoBas.m_flow_buo_x.h_cw := tan.h_cw_B_cons;
  tan.buoHeaTra.buoBas.m_flow_buo_x.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph
    (
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  algorithm 
    tan.buoHeaTra.buoBas.m_flow_buo_x.y := tan.buoHeaTra.buoBas.m_flow_buo_x.h_cw
      *tan.buoHeaTra.buoBas.m_flow_buo_x.A/(tan.buoHeaTra.buoBas.m_flow_buo_x.c_p
      *tan.buoHeaTra.buoBas.m_flow_buo_x.c_w);
  tan.buoHeaTra.buoMasIn.mFloOutBas := tan.buoHeaTra.buoBas.m_flow_buo_x.y;
  tan.buoHeaTra.dH_BU.mDotBas := tan.buoHeaTra.buoMasIn.mFloOutBas;
  tan.buoHeaTra.dH_BU.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph(
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  tan.convConBou2.u := tan.gain2[1].k*tan.h_WF_cons;
  burn.T_AD_flame.y := burn.T_AD_flame.add.k1*burn.T_AD_flame.const.k+
    burn.T_AD_flame.add.k2*TDryBul.k;
  burn.cdot_G.add.y := burn.cdot_G.add.k1*burn.T_AD_flame.y+burn.cdot_G.add.k2*
    TDryBul.k;
  tan.buoHeaTra.buoBas.t_H.h := tan.h_cw_B_cons;
  tan.buoHeaTra.buoFlu[1].m_flow_buo_x.h_cw := tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[1].m_flow_buo_x.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph
    (
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  algorithm 
    tan.buoHeaTra.buoFlu[1].m_flow_buo_x.y := tan.buoHeaTra.buoFlu[1].m_flow_buo_x.h_cw
      *tan.buoHeaTra.buoFlu[1].m_flow_buo_x.A/(tan.buoHeaTra.buoFlu[1].m_flow_buo_x.c_p
      *tan.buoHeaTra.buoFlu[1].m_flow_buo_x.c_w);
  tan.buoHeaTra.buoMasIn.mFloOutFlu[1] := tan.buoHeaTra.buoFlu[1].m_flow_buo_x.y;
  tan.buoHeaTra.buoFlu[2].m_flow_buo_x.h_cw := tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[2].m_flow_buo_x.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph
    (
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  algorithm 
    tan.buoHeaTra.buoFlu[2].m_flow_buo_x.y := tan.buoHeaTra.buoFlu[2].m_flow_buo_x.h_cw
      *tan.buoHeaTra.buoFlu[2].m_flow_buo_x.A/(tan.buoHeaTra.buoFlu[2].m_flow_buo_x.c_p
      *tan.buoHeaTra.buoFlu[2].m_flow_buo_x.c_w);
  tan.buoHeaTra.buoMasIn.mFloOutFlu[2] := tan.buoHeaTra.buoFlu[2].m_flow_buo_x.y;
  tan.buoHeaTra.buoFlu[3].m_flow_buo_x.h_cw := tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[3].m_flow_buo_x.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph
    (
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  algorithm 
    tan.buoHeaTra.buoFlu[3].m_flow_buo_x.y := tan.buoHeaTra.buoFlu[3].m_flow_buo_x.h_cw
      *tan.buoHeaTra.buoFlu[3].m_flow_buo_x.A/(tan.buoHeaTra.buoFlu[3].m_flow_buo_x.c_p
      *tan.buoHeaTra.buoFlu[3].m_flow_buo_x.c_w);
  tan.buoHeaTra.buoMasIn.mFloOutFlu[3] := tan.buoHeaTra.buoFlu[3].m_flow_buo_x.y;
  tan.buoHeaTra.buoFlu[4].m_flow_buo_x.h_cw := tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[4].m_flow_buo_x.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph
    (
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  algorithm 
    tan.buoHeaTra.buoFlu[4].m_flow_buo_x.y := tan.buoHeaTra.buoFlu[4].m_flow_buo_x.h_cw
      *tan.buoHeaTra.buoFlu[4].m_flow_buo_x.A/(tan.buoHeaTra.buoFlu[4].m_flow_buo_x.c_p
      *tan.buoHeaTra.buoFlu[4].m_flow_buo_x.c_w);
  tan.buoHeaTra.buoMasIn.mFloOutFlu[4] := tan.buoHeaTra.buoFlu[4].m_flow_buo_x.y;
  tan.buoHeaTra.buoFlu[5].m_flow_buo_x.h_cw := tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[5].m_flow_buo_x.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph
    (
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  algorithm 
    tan.buoHeaTra.buoFlu[5].m_flow_buo_x.y := tan.buoHeaTra.buoFlu[5].m_flow_buo_x.h_cw
      *tan.buoHeaTra.buoFlu[5].m_flow_buo_x.A/(tan.buoHeaTra.buoFlu[5].m_flow_buo_x.c_p
      *tan.buoHeaTra.buoFlu[5].m_flow_buo_x.c_w);
  tan.buoHeaTra.buoMasIn.mFloOutFlu[5] := tan.buoHeaTra.buoFlu[5].m_flow_buo_x.y;
  tan.buoHeaTra.buoFlu[6].m_flow_buo_x.h_cw := tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[6].m_flow_buo_x.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph
    (
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  algorithm 
    tan.buoHeaTra.buoFlu[6].m_flow_buo_x.y := tan.buoHeaTra.buoFlu[6].m_flow_buo_x.h_cw
      *tan.buoHeaTra.buoFlu[6].m_flow_buo_x.A/(tan.buoHeaTra.buoFlu[6].m_flow_buo_x.c_p
      *tan.buoHeaTra.buoFlu[6].m_flow_buo_x.c_w);
  tan.buoHeaTra.buoMasIn.mFloOutFlu[6] := tan.buoHeaTra.buoFlu[6].m_flow_buo_x.y;
  tan.buoHeaTra.buoFlu[7].m_flow_buo_x.h_cw := tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[7].m_flow_buo_x.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph
    (
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  algorithm 
    tan.buoHeaTra.buoFlu[7].m_flow_buo_x.y := tan.buoHeaTra.buoFlu[7].m_flow_buo_x.h_cw
      *tan.buoHeaTra.buoFlu[7].m_flow_buo_x.A/(tan.buoHeaTra.buoFlu[7].m_flow_buo_x.c_p
      *tan.buoHeaTra.buoFlu[7].m_flow_buo_x.c_w);
  tan.buoHeaTra.buoMasIn.mFloOutFlu[7] := tan.buoHeaTra.buoFlu[7].m_flow_buo_x.y;
  tan.buoHeaTra.buoFlu[8].m_flow_buo_x.h_cw := tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[8].m_flow_buo_x.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph
    (
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  algorithm 
    tan.buoHeaTra.buoFlu[8].m_flow_buo_x.y := tan.buoHeaTra.buoFlu[8].m_flow_buo_x.h_cw
      *tan.buoHeaTra.buoFlu[8].m_flow_buo_x.A/(tan.buoHeaTra.buoFlu[8].m_flow_buo_x.c_p
      *tan.buoHeaTra.buoFlu[8].m_flow_buo_x.c_w);
  tan.buoHeaTra.buoMasIn.mFloOutFlu[8] := tan.buoHeaTra.buoFlu[8].m_flow_buo_x.y;
  tan.buoHeaTra.buoFlu[9].m_flow_buo_x.h_cw := tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[9].m_flow_buo_x.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph
    (
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  algorithm 
    tan.buoHeaTra.buoFlu[9].m_flow_buo_x.y := tan.buoHeaTra.buoFlu[9].m_flow_buo_x.h_cw
      *tan.buoHeaTra.buoFlu[9].m_flow_buo_x.A/(tan.buoHeaTra.buoFlu[9].m_flow_buo_x.c_p
      *tan.buoHeaTra.buoFlu[9].m_flow_buo_x.c_w);
  tan.buoHeaTra.buoMasIn.mFloOutFlu[9] := tan.buoHeaTra.buoFlu[9].m_flow_buo_x.y;
  tan.buoHeaTra.buoFlu[10].m_flow_buo_x.h_cw := tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[10].m_flow_buo_x.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph
    (
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  algorithm 
    tan.buoHeaTra.buoFlu[10].m_flow_buo_x.y := tan.buoHeaTra.buoFlu[10].m_flow_buo_x.h_cw
      *tan.buoHeaTra.buoFlu[10].m_flow_buo_x.A/(tan.buoHeaTra.buoFlu[10].m_flow_buo_x.c_p
      *tan.buoHeaTra.buoFlu[10].m_flow_buo_x.c_w);
  tan.buoHeaTra.buoMasIn.mFloOutFlu[10] := tan.buoHeaTra.buoFlu[10].m_flow_buo_x.y;
  burn.fsRadiationExchange4.u := 1/(1.22222222222222+(1+1/(burn.absIR_Fla*
    burn.fv))/burn.absIR_FS);
  TBCBot.port.Q_flow := (-5.6704E-008)*(burn.fsRadiationExchange4.u*
    burn.fsRadiationExchange4.A*(TFloor.k^4-burn.T_AD_flame.y^4));
  tan.buoHeaTra.buoFlu[1].t_H.h := tan.h_WF_cons;
  tan.convConBou1[2].u := tan.gain2[2].k*tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[2].t_H.h := tan.h_WF_cons;
  tan.convConBou1[3].u := tan.gain2[3].k*tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[3].t_H.h := tan.h_WF_cons;
  tan.convConBou1[4].u := tan.gain2[4].k*tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[4].t_H.h := tan.h_WF_cons;
  tan.convConBou1[5].u := tan.gain2[5].k*tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[5].t_H.h := tan.h_WF_cons;
  tan.convConBou1[6].u := tan.gain2[6].k*tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[6].t_H.h := tan.h_WF_cons;
  tan.convConBou1[7].u := tan.gain2[7].k*tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[7].t_H.h := tan.h_WF_cons;
  tan.convConBou1[8].u := tan.gain2[8].k*tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[8].t_H.h := tan.h_WF_cons;
  tan.convConBou1[9].u := tan.gain2[9].k*tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[9].t_H.h := tan.h_WF_cons;
  tan.convConBou1[10].u := tan.gain2[10].k*tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[10].t_H.h := tan.h_WF_cons;
  tan.draHeaTra.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph(
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  tan.buoHeaTra.dH_BU.mDotFlu[1] := tan.buoHeaTra.buoMasIn.mFloOutFlu[1];
  tan.buoHeaTra.dH_BU.mDotFlu[2] := tan.buoHeaTra.buoMasIn.mFloOutFlu[2];
  tan.buoHeaTra.dH_BU.mDotFlu[3] := tan.buoHeaTra.buoMasIn.mFloOutFlu[3];
  tan.buoHeaTra.dH_BU.mDotFlu[4] := tan.buoHeaTra.buoMasIn.mFloOutFlu[4];
  tan.buoHeaTra.dH_BU.mDotFlu[5] := tan.buoHeaTra.buoMasIn.mFloOutFlu[5];
  tan.buoHeaTra.dH_BU.mDotFlu[6] := tan.buoHeaTra.buoMasIn.mFloOutFlu[6];
  tan.buoHeaTra.dH_BU.mDotFlu[7] := tan.buoHeaTra.buoMasIn.mFloOutFlu[7];
  tan.buoHeaTra.dH_BU.mDotFlu[8] := tan.buoHeaTra.buoMasIn.mFloOutFlu[8];
  tan.buoHeaTra.dH_BU.mDotFlu[9] := tan.buoHeaTra.buoMasIn.mFloOutFlu[9];
  tan.buoHeaTra.dH_BU.mDotFlu[10] := tan.buoHeaTra.buoMasIn.mFloOutFlu[10];
  tan.buoHeaTra.qBuo.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph(
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  tan.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph(
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.vol[10].V*der(tan.vol[10].dynBal.medium.d) = 0.0;
      */
      der(tan.vol[10].dynBal.medium.d) := 0.0;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.vol[8].V*der(tan.vol[8].dynBal.medium.d) = 0.0;
      */
      der(tan.vol[8].dynBal.medium.d) := 0.0;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.vol[9].V*der(tan.vol[9].dynBal.medium.d) = 0.0;
      */
      der(tan.vol[9].dynBal.medium.d) := 0.0;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.vol[6].V*der(tan.vol[6].dynBal.medium.d) = 0.0;
      */
      der(tan.vol[6].dynBal.medium.d) := 0.0;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.vol[5].V*der(tan.vol[5].dynBal.medium.d) = 0.0;
      */
      der(tan.vol[5].dynBal.medium.d) := 0.0;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.vol[4].V*der(tan.vol[4].dynBal.medium.d) = 0.0;
      */
      der(tan.vol[4].dynBal.medium.d) := 0.0;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.vol[3].V*der(tan.vol[3].dynBal.medium.d) = 0.0;
      */
      der(tan.vol[3].dynBal.medium.d) := 0.0;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.vol[2].V*der(tan.vol[2].dynBal.medium.d) = 0.0;
      */
      der(tan.vol[2].dynBal.medium.d) := 0.0;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.vol[1].V*der(tan.vol[1].dynBal.medium.d) = 0.0;
      */
      der(tan.vol[1].dynBal.medium.d) := 0.0;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.vol[7].V*der(tan.vol[7].dynBal.medium.d) = 0.0;
      */
      der(tan.vol[7].dynBal.medium.d) := 0.0;

  // End of linear system of equations

// -----------------------------------------------------------------------------

// Initial Section
  tan.vol[1].dynBal.medium.d := tan.vol[1].dynBal.rho_nominal;
  tan.vol[1].dynBal.U := tan.vol[1].V*tan.vol[1].rho_nominal*(tan.vol[1].state_start.h
    -101325.0/tan.vol[1].state_start.d);
  tan.vol[1].dynBal.m := tan.vol[1].V*tan.vol[1].rho_nominal;
  tan.vol[2].dynBal.medium.d := tan.vol[2].dynBal.rho_nominal;
  tan.vol[2].dynBal.U := tan.vol[2].V*tan.vol[2].rho_nominal*(tan.vol[2].state_start.h
    -101325.0/tan.vol[2].state_start.d);
  tan.vol[2].dynBal.m := tan.vol[2].V*tan.vol[2].rho_nominal;
  tan.vol[3].dynBal.medium.d := tan.vol[3].dynBal.rho_nominal;
  tan.vol[3].dynBal.U := tan.vol[3].V*tan.vol[3].rho_nominal*(tan.vol[3].state_start.h
    -101325.0/tan.vol[3].state_start.d);
  tan.vol[3].dynBal.m := tan.vol[3].V*tan.vol[3].rho_nominal;
  tan.vol[4].dynBal.medium.d := tan.vol[4].dynBal.rho_nominal;
  tan.vol[4].dynBal.U := tan.vol[4].V*tan.vol[4].rho_nominal*(tan.vol[4].state_start.h
    -101325.0/tan.vol[4].state_start.d);
  tan.vol[4].dynBal.m := tan.vol[4].V*tan.vol[4].rho_nominal;
  tan.vol[5].dynBal.medium.d := tan.vol[5].dynBal.rho_nominal;
  tan.vol[5].dynBal.U := tan.vol[5].V*tan.vol[5].rho_nominal*(tan.vol[5].state_start.h
    -101325.0/tan.vol[5].state_start.d);
  tan.vol[5].dynBal.m := tan.vol[5].V*tan.vol[5].rho_nominal;
  tan.vol[6].dynBal.medium.d := tan.vol[6].dynBal.rho_nominal;
  tan.vol[6].dynBal.U := tan.vol[6].V*tan.vol[6].rho_nominal*(tan.vol[6].state_start.h
    -101325.0/tan.vol[6].state_start.d);
  tan.vol[6].dynBal.m := tan.vol[6].V*tan.vol[6].rho_nominal;
  tan.vol[7].dynBal.medium.d := tan.vol[7].dynBal.rho_nominal;
  tan.vol[7].dynBal.U := tan.vol[7].V*tan.vol[7].rho_nominal*(tan.vol[7].state_start.h
    -101325.0/tan.vol[7].state_start.d);
  tan.vol[7].dynBal.m := tan.vol[7].V*tan.vol[7].rho_nominal;
  tan.vol[8].dynBal.medium.d := tan.vol[8].dynBal.rho_nominal;
  tan.vol[8].dynBal.U := tan.vol[8].V*tan.vol[8].rho_nominal*(tan.vol[8].state_start.h
    -101325.0/tan.vol[8].state_start.d);
  tan.vol[8].dynBal.m := tan.vol[8].V*tan.vol[8].rho_nominal;
  tan.vol[9].dynBal.medium.d := tan.vol[9].dynBal.rho_nominal;
  tan.vol[9].dynBal.U := tan.vol[9].V*tan.vol[9].rho_nominal*(tan.vol[9].state_start.h
    -101325.0/tan.vol[9].state_start.d);
  tan.vol[9].dynBal.m := tan.vol[9].V*tan.vol[9].rho_nominal;
  tan.vol[10].dynBal.medium.d := tan.vol[10].dynBal.rho_nominal;
  tan.vol[10].dynBal.U := tan.vol[10].V*tan.vol[10].rho_nominal*(
    tan.vol[10].state_start.h-101325.0/tan.vol[10].state_start.d);
  tan.vol[10].dynBal.m := tan.vol[10].V*tan.vol[10].rho_nominal;
  tan.flueWall[1].opa.lay[1].T[1] := tan.flueWall[1].opa.lay[1].T_a_start+(
    tan.flueWall[1].opa.lay[1].T_b_start-tan.flueWall[1].opa.lay[1].T_a_start)*
    tan.flueWall[1].opa.lay[1].UA/tan.flueWall[1].opa.lay[1].UAnSta2;
  tan.flueWall[2].opa.lay[1].T[1] := tan.flueWall[2].opa.lay[1].T_a_start+(
    tan.flueWall[2].opa.lay[1].T_b_start-tan.flueWall[2].opa.lay[1].T_a_start)*
    tan.flueWall[2].opa.lay[1].UA/tan.flueWall[2].opa.lay[1].UAnSta2;
  tan.flueWall[3].opa.lay[1].T[1] := tan.flueWall[3].opa.lay[1].T_a_start+(
    tan.flueWall[3].opa.lay[1].T_b_start-tan.flueWall[3].opa.lay[1].T_a_start)*
    tan.flueWall[3].opa.lay[1].UA/tan.flueWall[3].opa.lay[1].UAnSta2;
  tan.flueWall[4].opa.lay[1].T[1] := tan.flueWall[4].opa.lay[1].T_a_start+(
    tan.flueWall[4].opa.lay[1].T_b_start-tan.flueWall[4].opa.lay[1].T_a_start)*
    tan.flueWall[4].opa.lay[1].UA/tan.flueWall[4].opa.lay[1].UAnSta2;
  tan.flueWall[5].opa.lay[1].T[1] := tan.flueWall[5].opa.lay[1].T_a_start+(
    tan.flueWall[5].opa.lay[1].T_b_start-tan.flueWall[5].opa.lay[1].T_a_start)*
    tan.flueWall[5].opa.lay[1].UA/tan.flueWall[5].opa.lay[1].UAnSta2;
  tan.flueWall[6].opa.lay[1].T[1] := tan.flueWall[6].opa.lay[1].T_a_start+(
    tan.flueWall[6].opa.lay[1].T_b_start-tan.flueWall[6].opa.lay[1].T_a_start)*
    tan.flueWall[6].opa.lay[1].UA/tan.flueWall[6].opa.lay[1].UAnSta2;
  tan.flueWall[7].opa.lay[1].T[1] := tan.flueWall[7].opa.lay[1].T_a_start+(
    tan.flueWall[7].opa.lay[1].T_b_start-tan.flueWall[7].opa.lay[1].T_a_start)*
    tan.flueWall[7].opa.lay[1].UA/tan.flueWall[7].opa.lay[1].UAnSta2;
  tan.flueWall[8].opa.lay[1].T[1] := tan.flueWall[8].opa.lay[1].T_a_start+(
    tan.flueWall[8].opa.lay[1].T_b_start-tan.flueWall[8].opa.lay[1].T_a_start)*
    tan.flueWall[8].opa.lay[1].UA/tan.flueWall[8].opa.lay[1].UAnSta2;
  tan.flueWall[9].opa.lay[1].T[1] := tan.flueWall[9].opa.lay[1].T_a_start+(
    tan.flueWall[9].opa.lay[1].T_b_start-tan.flueWall[9].opa.lay[1].T_a_start)*
    tan.flueWall[9].opa.lay[1].UA/tan.flueWall[9].opa.lay[1].UAnSta2;
  tan.flueWall[10].opa.lay[1].T[1] := tan.flueWall[10].opa.lay[1].T_a_start+(
    tan.flueWall[10].opa.lay[1].T_b_start-tan.flueWall[10].opa.lay[1].T_a_start)
    *tan.flueWall[10].opa.lay[1].UA/tan.flueWall[10].opa.lay[1].UAnSta2;
  tan.conExt[1].opa.lay[1].T[1] := tan.conExt[1].opa.lay[1].T_a_start+(
    tan.conExt[1].opa.lay[1].T_b_start-tan.conExt[1].opa.lay[1].T_a_start)*
    tan.conExt[1].opa.lay[1].UA/tan.conExt[1].opa.lay[1].UAnSta2;
  tan.conExt[1].opa.lay[2].T[1] := tan.conExt[1].opa.lay[2].T_a_start+(
    tan.conExt[1].opa.lay[2].T_b_start-tan.conExt[1].opa.lay[2].T_a_start)*
    tan.conExt[1].opa.lay[2].UA/tan.conExt[1].opa.lay[2].UAnSta2;
  tan.conExt[2].opa.lay[1].T[1] := tan.conExt[2].opa.lay[1].T_a_start+(
    tan.conExt[2].opa.lay[1].T_b_start-tan.conExt[2].opa.lay[1].T_a_start)*
    tan.conExt[2].opa.lay[1].UA/tan.conExt[2].opa.lay[1].UAnSta2;
  tan.conExt[2].opa.lay[2].T[1] := tan.conExt[2].opa.lay[2].T_a_start+(
    tan.conExt[2].opa.lay[2].T_b_start-tan.conExt[2].opa.lay[2].T_a_start)*
    tan.conExt[2].opa.lay[2].UA/tan.conExt[2].opa.lay[2].UAnSta2;
  tan.conExt[3].opa.lay[1].T[1] := tan.conExt[3].opa.lay[1].T_a_start+(
    tan.conExt[3].opa.lay[1].T_b_start-tan.conExt[3].opa.lay[1].T_a_start)*
    tan.conExt[3].opa.lay[1].UA/tan.conExt[3].opa.lay[1].UAnSta2;
  tan.conExt[3].opa.lay[2].T[1] := tan.conExt[3].opa.lay[2].T_a_start+(
    tan.conExt[3].opa.lay[2].T_b_start-tan.conExt[3].opa.lay[2].T_a_start)*
    tan.conExt[3].opa.lay[2].UA/tan.conExt[3].opa.lay[2].UAnSta2;
  tan.conExt[4].opa.lay[1].T[1] := tan.conExt[4].opa.lay[1].T_a_start+(
    tan.conExt[4].opa.lay[1].T_b_start-tan.conExt[4].opa.lay[1].T_a_start)*
    tan.conExt[4].opa.lay[1].UA/tan.conExt[4].opa.lay[1].UAnSta2;
  tan.conExt[4].opa.lay[2].T[1] := tan.conExt[4].opa.lay[2].T_a_start+(
    tan.conExt[4].opa.lay[2].T_b_start-tan.conExt[4].opa.lay[2].T_a_start)*
    tan.conExt[4].opa.lay[2].UA/tan.conExt[4].opa.lay[2].UAnSta2;
  tan.conExt[5].opa.lay[1].T[1] := tan.conExt[5].opa.lay[1].T_a_start+(
    tan.conExt[5].opa.lay[1].T_b_start-tan.conExt[5].opa.lay[1].T_a_start)*
    tan.conExt[5].opa.lay[1].UA/tan.conExt[5].opa.lay[1].UAnSta2;
  tan.conExt[5].opa.lay[2].T[1] := tan.conExt[5].opa.lay[2].T_a_start+(
    tan.conExt[5].opa.lay[2].T_b_start-tan.conExt[5].opa.lay[2].T_a_start)*
    tan.conExt[5].opa.lay[2].UA/tan.conExt[5].opa.lay[2].UAnSta2;
  tan.conExt[6].opa.lay[1].T[1] := tan.conExt[6].opa.lay[1].T_a_start+(
    tan.conExt[6].opa.lay[1].T_b_start-tan.conExt[6].opa.lay[1].T_a_start)*
    tan.conExt[6].opa.lay[1].UA/tan.conExt[6].opa.lay[1].UAnSta2;
  tan.conExt[6].opa.lay[2].T[1] := tan.conExt[6].opa.lay[2].T_a_start+(
    tan.conExt[6].opa.lay[2].T_b_start-tan.conExt[6].opa.lay[2].T_a_start)*
    tan.conExt[6].opa.lay[2].UA/tan.conExt[6].opa.lay[2].UAnSta2;
  tan.conExt[7].opa.lay[1].T[1] := tan.conExt[7].opa.lay[1].T_a_start+(
    tan.conExt[7].opa.lay[1].T_b_start-tan.conExt[7].opa.lay[1].T_a_start)*
    tan.conExt[7].opa.lay[1].UA/tan.conExt[7].opa.lay[1].UAnSta2;
  tan.conExt[7].opa.lay[2].T[1] := tan.conExt[7].opa.lay[2].T_a_start+(
    tan.conExt[7].opa.lay[2].T_b_start-tan.conExt[7].opa.lay[2].T_a_start)*
    tan.conExt[7].opa.lay[2].UA/tan.conExt[7].opa.lay[2].UAnSta2;
  tan.conExt[8].opa.lay[1].T[1] := tan.conExt[8].opa.lay[1].T_a_start+(
    tan.conExt[8].opa.lay[1].T_b_start-tan.conExt[8].opa.lay[1].T_a_start)*
    tan.conExt[8].opa.lay[1].UA/tan.conExt[8].opa.lay[1].UAnSta2;
  tan.conExt[8].opa.lay[2].T[1] := tan.conExt[8].opa.lay[2].T_a_start+(
    tan.conExt[8].opa.lay[2].T_b_start-tan.conExt[8].opa.lay[2].T_a_start)*
    tan.conExt[8].opa.lay[2].UA/tan.conExt[8].opa.lay[2].UAnSta2;
  tan.conExt[9].opa.lay[1].T[1] := tan.conExt[9].opa.lay[1].T_a_start+(
    tan.conExt[9].opa.lay[1].T_b_start-tan.conExt[9].opa.lay[1].T_a_start)*
    tan.conExt[9].opa.lay[1].UA/tan.conExt[9].opa.lay[1].UAnSta2;
  tan.conExt[9].opa.lay[2].T[1] := tan.conExt[9].opa.lay[2].T_a_start+(
    tan.conExt[9].opa.lay[2].T_b_start-tan.conExt[9].opa.lay[2].T_a_start)*
    tan.conExt[9].opa.lay[2].UA/tan.conExt[9].opa.lay[2].UAnSta2;
  tan.conExt[10].opa.lay[1].T[1] := tan.conExt[10].opa.lay[1].T_a_start+(
    tan.conExt[10].opa.lay[1].T_b_start-tan.conExt[10].opa.lay[1].T_a_start)*
    tan.conExt[10].opa.lay[1].UA/tan.conExt[10].opa.lay[1].UAnSta2;
  tan.conExt[10].opa.lay[2].T[1] := tan.conExt[10].opa.lay[2].T_a_start+(
    tan.conExt[10].opa.lay[2].T_b_start-tan.conExt[10].opa.lay[2].T_a_start)*
    tan.conExt[10].opa.lay[2].UA/tan.conExt[10].opa.lay[2].UAnSta2;
  tan.vol[1].dynBal.medium.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    101325.0, 
    293.15, 
    Modelica.Media.Common.IF97BaseTwoPhase(
      phase = 1, 
      region = 1, 
      p = 101325.0, 
      T = 293.15, 
      h = 84013.0581525969, 
      R = 461.526, 
      cp = 4184.79409477555, 
      cv = 4157.43685131455, 
      rho = 998.206092467947, 
      s = 296.48264655725, 
      pt = 0.0, 
      pd = 0.0, 
      vt = 2.0698144861508E-007, 
      vp = -4.59071579951415E-013, 
      x = 0.0, 
      dpT = 0.0
    ));
  tan.vol[2].dynBal.medium.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    101325.0, 
    293.15, 
    Modelica.Media.Common.IF97BaseTwoPhase(
      phase = 1, 
      region = 1, 
      p = 101325.0, 
      T = 293.15, 
      h = 84013.0581525969, 
      R = 461.526, 
      cp = 4184.79409477555, 
      cv = 4157.43685131455, 
      rho = 998.206092467947, 
      s = 296.48264655725, 
      pt = 0.0, 
      pd = 0.0, 
      vt = 2.0698144861508E-007, 
      vp = -4.59071579951415E-013, 
      x = 0.0, 
      dpT = 0.0
    ));
  tan.vol[3].dynBal.medium.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    101325.0, 
    293.15, 
    Modelica.Media.Common.IF97BaseTwoPhase(
      phase = 1, 
      region = 1, 
      p = 101325.0, 
      T = 293.15, 
      h = 84013.0581525969, 
      R = 461.526, 
      cp = 4184.79409477555, 
      cv = 4157.43685131455, 
      rho = 998.206092467947, 
      s = 296.48264655725, 
      pt = 0.0, 
      pd = 0.0, 
      vt = 2.0698144861508E-007, 
      vp = -4.59071579951415E-013, 
      x = 0.0, 
      dpT = 0.0
    ));
  tan.vol[4].dynBal.medium.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    101325.0, 
    293.15, 
    Modelica.Media.Common.IF97BaseTwoPhase(
      phase = 1, 
      region = 1, 
      p = 101325.0, 
      T = 293.15, 
      h = 84013.0581525969, 
      R = 461.526, 
      cp = 4184.79409477555, 
      cv = 4157.43685131455, 
      rho = 998.206092467947, 
      s = 296.48264655725, 
      pt = 0.0, 
      pd = 0.0, 
      vt = 2.0698144861508E-007, 
      vp = -4.59071579951415E-013, 
      x = 0.0, 
      dpT = 0.0
    ));
  tan.vol[5].dynBal.medium.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    101325.0, 
    293.15, 
    Modelica.Media.Common.IF97BaseTwoPhase(
      phase = 1, 
      region = 1, 
      p = 101325.0, 
      T = 293.15, 
      h = 84013.0581525969, 
      R = 461.526, 
      cp = 4184.79409477555, 
      cv = 4157.43685131455, 
      rho = 998.206092467947, 
      s = 296.48264655725, 
      pt = 0.0, 
      pd = 0.0, 
      vt = 2.0698144861508E-007, 
      vp = -4.59071579951415E-013, 
      x = 0.0, 
      dpT = 0.0
    ));
  tan.vol[6].dynBal.medium.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    101325.0, 
    293.15, 
    Modelica.Media.Common.IF97BaseTwoPhase(
      phase = 1, 
      region = 1, 
      p = 101325.0, 
      T = 293.15, 
      h = 84013.0581525969, 
      R = 461.526, 
      cp = 4184.79409477555, 
      cv = 4157.43685131455, 
      rho = 998.206092467947, 
      s = 296.48264655725, 
      pt = 0.0, 
      pd = 0.0, 
      vt = 2.0698144861508E-007, 
      vp = -4.59071579951415E-013, 
      x = 0.0, 
      dpT = 0.0
    ));
  tan.vol[7].dynBal.medium.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    101325.0, 
    293.15, 
    Modelica.Media.Common.IF97BaseTwoPhase(
      phase = 1, 
      region = 1, 
      p = 101325.0, 
      T = 293.15, 
      h = 84013.0581525969, 
      R = 461.526, 
      cp = 4184.79409477555, 
      cv = 4157.43685131455, 
      rho = 998.206092467947, 
      s = 296.48264655725, 
      pt = 0.0, 
      pd = 0.0, 
      vt = 2.0698144861508E-007, 
      vp = -4.59071579951415E-013, 
      x = 0.0, 
      dpT = 0.0
    ));
  tan.vol[8].dynBal.medium.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    101325.0, 
    293.15, 
    Modelica.Media.Common.IF97BaseTwoPhase(
      phase = 1, 
      region = 1, 
      p = 101325.0, 
      T = 293.15, 
      h = 84013.0581525969, 
      R = 461.526, 
      cp = 4184.79409477555, 
      cv = 4157.43685131455, 
      rho = 998.206092467947, 
      s = 296.48264655725, 
      pt = 0.0, 
      pd = 0.0, 
      vt = 2.0698144861508E-007, 
      vp = -4.59071579951415E-013, 
      x = 0.0, 
      dpT = 0.0
    ));
  tan.vol[9].dynBal.medium.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    101325.0, 
    293.15, 
    Modelica.Media.Common.IF97BaseTwoPhase(
      phase = 1, 
      region = 1, 
      p = 101325.0, 
      T = 293.15, 
      h = 84013.0581525969, 
      R = 461.526, 
      cp = 4184.79409477555, 
      cv = 4157.43685131455, 
      rho = 998.206092467947, 
      s = 296.48264655725, 
      pt = 0.0, 
      pd = 0.0, 
      vt = 2.0698144861508E-007, 
      vp = -4.59071579951415E-013, 
      x = 0.0, 
      dpT = 0.0
    ));
  tan.vol[10].dynBal.medium.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    101325.0, 
    293.15, 
    Modelica.Media.Common.IF97BaseTwoPhase(
      phase = 1, 
      region = 1, 
      p = 101325.0, 
      T = 293.15, 
      h = 84013.0581525969, 
      R = 461.526, 
      cp = 4184.79409477555, 
      cv = 4157.43685131455, 
      rho = 998.206092467947, 
      s = 296.48264655725, 
      pt = 0.0, 
      pd = 0.0, 
      vt = 2.0698144861508E-007, 
      vp = -4.59071579951415E-013, 
      x = 0.0, 
      dpT = 0.0
    ));
  tan.conOpa.opa.lay[1].T[1] := tan.conOpa.opa.lay[1].T_a_start+(
    tan.conOpa.opa.lay[1].T_b_start-tan.conOpa.opa.lay[1].T_a_start)*
    tan.conOpa.opa.lay[1].UA/tan.conOpa.opa.lay[1].UAnSta2;
  tan.conOpa.opa.lay[2].T[1] := tan.conOpa.opa.lay[2].T_a_start+(
    tan.conOpa.opa.lay[2].T_b_start-tan.conOpa.opa.lay[2].T_a_start)*
    tan.conOpa.opa.lay[2].UA/tan.conOpa.opa.lay[2].UAnSta2;
  tan.conOpa3.opa.lay[1].T[1] := tan.conOpa3.opa.lay[1].T_a_start+(
    tan.conOpa3.opa.lay[1].T_b_start-tan.conOpa3.opa.lay[1].T_a_start)*
    tan.conOpa3.opa.lay[1].UA/tan.conOpa3.opa.lay[1].UAnSta2;
  onOffController.y_.start := onOffController.y;
  system.p_start := system.p_ambient;
  system.T_start := system.T_ambient;
  burn.T_AD_flame.deltaHc_H := burn.deltaHc_H;
  burn.T_AD_flame.cp_G := burn.cp_G;
  burn.T_AD_flame.stoich := burn.stoich;
  burn.T_AD_flame.EA := burn.EA;
  burn.T_AD_flame.const.k := burn.T_AD_flame.deltaHc_H/burn.T_AD_flame.cp_G/((1+
    burn.T_AD_flame.stoich)*(1+burn.T_AD_flame.EA));
  burn.convConBou7.A := burn.datTanEnvBot.A;
  burn.convConBou7.hFixed := burn.hFixed;
  burn.fsRadiationExchange4.A := burn.datTanEnvBot.A;
  burn.hotGasTemp.A_B := burn.datTanEnvBot.A;
  burn.T_F0.deltaHc_L := burn.deltaHc_L;
  burn.T_F0.deltaHc_H := burn.deltaHc_H;
  burn.T_F0.gain1.k := burn.T_F0.deltaHc_L/burn.T_F0.deltaHc_H;
  burn.h_CB.DT := burn.DTan;
  burn.h_CB.DF := burn.DFlu;
  burn.h_CB.DM := 0.5*(burn.h_CB.DT+burn.h_CB.DF);
  burn.h_CB.Xn := 0.5*(burn.h_CB.DT-burn.h_CB.DF);
  tan.flueWall[1].A := 0.1*tan.datFlueWall.A;
  tan.flueWall[1].AOpa := tan.flueWall[1].A;
  tan.flueWall[1].T_a_start := tan.datFlueWall.T_a_start;
  tan.flueWall[1].T_b_start := tan.datFlueWall.T_b_start;
  tan.flueWall[1].opa.A := tan.flueWall[1].AOpa;
  tan.flueWall[1].opa.lay[1].A := tan.flueWall[1].opa.A;
  tan.flueWall[1].opa.lay[1].R := (if tan.flueWall[1].opa.lay[1].material.R == 0
     then tan.flueWall[1].opa.lay[1].material.x/tan.flueWall[1].opa.lay[1].material.k
    /tan.flueWall[1].opa.lay[1].A else tan.flueWall[1].opa.lay[1].material.R/
    tan.flueWall[1].opa.lay[1].A);
  tan.flueWall[1].opa.R := tan.flueWall[1].opa.lay[1].R;
  tan.flueWall[1].opa.UA := 1/tan.flueWall[1].opa.R;
  tan.flueWall[1].opa.U := tan.flueWall[1].opa.UA/tan.flueWall[1].opa.A;
  tan.flueWall[1].opa.T_a_start := tan.flueWall[1].T_a_start;
  tan.flueWall[1].opa.T_b_start := tan.flueWall[1].T_b_start;
  tan.flueWall[2].A := 0.1*tan.datFlueWall.A;
  tan.flueWall[2].AOpa := tan.flueWall[2].A;
  tan.flueWall[2].T_a_start := tan.datFlueWall.T_a_start;
  tan.flueWall[2].T_b_start := tan.datFlueWall.T_b_start;
  tan.flueWall[2].opa.A := tan.flueWall[2].AOpa;
  tan.flueWall[2].opa.lay[1].A := tan.flueWall[2].opa.A;
  tan.flueWall[2].opa.lay[1].R := (if tan.flueWall[2].opa.lay[1].material.R == 0
     then tan.flueWall[2].opa.lay[1].material.x/tan.flueWall[2].opa.lay[1].material.k
    /tan.flueWall[2].opa.lay[1].A else tan.flueWall[2].opa.lay[1].material.R/
    tan.flueWall[2].opa.lay[1].A);
  tan.flueWall[2].opa.R := tan.flueWall[2].opa.lay[1].R;
  tan.flueWall[2].opa.UA := 1/tan.flueWall[2].opa.R;
  tan.flueWall[2].opa.U := tan.flueWall[2].opa.UA/tan.flueWall[2].opa.A;
  tan.flueWall[2].opa.T_a_start := tan.flueWall[2].T_a_start;
  tan.flueWall[2].opa.T_b_start := tan.flueWall[2].T_b_start;
  tan.flueWall[3].A := 0.1*tan.datFlueWall.A;
  tan.flueWall[3].AOpa := tan.flueWall[3].A;
  tan.flueWall[3].T_a_start := tan.datFlueWall.T_a_start;
  tan.flueWall[3].T_b_start := tan.datFlueWall.T_b_start;
  tan.flueWall[3].opa.A := tan.flueWall[3].AOpa;
  tan.flueWall[3].opa.lay[1].A := tan.flueWall[3].opa.A;
  tan.flueWall[3].opa.lay[1].R := (if tan.flueWall[3].opa.lay[1].material.R == 0
     then tan.flueWall[3].opa.lay[1].material.x/tan.flueWall[3].opa.lay[1].material.k
    /tan.flueWall[3].opa.lay[1].A else tan.flueWall[3].opa.lay[1].material.R/
    tan.flueWall[3].opa.lay[1].A);
  tan.flueWall[3].opa.R := tan.flueWall[3].opa.lay[1].R;
  tan.flueWall[3].opa.UA := 1/tan.flueWall[3].opa.R;
  tan.flueWall[3].opa.U := tan.flueWall[3].opa.UA/tan.flueWall[3].opa.A;
  tan.flueWall[3].opa.T_a_start := tan.flueWall[3].T_a_start;
  tan.flueWall[3].opa.T_b_start := tan.flueWall[3].T_b_start;
  tan.flueWall[4].A := 0.1*tan.datFlueWall.A;
  tan.flueWall[4].AOpa := tan.flueWall[4].A;
  tan.flueWall[4].T_a_start := tan.datFlueWall.T_a_start;
  tan.flueWall[4].T_b_start := tan.datFlueWall.T_b_start;
  tan.flueWall[4].opa.A := tan.flueWall[4].AOpa;
  tan.flueWall[4].opa.lay[1].A := tan.flueWall[4].opa.A;
  tan.flueWall[4].opa.lay[1].R := (if tan.flueWall[4].opa.lay[1].material.R == 0
     then tan.flueWall[4].opa.lay[1].material.x/tan.flueWall[4].opa.lay[1].material.k
    /tan.flueWall[4].opa.lay[1].A else tan.flueWall[4].opa.lay[1].material.R/
    tan.flueWall[4].opa.lay[1].A);
  tan.flueWall[4].opa.R := tan.flueWall[4].opa.lay[1].R;
  tan.flueWall[4].opa.UA := 1/tan.flueWall[4].opa.R;
  tan.flueWall[4].opa.U := tan.flueWall[4].opa.UA/tan.flueWall[4].opa.A;
  tan.flueWall[4].opa.T_a_start := tan.flueWall[4].T_a_start;
  tan.flueWall[4].opa.T_b_start := tan.flueWall[4].T_b_start;
  tan.flueWall[5].A := 0.1*tan.datFlueWall.A;
  tan.flueWall[5].AOpa := tan.flueWall[5].A;
  tan.flueWall[5].T_a_start := tan.datFlueWall.T_a_start;
  tan.flueWall[5].T_b_start := tan.datFlueWall.T_b_start;
  tan.flueWall[5].opa.A := tan.flueWall[5].AOpa;
  tan.flueWall[5].opa.lay[1].A := tan.flueWall[5].opa.A;
  tan.flueWall[5].opa.lay[1].R := (if tan.flueWall[5].opa.lay[1].material.R == 0
     then tan.flueWall[5].opa.lay[1].material.x/tan.flueWall[5].opa.lay[1].material.k
    /tan.flueWall[5].opa.lay[1].A else tan.flueWall[5].opa.lay[1].material.R/
    tan.flueWall[5].opa.lay[1].A);
  tan.flueWall[5].opa.R := tan.flueWall[5].opa.lay[1].R;
  tan.flueWall[5].opa.UA := 1/tan.flueWall[5].opa.R;
  tan.flueWall[5].opa.U := tan.flueWall[5].opa.UA/tan.flueWall[5].opa.A;
  tan.flueWall[5].opa.T_a_start := tan.flueWall[5].T_a_start;
  tan.flueWall[5].opa.T_b_start := tan.flueWall[5].T_b_start;
  tan.flueWall[6].A := 0.1*tan.datFlueWall.A;
  tan.flueWall[6].AOpa := tan.flueWall[6].A;
  tan.flueWall[6].T_a_start := tan.datFlueWall.T_a_start;
  tan.flueWall[6].T_b_start := tan.datFlueWall.T_b_start;
  tan.flueWall[6].opa.A := tan.flueWall[6].AOpa;
  tan.flueWall[6].opa.lay[1].A := tan.flueWall[6].opa.A;
  tan.flueWall[6].opa.lay[1].R := (if tan.flueWall[6].opa.lay[1].material.R == 0
     then tan.flueWall[6].opa.lay[1].material.x/tan.flueWall[6].opa.lay[1].material.k
    /tan.flueWall[6].opa.lay[1].A else tan.flueWall[6].opa.lay[1].material.R/
    tan.flueWall[6].opa.lay[1].A);
  tan.flueWall[6].opa.R := tan.flueWall[6].opa.lay[1].R;
  tan.flueWall[6].opa.UA := 1/tan.flueWall[6].opa.R;
  tan.flueWall[6].opa.U := tan.flueWall[6].opa.UA/tan.flueWall[6].opa.A;
  tan.flueWall[6].opa.T_a_start := tan.flueWall[6].T_a_start;
  tan.flueWall[6].opa.T_b_start := tan.flueWall[6].T_b_start;
  tan.flueWall[7].A := 0.1*tan.datFlueWall.A;
  tan.flueWall[7].AOpa := tan.flueWall[7].A;
  tan.flueWall[7].T_a_start := tan.datFlueWall.T_a_start;
  tan.flueWall[7].T_b_start := tan.datFlueWall.T_b_start;
  tan.flueWall[7].opa.A := tan.flueWall[7].AOpa;
  tan.flueWall[7].opa.lay[1].A := tan.flueWall[7].opa.A;
  tan.flueWall[7].opa.lay[1].R := (if tan.flueWall[7].opa.lay[1].material.R == 0
     then tan.flueWall[7].opa.lay[1].material.x/tan.flueWall[7].opa.lay[1].material.k
    /tan.flueWall[7].opa.lay[1].A else tan.flueWall[7].opa.lay[1].material.R/
    tan.flueWall[7].opa.lay[1].A);
  tan.flueWall[7].opa.R := tan.flueWall[7].opa.lay[1].R;
  tan.flueWall[7].opa.UA := 1/tan.flueWall[7].opa.R;
  tan.flueWall[7].opa.U := tan.flueWall[7].opa.UA/tan.flueWall[7].opa.A;
  tan.flueWall[7].opa.T_a_start := tan.flueWall[7].T_a_start;
  tan.flueWall[7].opa.T_b_start := tan.flueWall[7].T_b_start;
  tan.flueWall[8].A := 0.1*tan.datFlueWall.A;
  tan.flueWall[8].AOpa := tan.flueWall[8].A;
  tan.flueWall[8].T_a_start := tan.datFlueWall.T_a_start;
  tan.flueWall[8].T_b_start := tan.datFlueWall.T_b_start;
  tan.flueWall[8].opa.A := tan.flueWall[8].AOpa;
  tan.flueWall[8].opa.lay[1].A := tan.flueWall[8].opa.A;
  tan.flueWall[8].opa.lay[1].R := (if tan.flueWall[8].opa.lay[1].material.R == 0
     then tan.flueWall[8].opa.lay[1].material.x/tan.flueWall[8].opa.lay[1].material.k
    /tan.flueWall[8].opa.lay[1].A else tan.flueWall[8].opa.lay[1].material.R/
    tan.flueWall[8].opa.lay[1].A);
  tan.flueWall[8].opa.R := tan.flueWall[8].opa.lay[1].R;
  tan.flueWall[8].opa.UA := 1/tan.flueWall[8].opa.R;
  tan.flueWall[8].opa.U := tan.flueWall[8].opa.UA/tan.flueWall[8].opa.A;
  tan.flueWall[8].opa.T_a_start := tan.flueWall[8].T_a_start;
  tan.flueWall[8].opa.T_b_start := tan.flueWall[8].T_b_start;
  tan.flueWall[9].A := 0.1*tan.datFlueWall.A;
  tan.flueWall[9].AOpa := tan.flueWall[9].A;
  tan.flueWall[9].T_a_start := tan.datFlueWall.T_a_start;
  tan.flueWall[9].T_b_start := tan.datFlueWall.T_b_start;
  tan.flueWall[9].opa.A := tan.flueWall[9].AOpa;
  tan.flueWall[9].opa.lay[1].A := tan.flueWall[9].opa.A;
  tan.flueWall[9].opa.lay[1].R := (if tan.flueWall[9].opa.lay[1].material.R == 0
     then tan.flueWall[9].opa.lay[1].material.x/tan.flueWall[9].opa.lay[1].material.k
    /tan.flueWall[9].opa.lay[1].A else tan.flueWall[9].opa.lay[1].material.R/
    tan.flueWall[9].opa.lay[1].A);
  tan.flueWall[9].opa.R := tan.flueWall[9].opa.lay[1].R;
  tan.flueWall[9].opa.UA := 1/tan.flueWall[9].opa.R;
  tan.flueWall[9].opa.U := tan.flueWall[9].opa.UA/tan.flueWall[9].opa.A;
  tan.flueWall[9].opa.T_a_start := tan.flueWall[9].T_a_start;
  tan.flueWall[9].opa.T_b_start := tan.flueWall[9].T_b_start;
  tan.flueWall[10].A := 0.1*tan.datFlueWall.A;
  tan.flueWall[10].AOpa := tan.flueWall[10].A;
  tan.flueWall[10].T_a_start := tan.datFlueWall.T_a_start;
  tan.flueWall[10].T_b_start := tan.datFlueWall.T_b_start;
  tan.flueWall[10].opa.A := tan.flueWall[10].AOpa;
  tan.flueWall[10].opa.lay[1].A := tan.flueWall[10].opa.A;
  tan.flueWall[10].opa.lay[1].R := (if tan.flueWall[10].opa.lay[1].material.R
     == 0 then tan.flueWall[10].opa.lay[1].material.x/tan.flueWall[10].opa.lay[1].material.k
    /tan.flueWall[10].opa.lay[1].A else tan.flueWall[10].opa.lay[1].material.R/
    tan.flueWall[10].opa.lay[1].A);
  tan.flueWall[10].opa.R := tan.flueWall[10].opa.lay[1].R;
  tan.flueWall[10].opa.UA := 1/tan.flueWall[10].opa.R;
  tan.flueWall[10].opa.U := tan.flueWall[10].opa.UA/tan.flueWall[10].opa.A;
  tan.flueWall[10].opa.T_a_start := tan.flueWall[10].T_a_start;
  tan.flueWall[10].opa.T_b_start := tan.flueWall[10].T_b_start;
  tan.convConBou1[1].A := 0.1*tan.datFlueWall.A;
  tan.convConBou1[1].hFixed := tan.hFixed;
  tan.convConBou1[2].A := 0.1*tan.datFlueWall.A;
  tan.convConBou1[2].hFixed := tan.hFixed;
  tan.convConBou1[3].A := 0.1*tan.datFlueWall.A;
  tan.convConBou1[3].hFixed := tan.hFixed;
  tan.convConBou1[4].A := 0.1*tan.datFlueWall.A;
  tan.convConBou1[4].hFixed := tan.hFixed;
  tan.convConBou1[5].A := 0.1*tan.datFlueWall.A;
  tan.convConBou1[5].hFixed := tan.hFixed;
  tan.convConBou1[6].A := 0.1*tan.datFlueWall.A;
  tan.convConBou1[6].hFixed := tan.hFixed;
  tan.convConBou1[7].A := 0.1*tan.datFlueWall.A;
  tan.convConBou1[7].hFixed := tan.hFixed;
  tan.convConBou1[8].A := 0.1*tan.datFlueWall.A;
  tan.convConBou1[8].hFixed := tan.hFixed;
  tan.convConBou1[9].A := 0.1*tan.datFlueWall.A;
  tan.convConBou1[9].hFixed := tan.hFixed;
  tan.convConBou1[10].A := 0.1*tan.datFlueWall.A;
  tan.convConBou1[10].hFixed := tan.hFixed;
  tan.conExt[1].A := 0.1*tan.datTanEnv.A;
  tan.conExt[1].AOpa := tan.conExt[1].A;
  tan.conExt[1].T_a_start := tan.datTanEnv.T_a_start;
  tan.conExt[1].T_b_start := tan.datTanEnv.T_b_start;
  tan.conExt[1].opa.A := tan.conExt[1].AOpa;
  tan.conExt[1].opa.lay[1].A := tan.conExt[1].opa.A;
  tan.conExt[1].opa.lay[1].R := (if tan.conExt[1].opa.lay[1].material.R == 0
     then tan.conExt[1].opa.lay[1].material.x/tan.conExt[1].opa.lay[1].material.k
    /tan.conExt[1].opa.lay[1].A else tan.conExt[1].opa.lay[1].material.R/
    tan.conExt[1].opa.lay[1].A);
  tan.conExt[1].opa.lay[2].A := tan.conExt[1].opa.A;
  tan.conExt[1].opa.lay[2].R := (if tan.conExt[1].opa.lay[2].material.R == 0
     then tan.conExt[1].opa.lay[2].material.x/tan.conExt[1].opa.lay[2].material.k
    /tan.conExt[1].opa.lay[2].A else tan.conExt[1].opa.lay[2].material.R/
    tan.conExt[1].opa.lay[2].A);
  tan.conExt[1].opa.R := tan.conExt[1].opa.lay[1].R+tan.conExt[1].opa.lay[2].R;
  tan.conExt[1].opa.UA := 1/tan.conExt[1].opa.R;
  tan.conExt[1].opa.U := tan.conExt[1].opa.UA/tan.conExt[1].opa.A;
  tan.conExt[1].opa.T_a_start := tan.conExt[1].T_a_start;
  tan.conExt[1].opa.T_b_start := tan.conExt[1].T_b_start;
  tan.conExt[2].A := 0.1*tan.datTanEnv.A;
  tan.conExt[2].AOpa := tan.conExt[2].A;
  tan.conExt[2].T_a_start := tan.datTanEnv.T_a_start;
  tan.conExt[2].T_b_start := tan.datTanEnv.T_b_start;
  tan.conExt[2].opa.A := tan.conExt[2].AOpa;
  tan.conExt[2].opa.lay[1].A := tan.conExt[2].opa.A;
  tan.conExt[2].opa.lay[1].R := (if tan.conExt[2].opa.lay[1].material.R == 0
     then tan.conExt[2].opa.lay[1].material.x/tan.conExt[2].opa.lay[1].material.k
    /tan.conExt[2].opa.lay[1].A else tan.conExt[2].opa.lay[1].material.R/
    tan.conExt[2].opa.lay[1].A);
  tan.conExt[2].opa.lay[2].A := tan.conExt[2].opa.A;
  tan.conExt[2].opa.lay[2].R := (if tan.conExt[2].opa.lay[2].material.R == 0
     then tan.conExt[2].opa.lay[2].material.x/tan.conExt[2].opa.lay[2].material.k
    /tan.conExt[2].opa.lay[2].A else tan.conExt[2].opa.lay[2].material.R/
    tan.conExt[2].opa.lay[2].A);
  tan.conExt[2].opa.R := tan.conExt[2].opa.lay[1].R+tan.conExt[2].opa.lay[2].R;
  tan.conExt[2].opa.UA := 1/tan.conExt[2].opa.R;
  tan.conExt[2].opa.U := tan.conExt[2].opa.UA/tan.conExt[2].opa.A;
  tan.conExt[2].opa.T_a_start := tan.conExt[2].T_a_start;
  tan.conExt[2].opa.T_b_start := tan.conExt[2].T_b_start;
  tan.conExt[3].A := 0.1*tan.datTanEnv.A;
  tan.conExt[3].AOpa := tan.conExt[3].A;
  tan.conExt[3].T_a_start := tan.datTanEnv.T_a_start;
  tan.conExt[3].T_b_start := tan.datTanEnv.T_b_start;
  tan.conExt[3].opa.A := tan.conExt[3].AOpa;
  tan.conExt[3].opa.lay[1].A := tan.conExt[3].opa.A;
  tan.conExt[3].opa.lay[1].R := (if tan.conExt[3].opa.lay[1].material.R == 0
     then tan.conExt[3].opa.lay[1].material.x/tan.conExt[3].opa.lay[1].material.k
    /tan.conExt[3].opa.lay[1].A else tan.conExt[3].opa.lay[1].material.R/
    tan.conExt[3].opa.lay[1].A);
  tan.conExt[3].opa.lay[2].A := tan.conExt[3].opa.A;
  tan.conExt[3].opa.lay[2].R := (if tan.conExt[3].opa.lay[2].material.R == 0
     then tan.conExt[3].opa.lay[2].material.x/tan.conExt[3].opa.lay[2].material.k
    /tan.conExt[3].opa.lay[2].A else tan.conExt[3].opa.lay[2].material.R/
    tan.conExt[3].opa.lay[2].A);
  tan.conExt[3].opa.R := tan.conExt[3].opa.lay[1].R+tan.conExt[3].opa.lay[2].R;
  tan.conExt[3].opa.UA := 1/tan.conExt[3].opa.R;
  tan.conExt[3].opa.U := tan.conExt[3].opa.UA/tan.conExt[3].opa.A;
  tan.conExt[3].opa.T_a_start := tan.conExt[3].T_a_start;
  tan.conExt[3].opa.T_b_start := tan.conExt[3].T_b_start;
  tan.conExt[4].A := 0.1*tan.datTanEnv.A;
  tan.conExt[4].AOpa := tan.conExt[4].A;
  tan.conExt[4].T_a_start := tan.datTanEnv.T_a_start;
  tan.conExt[4].T_b_start := tan.datTanEnv.T_b_start;
  tan.conExt[4].opa.A := tan.conExt[4].AOpa;
  tan.conExt[4].opa.lay[1].A := tan.conExt[4].opa.A;
  tan.conExt[4].opa.lay[1].R := (if tan.conExt[4].opa.lay[1].material.R == 0
     then tan.conExt[4].opa.lay[1].material.x/tan.conExt[4].opa.lay[1].material.k
    /tan.conExt[4].opa.lay[1].A else tan.conExt[4].opa.lay[1].material.R/
    tan.conExt[4].opa.lay[1].A);
  tan.conExt[4].opa.lay[2].A := tan.conExt[4].opa.A;
  tan.conExt[4].opa.lay[2].R := (if tan.conExt[4].opa.lay[2].material.R == 0
     then tan.conExt[4].opa.lay[2].material.x/tan.conExt[4].opa.lay[2].material.k
    /tan.conExt[4].opa.lay[2].A else tan.conExt[4].opa.lay[2].material.R/
    tan.conExt[4].opa.lay[2].A);
  tan.conExt[4].opa.R := tan.conExt[4].opa.lay[1].R+tan.conExt[4].opa.lay[2].R;
  tan.conExt[4].opa.UA := 1/tan.conExt[4].opa.R;
  tan.conExt[4].opa.U := tan.conExt[4].opa.UA/tan.conExt[4].opa.A;
  tan.conExt[4].opa.T_a_start := tan.conExt[4].T_a_start;
  tan.conExt[4].opa.T_b_start := tan.conExt[4].T_b_start;
  tan.conExt[5].A := 0.1*tan.datTanEnv.A;
  tan.conExt[5].AOpa := tan.conExt[5].A;
  tan.conExt[5].T_a_start := tan.datTanEnv.T_a_start;
  tan.conExt[5].T_b_start := tan.datTanEnv.T_b_start;
  tan.conExt[5].opa.A := tan.conExt[5].AOpa;
  tan.conExt[5].opa.lay[1].A := tan.conExt[5].opa.A;
  tan.conExt[5].opa.lay[1].R := (if tan.conExt[5].opa.lay[1].material.R == 0
     then tan.conExt[5].opa.lay[1].material.x/tan.conExt[5].opa.lay[1].material.k
    /tan.conExt[5].opa.lay[1].A else tan.conExt[5].opa.lay[1].material.R/
    tan.conExt[5].opa.lay[1].A);
  tan.conExt[5].opa.lay[2].A := tan.conExt[5].opa.A;
  tan.conExt[5].opa.lay[2].R := (if tan.conExt[5].opa.lay[2].material.R == 0
     then tan.conExt[5].opa.lay[2].material.x/tan.conExt[5].opa.lay[2].material.k
    /tan.conExt[5].opa.lay[2].A else tan.conExt[5].opa.lay[2].material.R/
    tan.conExt[5].opa.lay[2].A);
  tan.conExt[5].opa.R := tan.conExt[5].opa.lay[1].R+tan.conExt[5].opa.lay[2].R;
  tan.conExt[5].opa.UA := 1/tan.conExt[5].opa.R;
  tan.conExt[5].opa.U := tan.conExt[5].opa.UA/tan.conExt[5].opa.A;
  tan.conExt[5].opa.T_a_start := tan.conExt[5].T_a_start;
  tan.conExt[5].opa.T_b_start := tan.conExt[5].T_b_start;
  tan.conExt[6].A := 0.1*tan.datTanEnv.A;
  tan.conExt[6].AOpa := tan.conExt[6].A;
  tan.conExt[6].T_a_start := tan.datTanEnv.T_a_start;
  tan.conExt[6].T_b_start := tan.datTanEnv.T_b_start;
  tan.conExt[6].opa.A := tan.conExt[6].AOpa;
  tan.conExt[6].opa.lay[1].A := tan.conExt[6].opa.A;
  tan.conExt[6].opa.lay[1].R := (if tan.conExt[6].opa.lay[1].material.R == 0
     then tan.conExt[6].opa.lay[1].material.x/tan.conExt[6].opa.lay[1].material.k
    /tan.conExt[6].opa.lay[1].A else tan.conExt[6].opa.lay[1].material.R/
    tan.conExt[6].opa.lay[1].A);
  tan.conExt[6].opa.lay[2].A := tan.conExt[6].opa.A;
  tan.conExt[6].opa.lay[2].R := (if tan.conExt[6].opa.lay[2].material.R == 0
     then tan.conExt[6].opa.lay[2].material.x/tan.conExt[6].opa.lay[2].material.k
    /tan.conExt[6].opa.lay[2].A else tan.conExt[6].opa.lay[2].material.R/
    tan.conExt[6].opa.lay[2].A);
  tan.conExt[6].opa.R := tan.conExt[6].opa.lay[1].R+tan.conExt[6].opa.lay[2].R;
  tan.conExt[6].opa.UA := 1/tan.conExt[6].opa.R;
  tan.conExt[6].opa.U := tan.conExt[6].opa.UA/tan.conExt[6].opa.A;
  tan.conExt[6].opa.T_a_start := tan.conExt[6].T_a_start;
  tan.conExt[6].opa.T_b_start := tan.conExt[6].T_b_start;
  tan.conExt[7].A := 0.1*tan.datTanEnv.A;
  tan.conExt[7].AOpa := tan.conExt[7].A;
  tan.conExt[7].T_a_start := tan.datTanEnv.T_a_start;
  tan.conExt[7].T_b_start := tan.datTanEnv.T_b_start;
  tan.conExt[7].opa.A := tan.conExt[7].AOpa;
  tan.conExt[7].opa.lay[1].A := tan.conExt[7].opa.A;
  tan.conExt[7].opa.lay[1].R := (if tan.conExt[7].opa.lay[1].material.R == 0
     then tan.conExt[7].opa.lay[1].material.x/tan.conExt[7].opa.lay[1].material.k
    /tan.conExt[7].opa.lay[1].A else tan.conExt[7].opa.lay[1].material.R/
    tan.conExt[7].opa.lay[1].A);
  tan.conExt[7].opa.lay[2].A := tan.conExt[7].opa.A;
  tan.conExt[7].opa.lay[2].R := (if tan.conExt[7].opa.lay[2].material.R == 0
     then tan.conExt[7].opa.lay[2].material.x/tan.conExt[7].opa.lay[2].material.k
    /tan.conExt[7].opa.lay[2].A else tan.conExt[7].opa.lay[2].material.R/
    tan.conExt[7].opa.lay[2].A);
  tan.conExt[7].opa.R := tan.conExt[7].opa.lay[1].R+tan.conExt[7].opa.lay[2].R;
  tan.conExt[7].opa.UA := 1/tan.conExt[7].opa.R;
  tan.conExt[7].opa.U := tan.conExt[7].opa.UA/tan.conExt[7].opa.A;
  tan.conExt[7].opa.T_a_start := tan.conExt[7].T_a_start;
  tan.conExt[7].opa.T_b_start := tan.conExt[7].T_b_start;
  tan.conExt[8].A := 0.1*tan.datTanEnv.A;
  tan.conExt[8].AOpa := tan.conExt[8].A;
  tan.conExt[8].T_a_start := tan.datTanEnv.T_a_start;
  tan.conExt[8].T_b_start := tan.datTanEnv.T_b_start;
  tan.conExt[8].opa.A := tan.conExt[8].AOpa;
  tan.conExt[8].opa.lay[1].A := tan.conExt[8].opa.A;
  tan.conExt[8].opa.lay[1].R := (if tan.conExt[8].opa.lay[1].material.R == 0
     then tan.conExt[8].opa.lay[1].material.x/tan.conExt[8].opa.lay[1].material.k
    /tan.conExt[8].opa.lay[1].A else tan.conExt[8].opa.lay[1].material.R/
    tan.conExt[8].opa.lay[1].A);
  tan.conExt[8].opa.lay[2].A := tan.conExt[8].opa.A;
  tan.conExt[8].opa.lay[2].R := (if tan.conExt[8].opa.lay[2].material.R == 0
     then tan.conExt[8].opa.lay[2].material.x/tan.conExt[8].opa.lay[2].material.k
    /tan.conExt[8].opa.lay[2].A else tan.conExt[8].opa.lay[2].material.R/
    tan.conExt[8].opa.lay[2].A);
  tan.conExt[8].opa.R := tan.conExt[8].opa.lay[1].R+tan.conExt[8].opa.lay[2].R;
  tan.conExt[8].opa.UA := 1/tan.conExt[8].opa.R;
  tan.conExt[8].opa.U := tan.conExt[8].opa.UA/tan.conExt[8].opa.A;
  tan.conExt[8].opa.T_a_start := tan.conExt[8].T_a_start;
  tan.conExt[8].opa.T_b_start := tan.conExt[8].T_b_start;
  tan.conExt[9].A := 0.1*tan.datTanEnv.A;
  tan.conExt[9].AOpa := tan.conExt[9].A;
  tan.conExt[9].T_a_start := tan.datTanEnv.T_a_start;
  tan.conExt[9].T_b_start := tan.datTanEnv.T_b_start;
  tan.conExt[9].opa.A := tan.conExt[9].AOpa;
  tan.conExt[9].opa.lay[1].A := tan.conExt[9].opa.A;
  tan.conExt[9].opa.lay[1].R := (if tan.conExt[9].opa.lay[1].material.R == 0
     then tan.conExt[9].opa.lay[1].material.x/tan.conExt[9].opa.lay[1].material.k
    /tan.conExt[9].opa.lay[1].A else tan.conExt[9].opa.lay[1].material.R/
    tan.conExt[9].opa.lay[1].A);
  tan.conExt[9].opa.lay[2].A := tan.conExt[9].opa.A;
  tan.conExt[9].opa.lay[2].R := (if tan.conExt[9].opa.lay[2].material.R == 0
     then tan.conExt[9].opa.lay[2].material.x/tan.conExt[9].opa.lay[2].material.k
    /tan.conExt[9].opa.lay[2].A else tan.conExt[9].opa.lay[2].material.R/
    tan.conExt[9].opa.lay[2].A);
  tan.conExt[9].opa.R := tan.conExt[9].opa.lay[1].R+tan.conExt[9].opa.lay[2].R;
  tan.conExt[9].opa.UA := 1/tan.conExt[9].opa.R;
  tan.conExt[9].opa.U := tan.conExt[9].opa.UA/tan.conExt[9].opa.A;
  tan.conExt[9].opa.T_a_start := tan.conExt[9].T_a_start;
  tan.conExt[9].opa.T_b_start := tan.conExt[9].T_b_start;
  tan.conExt[10].A := 0.1*tan.datTanEnv.A;
  tan.conExt[10].AOpa := tan.conExt[10].A;
  tan.conExt[10].T_a_start := tan.datTanEnv.T_a_start;
  tan.conExt[10].T_b_start := tan.datTanEnv.T_b_start;
  tan.conExt[10].opa.A := tan.conExt[10].AOpa;
  tan.conExt[10].opa.lay[1].A := tan.conExt[10].opa.A;
  tan.conExt[10].opa.lay[1].R := (if tan.conExt[10].opa.lay[1].material.R == 0
     then tan.conExt[10].opa.lay[1].material.x/tan.conExt[10].opa.lay[1].material.k
    /tan.conExt[10].opa.lay[1].A else tan.conExt[10].opa.lay[1].material.R/
    tan.conExt[10].opa.lay[1].A);
  tan.conExt[10].opa.lay[2].A := tan.conExt[10].opa.A;
  tan.conExt[10].opa.lay[2].R := (if tan.conExt[10].opa.lay[2].material.R == 0
     then tan.conExt[10].opa.lay[2].material.x/tan.conExt[10].opa.lay[2].material.k
    /tan.conExt[10].opa.lay[2].A else tan.conExt[10].opa.lay[2].material.R/
    tan.conExt[10].opa.lay[2].A);
  tan.conExt[10].opa.R := tan.conExt[10].opa.lay[1].R+tan.conExt[10].opa.lay[2].R;
  tan.conExt[10].opa.UA := 1/tan.conExt[10].opa.R;
  tan.conExt[10].opa.U := tan.conExt[10].opa.UA/tan.conExt[10].opa.A;
  tan.conExt[10].opa.T_a_start := tan.conExt[10].T_a_start;
  tan.conExt[10].opa.T_b_start := tan.conExt[10].T_b_start;
  tan.vol[1].X_start[1] := tan.X_start[1];
  tan.vol[1].m_flow_nominal := tan.m_flow_nominal;
  tan.vol[1].m_flow_small := 0.0001*abs(tan.vol[1].m_flow_nominal);
  tan.vol[1].V := 0.1*tan.VTan;
  tan.vol[1].state_start.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    tan.vol[1].p_start, 
    tan.vol[1].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[1].p_start, 
      tan.vol[1].T_start, 0));
  tan.vol[1].state_start.d := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[1].p_start, 
    tan.vol[1].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[1].p_start, 
      tan.vol[1].T_start, 0));
  tan.vol[1].rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[1].p_start, 
    tan.vol[1].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[1].p_start, 
      tan.vol[1].T_start, 0));
  tan.vol[2].X_start[1] := tan.X_start[1];
  tan.vol[2].m_flow_nominal := tan.m_flow_nominal;
  tan.vol[2].m_flow_small := 0.0001*abs(tan.vol[2].m_flow_nominal);
  tan.vol[2].V := 0.1*tan.VTan;
  tan.vol[2].state_start.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    tan.vol[2].p_start, 
    tan.vol[2].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[2].p_start, 
      tan.vol[2].T_start, 0));
  tan.vol[2].state_start.d := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[2].p_start, 
    tan.vol[2].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[2].p_start, 
      tan.vol[2].T_start, 0));
  tan.vol[2].rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[2].p_start, 
    tan.vol[2].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[2].p_start, 
      tan.vol[2].T_start, 0));
  tan.vol[3].X_start[1] := tan.X_start[1];
  tan.vol[3].m_flow_nominal := tan.m_flow_nominal;
  tan.vol[3].m_flow_small := 0.0001*abs(tan.vol[3].m_flow_nominal);
  tan.vol[3].V := 0.1*tan.VTan;
  tan.vol[3].state_start.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    tan.vol[3].p_start, 
    tan.vol[3].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[3].p_start, 
      tan.vol[3].T_start, 0));
  tan.vol[3].state_start.d := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[3].p_start, 
    tan.vol[3].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[3].p_start, 
      tan.vol[3].T_start, 0));
  tan.vol[3].rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[3].p_start, 
    tan.vol[3].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[3].p_start, 
      tan.vol[3].T_start, 0));
  tan.vol[4].X_start[1] := tan.X_start[1];
  tan.vol[4].m_flow_nominal := tan.m_flow_nominal;
  tan.vol[4].m_flow_small := 0.0001*abs(tan.vol[4].m_flow_nominal);
  tan.vol[4].V := 0.1*tan.VTan;
  tan.vol[4].state_start.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    tan.vol[4].p_start, 
    tan.vol[4].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[4].p_start, 
      tan.vol[4].T_start, 0));
  tan.vol[4].state_start.d := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[4].p_start, 
    tan.vol[4].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[4].p_start, 
      tan.vol[4].T_start, 0));
  tan.vol[4].rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[4].p_start, 
    tan.vol[4].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[4].p_start, 
      tan.vol[4].T_start, 0));
  tan.vol[5].X_start[1] := tan.X_start[1];
  tan.vol[5].m_flow_nominal := tan.m_flow_nominal;
  tan.vol[5].m_flow_small := 0.0001*abs(tan.vol[5].m_flow_nominal);
  tan.vol[5].V := 0.1*tan.VTan;
  tan.vol[5].state_start.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    tan.vol[5].p_start, 
    tan.vol[5].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[5].p_start, 
      tan.vol[5].T_start, 0));
  tan.vol[5].state_start.d := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[5].p_start, 
    tan.vol[5].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[5].p_start, 
      tan.vol[5].T_start, 0));
  tan.vol[5].rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[5].p_start, 
    tan.vol[5].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[5].p_start, 
      tan.vol[5].T_start, 0));
  tan.vol[6].X_start[1] := tan.X_start[1];
  tan.vol[6].m_flow_nominal := tan.m_flow_nominal;
  tan.vol[6].m_flow_small := 0.0001*abs(tan.vol[6].m_flow_nominal);
  tan.vol[6].V := 0.1*tan.VTan;
  tan.vol[6].state_start.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    tan.vol[6].p_start, 
    tan.vol[6].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[6].p_start, 
      tan.vol[6].T_start, 0));
  tan.vol[6].state_start.d := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[6].p_start, 
    tan.vol[6].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[6].p_start, 
      tan.vol[6].T_start, 0));
  tan.vol[6].rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[6].p_start, 
    tan.vol[6].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[6].p_start, 
      tan.vol[6].T_start, 0));
  tan.vol[7].X_start[1] := tan.X_start[1];
  tan.vol[7].m_flow_nominal := tan.m_flow_nominal;
  tan.vol[7].m_flow_small := 0.0001*abs(tan.vol[7].m_flow_nominal);
  tan.vol[7].V := 0.1*tan.VTan;
  tan.vol[7].state_start.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    tan.vol[7].p_start, 
    tan.vol[7].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[7].p_start, 
      tan.vol[7].T_start, 0));
  tan.vol[7].state_start.d := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[7].p_start, 
    tan.vol[7].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[7].p_start, 
      tan.vol[7].T_start, 0));
  tan.vol[7].rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[7].p_start, 
    tan.vol[7].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[7].p_start, 
      tan.vol[7].T_start, 0));
  tan.vol[8].X_start[1] := tan.X_start[1];
  tan.vol[8].m_flow_nominal := tan.m_flow_nominal;
  tan.vol[8].m_flow_small := 0.0001*abs(tan.vol[8].m_flow_nominal);
  tan.vol[8].V := 0.1*tan.VTan;
  tan.vol[8].state_start.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    tan.vol[8].p_start, 
    tan.vol[8].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[8].p_start, 
      tan.vol[8].T_start, 0));
  tan.vol[8].state_start.d := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[8].p_start, 
    tan.vol[8].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[8].p_start, 
      tan.vol[8].T_start, 0));
  tan.vol[8].rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[8].p_start, 
    tan.vol[8].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[8].p_start, 
      tan.vol[8].T_start, 0));
  tan.vol[9].X_start[1] := tan.X_start[1];
  tan.vol[9].m_flow_nominal := tan.m_flow_nominal;
  tan.vol[9].m_flow_small := 0.0001*abs(tan.vol[9].m_flow_nominal);
  tan.vol[9].V := 0.1*tan.VTan;
  tan.vol[9].state_start.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    tan.vol[9].p_start, 
    tan.vol[9].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[9].p_start, 
      tan.vol[9].T_start, 0));
  tan.vol[9].state_start.d := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[9].p_start, 
    tan.vol[9].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[9].p_start, 
      tan.vol[9].T_start, 0));
  tan.vol[9].rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[9].p_start, 
    tan.vol[9].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[9].p_start, 
      tan.vol[9].T_start, 0));
  tan.vol[10].X_start[1] := tan.X_start[1];
  tan.vol[10].m_flow_nominal := tan.m_flow_nominal;
  tan.vol[10].m_flow_small := 0.0001*abs(tan.vol[10].m_flow_nominal);
  tan.vol[10].V := 0.1*tan.VTan;
  tan.vol[10].state_start.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    tan.vol[10].p_start, 
    tan.vol[10].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[10].p_start, 
      tan.vol[10].T_start, 0));
  tan.vol[10].state_start.d := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[10].p_start, 
    tan.vol[10].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[10].p_start, 
      tan.vol[10].T_start, 0));
  tan.vol[10].rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT(
    tan.vol[10].p_start, 
    tan.vol[10].T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[10].p_start, 
      tan.vol[10].T_start, 0));
  tan.conOpa.A := tan.datTanEnvTop.A;
  tan.conOpa.AOpa := tan.conOpa.A;
  tan.conOpa.T_a_start := tan.datTanEnvTop.T_a_start;
  tan.conOpa.T_b_start := tan.datTanEnvTop.T_b_start;
  tan.conOpa.opa.A := tan.conOpa.AOpa;
  tan.conOpa.opa.lay[1].A := tan.conOpa.opa.A;
  tan.conOpa.opa.lay[1].R := (if tan.conOpa.opa.lay[1].material.R == 0 then 
    tan.conOpa.opa.lay[1].material.x/tan.conOpa.opa.lay[1].material.k/
    tan.conOpa.opa.lay[1].A else tan.conOpa.opa.lay[1].material.R/
    tan.conOpa.opa.lay[1].A);
  tan.conOpa.opa.lay[2].A := tan.conOpa.opa.A;
  tan.conOpa.opa.lay[2].R := (if tan.conOpa.opa.lay[2].material.R == 0 then 
    tan.conOpa.opa.lay[2].material.x/tan.conOpa.opa.lay[2].material.k/
    tan.conOpa.opa.lay[2].A else tan.conOpa.opa.lay[2].material.R/
    tan.conOpa.opa.lay[2].A);
  tan.conOpa.opa.R := tan.conOpa.opa.lay[1].R+tan.conOpa.opa.lay[2].R;
  tan.conOpa.opa.UA := 1/tan.conOpa.opa.R;
  tan.conOpa.opa.U := tan.conOpa.opa.UA/tan.conOpa.opa.A;
  tan.conOpa.opa.T_a_start := tan.conOpa.T_a_start;
  tan.conOpa.opa.T_b_start := tan.conOpa.T_b_start;
  tan.conOpa3.A := tan.datTanEnvBot.A;
  tan.conOpa3.AOpa := tan.conOpa3.A;
  tan.conOpa3.T_a_start := tan.datTanEnvBot.T_a_start;
  tan.conOpa3.T_b_start := tan.datTanEnvBot.T_b_start;
  tan.conOpa3.opa.A := tan.conOpa3.AOpa;
  tan.conOpa3.opa.lay[1].A := tan.conOpa3.opa.A;
  tan.conOpa3.opa.lay[1].R := (if tan.conOpa3.opa.lay[1].material.R == 0 then 
    tan.conOpa3.opa.lay[1].material.x/tan.conOpa3.opa.lay[1].material.k/
    tan.conOpa3.opa.lay[1].A else tan.conOpa3.opa.lay[1].material.R/
    tan.conOpa3.opa.lay[1].A);
  tan.conOpa3.opa.R := tan.conOpa3.opa.lay[1].R;
  tan.conOpa3.opa.UA := 1/tan.conOpa3.opa.R;
  tan.conOpa3.opa.U := tan.conOpa3.opa.UA/tan.conOpa3.opa.A;
  tan.conOpa3.opa.T_a_start := tan.conOpa3.T_a_start;
  tan.conOpa3.opa.T_b_start := tan.conOpa3.T_b_start;
  tan.m_flow_C[1] := tan.c_sr*tan.m_flow_sr;
  tan.m_flow_C[2] := tan.c_sr*tan.m_flow_sr;
  tan.m_flow_C[3] := tan.c_sr*tan.m_flow_sr;
  tan.m_flow_C[4] := tan.c_sr*tan.m_flow_sr;
  tan.m_flow_C[5] := tan.c_sr*tan.m_flow_sr;
  tan.m_flow_C[6] := tan.c_sr*tan.m_flow_sr;
  tan.m_flow_C[7] := tan.c_sr*tan.m_flow_sr;
  tan.m_flow_C[8] := tan.c_sr*tan.m_flow_sr;
  tan.m_flow_C[9] := tan.c_sr*tan.m_flow_sr;
  tan.m_flow_C[10] := tan.m_flow_sr;
  tan.convConBou2.A := tan.datTanEnvBot.A;
  tan.convConBou2.hFixed := tan.hFixed;
  tan.convConBou3.A := tan.datTanEnvTop.A;
  tan.convConBou3.hFixed := tan.hFixed;
  tan.convConBou4[1].A := 0.1*tan.datTanEnv.A;
  tan.convConBou4[1].hFixed := tan.hFixed;
  tan.convConBou4[2].A := 0.1*tan.datTanEnv.A;
  tan.convConBou4[2].hFixed := tan.hFixed;
  tan.convConBou4[3].A := 0.1*tan.datTanEnv.A;
  tan.convConBou4[3].hFixed := tan.hFixed;
  tan.convConBou4[4].A := 0.1*tan.datTanEnv.A;
  tan.convConBou4[4].hFixed := tan.hFixed;
  tan.convConBou4[5].A := 0.1*tan.datTanEnv.A;
  tan.convConBou4[5].hFixed := tan.hFixed;
  tan.convConBou4[6].A := 0.1*tan.datTanEnv.A;
  tan.convConBou4[6].hFixed := tan.hFixed;
  tan.convConBou4[7].A := 0.1*tan.datTanEnv.A;
  tan.convConBou4[7].hFixed := tan.hFixed;
  tan.convConBou4[8].A := 0.1*tan.datTanEnv.A;
  tan.convConBou4[8].hFixed := tan.hFixed;
  tan.convConBou4[9].A := 0.1*tan.datTanEnv.A;
  tan.convConBou4[9].hFixed := tan.hFixed;
  tan.convConBou4[10].A := 0.1*tan.datTanEnv.A;
  tan.convConBou4[10].hFixed := tan.hFixed;
  tan.draHeaTra.TIn := tan.TIn;
  tan.convConBou8[1].A := 0.1*tan.datTanEnv.A;
  tan.convConBou8[1].hFixed := tan.hFixed;
  tan.convConBou8[2].A := 0.1*tan.datTanEnv.A;
  tan.convConBou8[2].hFixed := tan.hFixed;
  tan.convConBou8[3].A := 0.1*tan.datTanEnv.A;
  tan.convConBou8[3].hFixed := tan.hFixed;
  tan.convConBou8[4].A := 0.1*tan.datTanEnv.A;
  tan.convConBou8[4].hFixed := tan.hFixed;
  tan.convConBou8[5].A := 0.1*tan.datTanEnv.A;
  tan.convConBou8[5].hFixed := tan.hFixed;
  tan.convConBou8[6].A := 0.1*tan.datTanEnv.A;
  tan.convConBou8[6].hFixed := tan.hFixed;
  tan.convConBou8[7].A := 0.1*tan.datTanEnv.A;
  tan.convConBou8[7].hFixed := tan.hFixed;
  tan.convConBou8[8].A := 0.1*tan.datTanEnv.A;
  tan.convConBou8[8].hFixed := tan.hFixed;
  tan.convConBou8[9].A := 0.1*tan.datTanEnv.A;
  tan.convConBou8[9].hFixed := tan.hFixed;
  tan.convConBou8[10].A := 0.1*tan.datTanEnv.A;
  tan.convConBou8[10].hFixed := tan.hFixed;
  tan.convConBou9[1].A := 0.1*tan.datTanEnv.A;
  tan.convConBou9[1].hFixed := tan.hFixed;
  tan.convConBou9[2].A := 0.1*tan.datTanEnv.A;
  tan.convConBou9[2].hFixed := tan.hFixed;
  tan.convConBou9[3].A := 0.1*tan.datTanEnv.A;
  tan.convConBou9[3].hFixed := tan.hFixed;
  tan.convConBou9[4].A := 0.1*tan.datTanEnv.A;
  tan.convConBou9[4].hFixed := tan.hFixed;
  tan.convConBou9[5].A := 0.1*tan.datTanEnv.A;
  tan.convConBou9[5].hFixed := tan.hFixed;
  tan.convConBou9[6].A := 0.1*tan.datTanEnv.A;
  tan.convConBou9[6].hFixed := tan.hFixed;
  tan.convConBou9[7].A := 0.1*tan.datTanEnv.A;
  tan.convConBou9[7].hFixed := tan.hFixed;
  tan.convConBou9[8].A := 0.1*tan.datTanEnv.A;
  tan.convConBou9[8].hFixed := tan.hFixed;
  tan.convConBou9[9].A := 0.1*tan.datTanEnv.A;
  tan.convConBou9[9].hFixed := tan.hFixed;
  tan.convConBou9[10].A := 0.1*tan.datTanEnv.A;
  tan.convConBou9[10].hFixed := tan.hFixed;
  tan.fsRadiationExchange1[1].A := 0.1*tan.datTanEnv.A;
  tan.fsRadiationExchange1[2].A := 0.1*tan.datTanEnv.A;
  tan.fsRadiationExchange1[3].A := 0.1*tan.datTanEnv.A;
  tan.fsRadiationExchange1[4].A := 0.1*tan.datTanEnv.A;
  tan.fsRadiationExchange1[5].A := 0.1*tan.datTanEnv.A;
  tan.fsRadiationExchange1[6].A := 0.1*tan.datTanEnv.A;
  tan.fsRadiationExchange1[7].A := 0.1*tan.datTanEnv.A;
  tan.fsRadiationExchange1[8].A := 0.1*tan.datTanEnv.A;
  tan.fsRadiationExchange1[9].A := 0.1*tan.datTanEnv.A;
  tan.fsRadiationExchange1[10].A := 0.1*tan.datTanEnv.A;
  tan.convConBou5[1].A := 0.1*tan.datFlueWall.A;
  tan.convConBou5[1].hFixed := tan.hFixed;
  tan.convConBou5[2].A := 0.1*tan.datFlueWall.A;
  tan.convConBou5[2].hFixed := tan.hFixed;
  tan.convConBou5[3].A := 0.1*tan.datFlueWall.A;
  tan.convConBou5[3].hFixed := tan.hFixed;
  tan.convConBou5[4].A := 0.1*tan.datFlueWall.A;
  tan.convConBou5[4].hFixed := tan.hFixed;
  tan.convConBou5[5].A := 0.1*tan.datFlueWall.A;
  tan.convConBou5[5].hFixed := tan.hFixed;
  tan.convConBou5[6].A := 0.1*tan.datFlueWall.A;
  tan.convConBou5[6].hFixed := tan.hFixed;
  tan.convConBou5[7].A := 0.1*tan.datFlueWall.A;
  tan.convConBou5[7].hFixed := tan.hFixed;
  tan.convConBou5[8].A := 0.1*tan.datFlueWall.A;
  tan.convConBou5[8].hFixed := tan.hFixed;
  tan.convConBou5[9].A := 0.1*tan.datFlueWall.A;
  tan.convConBou5[9].hFixed := tan.hFixed;
  tan.convConBou5[10].A := 0.1*tan.datFlueWall.A;
  tan.convConBou5[10].hFixed := tan.hFixed;
  tan.convConBou10.A := tan.datTanEnvTop.A;
  tan.convConBou10.hFixed := tan.hFixed;
  tan.fsRadiationExchange2.A := tan.datTanEnvTop.A;
  tan.buoHeaTra.A := tan.datTanEnvBot.A;
  tan.buoHeaTra.c_wI := tan.c_wI;
  tan.buoHeaTra.m_flow_C := tan.c_sr*tan.m_flow_sr;
  tan.buoHeaTra.buoBas.c_w := tan.buoHeaTra.c_wI;
  tan.buoHeaTra.buoBas.A := tan.buoHeaTra.A;
  tan.buoHeaTra.buoBas.t_H.c_w := tan.buoHeaTra.buoBas.c_w;
  tan.buoHeaTra.buoBas.t_H.A := tan.buoHeaTra.buoBas.A;
  tan.buoHeaTra.buoBas.m_flow_buo_x.c_w := tan.buoHeaTra.buoBas.c_w;
  tan.buoHeaTra.buoBas.m_flow_buo_x.A := tan.buoHeaTra.buoBas.A;
  tan.buoHeaTra.buoFlu[1].c_w := tan.buoHeaTra.c_wI;
  tan.buoHeaTra.buoFlu[1].A := tan.buoHeaTra.A;
  tan.buoHeaTra.buoFlu[1].t_H.c_w := tan.buoHeaTra.buoFlu[1].c_w;
  tan.buoHeaTra.buoFlu[1].t_H.A := tan.buoHeaTra.buoFlu[1].A;
  tan.buoHeaTra.buoFlu[1].m_flow_buo_x.c_w := tan.buoHeaTra.buoFlu[1].c_w;
  tan.buoHeaTra.buoFlu[1].m_flow_buo_x.A := tan.buoHeaTra.buoFlu[1].A;
  tan.buoHeaTra.buoFlu[2].c_w := tan.buoHeaTra.c_wI;
  tan.buoHeaTra.buoFlu[2].A := tan.buoHeaTra.A;
  tan.buoHeaTra.buoFlu[2].t_H.c_w := tan.buoHeaTra.buoFlu[2].c_w;
  tan.buoHeaTra.buoFlu[2].t_H.A := tan.buoHeaTra.buoFlu[2].A;
  tan.buoHeaTra.buoFlu[2].m_flow_buo_x.c_w := tan.buoHeaTra.buoFlu[2].c_w;
  tan.buoHeaTra.buoFlu[2].m_flow_buo_x.A := tan.buoHeaTra.buoFlu[2].A;
  tan.buoHeaTra.buoFlu[3].c_w := tan.buoHeaTra.c_wI;
  tan.buoHeaTra.buoFlu[3].A := tan.buoHeaTra.A;
  tan.buoHeaTra.buoFlu[3].t_H.c_w := tan.buoHeaTra.buoFlu[3].c_w;
  tan.buoHeaTra.buoFlu[3].t_H.A := tan.buoHeaTra.buoFlu[3].A;
  tan.buoHeaTra.buoFlu[3].m_flow_buo_x.c_w := tan.buoHeaTra.buoFlu[3].c_w;
  tan.buoHeaTra.buoFlu[3].m_flow_buo_x.A := tan.buoHeaTra.buoFlu[3].A;
  tan.buoHeaTra.buoFlu[4].c_w := tan.buoHeaTra.c_wI;
  tan.buoHeaTra.buoFlu[4].A := tan.buoHeaTra.A;
  tan.buoHeaTra.buoFlu[4].t_H.c_w := tan.buoHeaTra.buoFlu[4].c_w;
  tan.buoHeaTra.buoFlu[4].t_H.A := tan.buoHeaTra.buoFlu[4].A;
  tan.buoHeaTra.buoFlu[4].m_flow_buo_x.c_w := tan.buoHeaTra.buoFlu[4].c_w;
  tan.buoHeaTra.buoFlu[4].m_flow_buo_x.A := tan.buoHeaTra.buoFlu[4].A;
  tan.buoHeaTra.buoFlu[5].c_w := tan.buoHeaTra.c_wI;
  tan.buoHeaTra.buoFlu[5].A := tan.buoHeaTra.A;
  tan.buoHeaTra.buoFlu[5].t_H.c_w := tan.buoHeaTra.buoFlu[5].c_w;
  tan.buoHeaTra.buoFlu[5].t_H.A := tan.buoHeaTra.buoFlu[5].A;
  tan.buoHeaTra.buoFlu[5].m_flow_buo_x.c_w := tan.buoHeaTra.buoFlu[5].c_w;
  tan.buoHeaTra.buoFlu[5].m_flow_buo_x.A := tan.buoHeaTra.buoFlu[5].A;
  tan.buoHeaTra.buoFlu[6].c_w := tan.buoHeaTra.c_wI;
  tan.buoHeaTra.buoFlu[6].A := tan.buoHeaTra.A;
  tan.buoHeaTra.buoFlu[6].t_H.c_w := tan.buoHeaTra.buoFlu[6].c_w;
  tan.buoHeaTra.buoFlu[6].t_H.A := tan.buoHeaTra.buoFlu[6].A;
  tan.buoHeaTra.buoFlu[6].m_flow_buo_x.c_w := tan.buoHeaTra.buoFlu[6].c_w;
  tan.buoHeaTra.buoFlu[6].m_flow_buo_x.A := tan.buoHeaTra.buoFlu[6].A;
  tan.buoHeaTra.buoFlu[7].c_w := tan.buoHeaTra.c_wI;
  tan.buoHeaTra.buoFlu[7].A := tan.buoHeaTra.A;
  tan.buoHeaTra.buoFlu[7].t_H.c_w := tan.buoHeaTra.buoFlu[7].c_w;
  tan.buoHeaTra.buoFlu[7].t_H.A := tan.buoHeaTra.buoFlu[7].A;
  tan.buoHeaTra.buoFlu[7].m_flow_buo_x.c_w := tan.buoHeaTra.buoFlu[7].c_w;
  tan.buoHeaTra.buoFlu[7].m_flow_buo_x.A := tan.buoHeaTra.buoFlu[7].A;
  tan.buoHeaTra.buoFlu[8].c_w := tan.buoHeaTra.c_wI;
  tan.buoHeaTra.buoFlu[8].A := tan.buoHeaTra.A;
  tan.buoHeaTra.buoFlu[8].t_H.c_w := tan.buoHeaTra.buoFlu[8].c_w;
  tan.buoHeaTra.buoFlu[8].t_H.A := tan.buoHeaTra.buoFlu[8].A;
  tan.buoHeaTra.buoFlu[8].m_flow_buo_x.c_w := tan.buoHeaTra.buoFlu[8].c_w;
  tan.buoHeaTra.buoFlu[8].m_flow_buo_x.A := tan.buoHeaTra.buoFlu[8].A;
  tan.buoHeaTra.buoFlu[9].c_w := tan.buoHeaTra.c_wI;
  tan.buoHeaTra.buoFlu[9].A := tan.buoHeaTra.A;
  tan.buoHeaTra.buoFlu[9].t_H.c_w := tan.buoHeaTra.buoFlu[9].c_w;
  tan.buoHeaTra.buoFlu[9].t_H.A := tan.buoHeaTra.buoFlu[9].A;
  tan.buoHeaTra.buoFlu[9].m_flow_buo_x.c_w := tan.buoHeaTra.buoFlu[9].c_w;
  tan.buoHeaTra.buoFlu[9].m_flow_buo_x.A := tan.buoHeaTra.buoFlu[9].A;
  tan.buoHeaTra.buoFlu[10].c_w := tan.buoHeaTra.c_wI;
  tan.buoHeaTra.buoFlu[10].A := tan.buoHeaTra.A;
  tan.buoHeaTra.buoFlu[10].t_H.c_w := tan.buoHeaTra.buoFlu[10].c_w;
  tan.buoHeaTra.buoFlu[10].t_H.A := tan.buoHeaTra.buoFlu[10].A;
  tan.buoHeaTra.buoFlu[10].m_flow_buo_x.c_w := tan.buoHeaTra.buoFlu[10].c_w;
  tan.buoHeaTra.buoFlu[10].m_flow_buo_x.A := tan.buoHeaTra.buoFlu[10].A;
  tan.buoHeaTra.qBuo.m_flow_C := tan.buoHeaTra.m_flow_C;
  tan.flueWall[1].opa.lay[1].UA := 1/tan.flueWall[1].opa.lay[1].R;
  tan.flueWall[1].opa.lay[1].U := tan.flueWall[1].opa.lay[1].UA/tan.flueWall[1].opa.lay[1].A;
  tan.flueWall[1].opa._T_a_start[1] := tan.flueWall[1].opa.T_b_start+(
    tan.flueWall[1].opa.T_a_start-tan.flueWall[1].opa.T_b_start)*
    tan.flueWall[1].opa.lay[1].R/tan.flueWall[1].opa.R;
  tan.flueWall[1].opa.lay[1].T_a_start := tan.flueWall[1].opa._T_a_start[1];
  tan.flueWall[1].opa._T_b_start[1] := tan.flueWall[1].opa.T_a_start+(
    tan.flueWall[1].opa.T_b_start-tan.flueWall[1].opa.T_a_start)*
    tan.flueWall[1].opa.lay[1].R/tan.flueWall[1].opa.R;
  tan.flueWall[1].opa.lay[1].T_b_start := tan.flueWall[1].opa._T_b_start[1];
  tan.flueWall[1].opa.lay[1].C := tan.flueWall[1].opa.lay[1].A*tan.flueWall[1].opa.lay[1].material.x
    *tan.flueWall[1].opa.lay[1].material.d*tan.flueWall[1].opa.lay[1].material.c
    /tan.flueWall[1].opa.lay[1].material.nSta;
  tan.flueWall[1].opa.lay[1].UAnSta := tan.flueWall[1].opa.lay[1].UA*
    tan.flueWall[1].opa.lay[1].nSta;
  tan.flueWall[1].opa.lay[1].UAnSta2 := 2*tan.flueWall[1].opa.lay[1].UAnSta;
  tan.flueWall[2].opa.lay[1].UA := 1/tan.flueWall[2].opa.lay[1].R;
  tan.flueWall[2].opa.lay[1].U := tan.flueWall[2].opa.lay[1].UA/tan.flueWall[2].opa.lay[1].A;
  tan.flueWall[2].opa._T_a_start[1] := tan.flueWall[2].opa.T_b_start+(
    tan.flueWall[2].opa.T_a_start-tan.flueWall[2].opa.T_b_start)*
    tan.flueWall[2].opa.lay[1].R/tan.flueWall[2].opa.R;
  tan.flueWall[2].opa.lay[1].T_a_start := tan.flueWall[2].opa._T_a_start[1];
  tan.flueWall[2].opa._T_b_start[1] := tan.flueWall[2].opa.T_a_start+(
    tan.flueWall[2].opa.T_b_start-tan.flueWall[2].opa.T_a_start)*
    tan.flueWall[2].opa.lay[1].R/tan.flueWall[2].opa.R;
  tan.flueWall[2].opa.lay[1].T_b_start := tan.flueWall[2].opa._T_b_start[1];
  tan.flueWall[2].opa.lay[1].C := tan.flueWall[2].opa.lay[1].A*tan.flueWall[2].opa.lay[1].material.x
    *tan.flueWall[2].opa.lay[1].material.d*tan.flueWall[2].opa.lay[1].material.c
    /tan.flueWall[2].opa.lay[1].material.nSta;
  tan.flueWall[2].opa.lay[1].UAnSta := tan.flueWall[2].opa.lay[1].UA*
    tan.flueWall[2].opa.lay[1].nSta;
  tan.flueWall[2].opa.lay[1].UAnSta2 := 2*tan.flueWall[2].opa.lay[1].UAnSta;
  tan.flueWall[3].opa.lay[1].UA := 1/tan.flueWall[3].opa.lay[1].R;
  tan.flueWall[3].opa.lay[1].U := tan.flueWall[3].opa.lay[1].UA/tan.flueWall[3].opa.lay[1].A;
  tan.flueWall[3].opa._T_a_start[1] := tan.flueWall[3].opa.T_b_start+(
    tan.flueWall[3].opa.T_a_start-tan.flueWall[3].opa.T_b_start)*
    tan.flueWall[3].opa.lay[1].R/tan.flueWall[3].opa.R;
  tan.flueWall[3].opa.lay[1].T_a_start := tan.flueWall[3].opa._T_a_start[1];
  tan.flueWall[3].opa._T_b_start[1] := tan.flueWall[3].opa.T_a_start+(
    tan.flueWall[3].opa.T_b_start-tan.flueWall[3].opa.T_a_start)*
    tan.flueWall[3].opa.lay[1].R/tan.flueWall[3].opa.R;
  tan.flueWall[3].opa.lay[1].T_b_start := tan.flueWall[3].opa._T_b_start[1];
  tan.flueWall[3].opa.lay[1].C := tan.flueWall[3].opa.lay[1].A*tan.flueWall[3].opa.lay[1].material.x
    *tan.flueWall[3].opa.lay[1].material.d*tan.flueWall[3].opa.lay[1].material.c
    /tan.flueWall[3].opa.lay[1].material.nSta;
  tan.flueWall[3].opa.lay[1].UAnSta := tan.flueWall[3].opa.lay[1].UA*
    tan.flueWall[3].opa.lay[1].nSta;
  tan.flueWall[3].opa.lay[1].UAnSta2 := 2*tan.flueWall[3].opa.lay[1].UAnSta;
  tan.flueWall[4].opa.lay[1].UA := 1/tan.flueWall[4].opa.lay[1].R;
  tan.flueWall[4].opa.lay[1].U := tan.flueWall[4].opa.lay[1].UA/tan.flueWall[4].opa.lay[1].A;
  tan.flueWall[4].opa._T_a_start[1] := tan.flueWall[4].opa.T_b_start+(
    tan.flueWall[4].opa.T_a_start-tan.flueWall[4].opa.T_b_start)*
    tan.flueWall[4].opa.lay[1].R/tan.flueWall[4].opa.R;
  tan.flueWall[4].opa.lay[1].T_a_start := tan.flueWall[4].opa._T_a_start[1];
  tan.flueWall[4].opa._T_b_start[1] := tan.flueWall[4].opa.T_a_start+(
    tan.flueWall[4].opa.T_b_start-tan.flueWall[4].opa.T_a_start)*
    tan.flueWall[4].opa.lay[1].R/tan.flueWall[4].opa.R;
  tan.flueWall[4].opa.lay[1].T_b_start := tan.flueWall[4].opa._T_b_start[1];
  tan.flueWall[4].opa.lay[1].C := tan.flueWall[4].opa.lay[1].A*tan.flueWall[4].opa.lay[1].material.x
    *tan.flueWall[4].opa.lay[1].material.d*tan.flueWall[4].opa.lay[1].material.c
    /tan.flueWall[4].opa.lay[1].material.nSta;
  tan.flueWall[4].opa.lay[1].UAnSta := tan.flueWall[4].opa.lay[1].UA*
    tan.flueWall[4].opa.lay[1].nSta;
  tan.flueWall[4].opa.lay[1].UAnSta2 := 2*tan.flueWall[4].opa.lay[1].UAnSta;
  tan.flueWall[5].opa.lay[1].UA := 1/tan.flueWall[5].opa.lay[1].R;
  tan.flueWall[5].opa.lay[1].U := tan.flueWall[5].opa.lay[1].UA/tan.flueWall[5].opa.lay[1].A;
  tan.flueWall[5].opa._T_a_start[1] := tan.flueWall[5].opa.T_b_start+(
    tan.flueWall[5].opa.T_a_start-tan.flueWall[5].opa.T_b_start)*
    tan.flueWall[5].opa.lay[1].R/tan.flueWall[5].opa.R;
  tan.flueWall[5].opa.lay[1].T_a_start := tan.flueWall[5].opa._T_a_start[1];
  tan.flueWall[5].opa._T_b_start[1] := tan.flueWall[5].opa.T_a_start+(
    tan.flueWall[5].opa.T_b_start-tan.flueWall[5].opa.T_a_start)*
    tan.flueWall[5].opa.lay[1].R/tan.flueWall[5].opa.R;
  tan.flueWall[5].opa.lay[1].T_b_start := tan.flueWall[5].opa._T_b_start[1];
  tan.flueWall[5].opa.lay[1].C := tan.flueWall[5].opa.lay[1].A*tan.flueWall[5].opa.lay[1].material.x
    *tan.flueWall[5].opa.lay[1].material.d*tan.flueWall[5].opa.lay[1].material.c
    /tan.flueWall[5].opa.lay[1].material.nSta;
  tan.flueWall[5].opa.lay[1].UAnSta := tan.flueWall[5].opa.lay[1].UA*
    tan.flueWall[5].opa.lay[1].nSta;
  tan.flueWall[5].opa.lay[1].UAnSta2 := 2*tan.flueWall[5].opa.lay[1].UAnSta;
  tan.flueWall[6].opa.lay[1].UA := 1/tan.flueWall[6].opa.lay[1].R;
  tan.flueWall[6].opa.lay[1].U := tan.flueWall[6].opa.lay[1].UA/tan.flueWall[6].opa.lay[1].A;
  tan.flueWall[6].opa._T_a_start[1] := tan.flueWall[6].opa.T_b_start+(
    tan.flueWall[6].opa.T_a_start-tan.flueWall[6].opa.T_b_start)*
    tan.flueWall[6].opa.lay[1].R/tan.flueWall[6].opa.R;
  tan.flueWall[6].opa.lay[1].T_a_start := tan.flueWall[6].opa._T_a_start[1];
  tan.flueWall[6].opa._T_b_start[1] := tan.flueWall[6].opa.T_a_start+(
    tan.flueWall[6].opa.T_b_start-tan.flueWall[6].opa.T_a_start)*
    tan.flueWall[6].opa.lay[1].R/tan.flueWall[6].opa.R;
  tan.flueWall[6].opa.lay[1].T_b_start := tan.flueWall[6].opa._T_b_start[1];
  tan.flueWall[6].opa.lay[1].C := tan.flueWall[6].opa.lay[1].A*tan.flueWall[6].opa.lay[1].material.x
    *tan.flueWall[6].opa.lay[1].material.d*tan.flueWall[6].opa.lay[1].material.c
    /tan.flueWall[6].opa.lay[1].material.nSta;
  tan.flueWall[6].opa.lay[1].UAnSta := tan.flueWall[6].opa.lay[1].UA*
    tan.flueWall[6].opa.lay[1].nSta;
  tan.flueWall[6].opa.lay[1].UAnSta2 := 2*tan.flueWall[6].opa.lay[1].UAnSta;
  tan.flueWall[7].opa.lay[1].UA := 1/tan.flueWall[7].opa.lay[1].R;
  tan.flueWall[7].opa.lay[1].U := tan.flueWall[7].opa.lay[1].UA/tan.flueWall[7].opa.lay[1].A;
  tan.flueWall[7].opa._T_a_start[1] := tan.flueWall[7].opa.T_b_start+(
    tan.flueWall[7].opa.T_a_start-tan.flueWall[7].opa.T_b_start)*
    tan.flueWall[7].opa.lay[1].R/tan.flueWall[7].opa.R;
  tan.flueWall[7].opa.lay[1].T_a_start := tan.flueWall[7].opa._T_a_start[1];
  tan.flueWall[7].opa._T_b_start[1] := tan.flueWall[7].opa.T_a_start+(
    tan.flueWall[7].opa.T_b_start-tan.flueWall[7].opa.T_a_start)*
    tan.flueWall[7].opa.lay[1].R/tan.flueWall[7].opa.R;
  tan.flueWall[7].opa.lay[1].T_b_start := tan.flueWall[7].opa._T_b_start[1];
  tan.flueWall[7].opa.lay[1].C := tan.flueWall[7].opa.lay[1].A*tan.flueWall[7].opa.lay[1].material.x
    *tan.flueWall[7].opa.lay[1].material.d*tan.flueWall[7].opa.lay[1].material.c
    /tan.flueWall[7].opa.lay[1].material.nSta;
  tan.flueWall[7].opa.lay[1].UAnSta := tan.flueWall[7].opa.lay[1].UA*
    tan.flueWall[7].opa.lay[1].nSta;
  tan.flueWall[7].opa.lay[1].UAnSta2 := 2*tan.flueWall[7].opa.lay[1].UAnSta;
  tan.flueWall[8].opa.lay[1].UA := 1/tan.flueWall[8].opa.lay[1].R;
  tan.flueWall[8].opa.lay[1].U := tan.flueWall[8].opa.lay[1].UA/tan.flueWall[8].opa.lay[1].A;
  tan.flueWall[8].opa._T_a_start[1] := tan.flueWall[8].opa.T_b_start+(
    tan.flueWall[8].opa.T_a_start-tan.flueWall[8].opa.T_b_start)*
    tan.flueWall[8].opa.lay[1].R/tan.flueWall[8].opa.R;
  tan.flueWall[8].opa.lay[1].T_a_start := tan.flueWall[8].opa._T_a_start[1];
  tan.flueWall[8].opa._T_b_start[1] := tan.flueWall[8].opa.T_a_start+(
    tan.flueWall[8].opa.T_b_start-tan.flueWall[8].opa.T_a_start)*
    tan.flueWall[8].opa.lay[1].R/tan.flueWall[8].opa.R;
  tan.flueWall[8].opa.lay[1].T_b_start := tan.flueWall[8].opa._T_b_start[1];
  tan.flueWall[8].opa.lay[1].C := tan.flueWall[8].opa.lay[1].A*tan.flueWall[8].opa.lay[1].material.x
    *tan.flueWall[8].opa.lay[1].material.d*tan.flueWall[8].opa.lay[1].material.c
    /tan.flueWall[8].opa.lay[1].material.nSta;
  tan.flueWall[8].opa.lay[1].UAnSta := tan.flueWall[8].opa.lay[1].UA*
    tan.flueWall[8].opa.lay[1].nSta;
  tan.flueWall[8].opa.lay[1].UAnSta2 := 2*tan.flueWall[8].opa.lay[1].UAnSta;
  tan.flueWall[9].opa.lay[1].UA := 1/tan.flueWall[9].opa.lay[1].R;
  tan.flueWall[9].opa.lay[1].U := tan.flueWall[9].opa.lay[1].UA/tan.flueWall[9].opa.lay[1].A;
  tan.flueWall[9].opa._T_a_start[1] := tan.flueWall[9].opa.T_b_start+(
    tan.flueWall[9].opa.T_a_start-tan.flueWall[9].opa.T_b_start)*
    tan.flueWall[9].opa.lay[1].R/tan.flueWall[9].opa.R;
  tan.flueWall[9].opa.lay[1].T_a_start := tan.flueWall[9].opa._T_a_start[1];
  tan.flueWall[9].opa._T_b_start[1] := tan.flueWall[9].opa.T_a_start+(
    tan.flueWall[9].opa.T_b_start-tan.flueWall[9].opa.T_a_start)*
    tan.flueWall[9].opa.lay[1].R/tan.flueWall[9].opa.R;
  tan.flueWall[9].opa.lay[1].T_b_start := tan.flueWall[9].opa._T_b_start[1];
  tan.flueWall[9].opa.lay[1].C := tan.flueWall[9].opa.lay[1].A*tan.flueWall[9].opa.lay[1].material.x
    *tan.flueWall[9].opa.lay[1].material.d*tan.flueWall[9].opa.lay[1].material.c
    /tan.flueWall[9].opa.lay[1].material.nSta;
  tan.flueWall[9].opa.lay[1].UAnSta := tan.flueWall[9].opa.lay[1].UA*
    tan.flueWall[9].opa.lay[1].nSta;
  tan.flueWall[9].opa.lay[1].UAnSta2 := 2*tan.flueWall[9].opa.lay[1].UAnSta;
  tan.flueWall[10].opa.lay[1].UA := 1/tan.flueWall[10].opa.lay[1].R;
  tan.flueWall[10].opa.lay[1].U := tan.flueWall[10].opa.lay[1].UA/
    tan.flueWall[10].opa.lay[1].A;
  tan.flueWall[10].opa._T_a_start[1] := tan.flueWall[10].opa.T_b_start+(
    tan.flueWall[10].opa.T_a_start-tan.flueWall[10].opa.T_b_start)*
    tan.flueWall[10].opa.lay[1].R/tan.flueWall[10].opa.R;
  tan.flueWall[10].opa.lay[1].T_a_start := tan.flueWall[10].opa._T_a_start[1];
  tan.flueWall[10].opa._T_b_start[1] := tan.flueWall[10].opa.T_a_start+(
    tan.flueWall[10].opa.T_b_start-tan.flueWall[10].opa.T_a_start)*
    tan.flueWall[10].opa.lay[1].R/tan.flueWall[10].opa.R;
  tan.flueWall[10].opa.lay[1].T_b_start := tan.flueWall[10].opa._T_b_start[1];
  tan.flueWall[10].opa.lay[1].C := tan.flueWall[10].opa.lay[1].A*
    tan.flueWall[10].opa.lay[1].material.x*tan.flueWall[10].opa.lay[1].material.d
    *tan.flueWall[10].opa.lay[1].material.c/tan.flueWall[10].opa.lay[1].material.nSta;
  tan.flueWall[10].opa.lay[1].UAnSta := tan.flueWall[10].opa.lay[1].UA*
    tan.flueWall[10].opa.lay[1].nSta;
  tan.flueWall[10].opa.lay[1].UAnSta2 := 2*tan.flueWall[10].opa.lay[1].UAnSta;
  tan.conExt[1].opa.lay[1].UA := 1/tan.conExt[1].opa.lay[1].R;
  tan.conExt[1].opa.lay[1].U := tan.conExt[1].opa.lay[1].UA/tan.conExt[1].opa.lay[1].A;
  tan.conExt[1].opa._T_a_start[1] := tan.conExt[1].opa.T_b_start+(
    tan.conExt[1].opa.T_a_start-tan.conExt[1].opa.T_b_start)*(tan.conExt[1].opa.lay[1].R
    +tan.conExt[1].opa.lay[2].R)/tan.conExt[1].opa.R;
  tan.conExt[1].opa.lay[1].T_a_start := tan.conExt[1].opa._T_a_start[1];
  tan.conExt[1].opa._T_b_start[1] := tan.conExt[1].opa.T_a_start+(
    tan.conExt[1].opa.T_b_start-tan.conExt[1].opa.T_a_start)*tan.conExt[1].opa.lay[1].R
    /tan.conExt[1].opa.R;
  tan.conExt[1].opa.lay[1].T_b_start := tan.conExt[1].opa._T_b_start[1];
  tan.conExt[1].opa.lay[1].C := tan.conExt[1].opa.lay[1].A*tan.conExt[1].opa.lay[1].material.x
    *tan.conExt[1].opa.lay[1].material.d*tan.conExt[1].opa.lay[1].material.c/
    tan.conExt[1].opa.lay[1].material.nSta;
  tan.conExt[1].opa.lay[1].UAnSta := tan.conExt[1].opa.lay[1].UA*
    tan.conExt[1].opa.lay[1].nSta;
  tan.conExt[1].opa.lay[1].UAnSta2 := 2*tan.conExt[1].opa.lay[1].UAnSta;
  tan.conExt[1].opa.lay[2].UA := 1/tan.conExt[1].opa.lay[2].R;
  tan.conExt[1].opa.lay[2].U := tan.conExt[1].opa.lay[2].UA/tan.conExt[1].opa.lay[2].A;
  tan.conExt[1].opa._T_a_start[2] := tan.conExt[1].opa.T_b_start+(
    tan.conExt[1].opa.T_a_start-tan.conExt[1].opa.T_b_start)*tan.conExt[1].opa.lay[2].R
    /tan.conExt[1].opa.R;
  tan.conExt[1].opa.lay[2].T_a_start := tan.conExt[1].opa._T_a_start[2];
  tan.conExt[1].opa._T_b_start[2] := tan.conExt[1].opa.T_a_start+(
    tan.conExt[1].opa.T_b_start-tan.conExt[1].opa.T_a_start)*(tan.conExt[1].opa.lay[1].R
    +tan.conExt[1].opa.lay[2].R)/tan.conExt[1].opa.R;
  tan.conExt[1].opa.lay[2].T_b_start := tan.conExt[1].opa._T_b_start[2];
  tan.conExt[1].opa.lay[2].C := tan.conExt[1].opa.lay[2].A*tan.conExt[1].opa.lay[2].material.x
    *tan.conExt[1].opa.lay[2].material.d*tan.conExt[1].opa.lay[2].material.c/
    tan.conExt[1].opa.lay[2].material.nSta;
  tan.conExt[1].opa.lay[2].UAnSta := tan.conExt[1].opa.lay[2].UA*
    tan.conExt[1].opa.lay[2].nSta;
  tan.conExt[1].opa.lay[2].UAnSta2 := 2*tan.conExt[1].opa.lay[2].UAnSta;
  tan.conExt[2].opa.lay[1].UA := 1/tan.conExt[2].opa.lay[1].R;
  tan.conExt[2].opa.lay[1].U := tan.conExt[2].opa.lay[1].UA/tan.conExt[2].opa.lay[1].A;
  tan.conExt[2].opa._T_a_start[1] := tan.conExt[2].opa.T_b_start+(
    tan.conExt[2].opa.T_a_start-tan.conExt[2].opa.T_b_start)*(tan.conExt[2].opa.lay[1].R
    +tan.conExt[2].opa.lay[2].R)/tan.conExt[2].opa.R;
  tan.conExt[2].opa.lay[1].T_a_start := tan.conExt[2].opa._T_a_start[1];
  tan.conExt[2].opa._T_b_start[1] := tan.conExt[2].opa.T_a_start+(
    tan.conExt[2].opa.T_b_start-tan.conExt[2].opa.T_a_start)*tan.conExt[2].opa.lay[1].R
    /tan.conExt[2].opa.R;
  tan.conExt[2].opa.lay[1].T_b_start := tan.conExt[2].opa._T_b_start[1];
  tan.conExt[2].opa.lay[1].C := tan.conExt[2].opa.lay[1].A*tan.conExt[2].opa.lay[1].material.x
    *tan.conExt[2].opa.lay[1].material.d*tan.conExt[2].opa.lay[1].material.c/
    tan.conExt[2].opa.lay[1].material.nSta;
  tan.conExt[2].opa.lay[1].UAnSta := tan.conExt[2].opa.lay[1].UA*
    tan.conExt[2].opa.lay[1].nSta;
  tan.conExt[2].opa.lay[1].UAnSta2 := 2*tan.conExt[2].opa.lay[1].UAnSta;
  tan.conExt[2].opa.lay[2].UA := 1/tan.conExt[2].opa.lay[2].R;
  tan.conExt[2].opa.lay[2].U := tan.conExt[2].opa.lay[2].UA/tan.conExt[2].opa.lay[2].A;
  tan.conExt[2].opa._T_a_start[2] := tan.conExt[2].opa.T_b_start+(
    tan.conExt[2].opa.T_a_start-tan.conExt[2].opa.T_b_start)*tan.conExt[2].opa.lay[2].R
    /tan.conExt[2].opa.R;
  tan.conExt[2].opa.lay[2].T_a_start := tan.conExt[2].opa._T_a_start[2];
  tan.conExt[2].opa._T_b_start[2] := tan.conExt[2].opa.T_a_start+(
    tan.conExt[2].opa.T_b_start-tan.conExt[2].opa.T_a_start)*(tan.conExt[2].opa.lay[1].R
    +tan.conExt[2].opa.lay[2].R)/tan.conExt[2].opa.R;
  tan.conExt[2].opa.lay[2].T_b_start := tan.conExt[2].opa._T_b_start[2];
  tan.conExt[2].opa.lay[2].C := tan.conExt[2].opa.lay[2].A*tan.conExt[2].opa.lay[2].material.x
    *tan.conExt[2].opa.lay[2].material.d*tan.conExt[2].opa.lay[2].material.c/
    tan.conExt[2].opa.lay[2].material.nSta;
  tan.conExt[2].opa.lay[2].UAnSta := tan.conExt[2].opa.lay[2].UA*
    tan.conExt[2].opa.lay[2].nSta;
  tan.conExt[2].opa.lay[2].UAnSta2 := 2*tan.conExt[2].opa.lay[2].UAnSta;
  tan.conExt[3].opa.lay[1].UA := 1/tan.conExt[3].opa.lay[1].R;
  tan.conExt[3].opa.lay[1].U := tan.conExt[3].opa.lay[1].UA/tan.conExt[3].opa.lay[1].A;
  tan.conExt[3].opa._T_a_start[1] := tan.conExt[3].opa.T_b_start+(
    tan.conExt[3].opa.T_a_start-tan.conExt[3].opa.T_b_start)*(tan.conExt[3].opa.lay[1].R
    +tan.conExt[3].opa.lay[2].R)/tan.conExt[3].opa.R;
  tan.conExt[3].opa.lay[1].T_a_start := tan.conExt[3].opa._T_a_start[1];
  tan.conExt[3].opa._T_b_start[1] := tan.conExt[3].opa.T_a_start+(
    tan.conExt[3].opa.T_b_start-tan.conExt[3].opa.T_a_start)*tan.conExt[3].opa.lay[1].R
    /tan.conExt[3].opa.R;
  tan.conExt[3].opa.lay[1].T_b_start := tan.conExt[3].opa._T_b_start[1];
  tan.conExt[3].opa.lay[1].C := tan.conExt[3].opa.lay[1].A*tan.conExt[3].opa.lay[1].material.x
    *tan.conExt[3].opa.lay[1].material.d*tan.conExt[3].opa.lay[1].material.c/
    tan.conExt[3].opa.lay[1].material.nSta;
  tan.conExt[3].opa.lay[1].UAnSta := tan.conExt[3].opa.lay[1].UA*
    tan.conExt[3].opa.lay[1].nSta;
  tan.conExt[3].opa.lay[1].UAnSta2 := 2*tan.conExt[3].opa.lay[1].UAnSta;
  tan.conExt[3].opa.lay[2].UA := 1/tan.conExt[3].opa.lay[2].R;
  tan.conExt[3].opa.lay[2].U := tan.conExt[3].opa.lay[2].UA/tan.conExt[3].opa.lay[2].A;
  tan.conExt[3].opa._T_a_start[2] := tan.conExt[3].opa.T_b_start+(
    tan.conExt[3].opa.T_a_start-tan.conExt[3].opa.T_b_start)*tan.conExt[3].opa.lay[2].R
    /tan.conExt[3].opa.R;
  tan.conExt[3].opa.lay[2].T_a_start := tan.conExt[3].opa._T_a_start[2];
  tan.conExt[3].opa._T_b_start[2] := tan.conExt[3].opa.T_a_start+(
    tan.conExt[3].opa.T_b_start-tan.conExt[3].opa.T_a_start)*(tan.conExt[3].opa.lay[1].R
    +tan.conExt[3].opa.lay[2].R)/tan.conExt[3].opa.R;
  tan.conExt[3].opa.lay[2].T_b_start := tan.conExt[3].opa._T_b_start[2];
  tan.conExt[3].opa.lay[2].C := tan.conExt[3].opa.lay[2].A*tan.conExt[3].opa.lay[2].material.x
    *tan.conExt[3].opa.lay[2].material.d*tan.conExt[3].opa.lay[2].material.c/
    tan.conExt[3].opa.lay[2].material.nSta;
  tan.conExt[3].opa.lay[2].UAnSta := tan.conExt[3].opa.lay[2].UA*
    tan.conExt[3].opa.lay[2].nSta;
  tan.conExt[3].opa.lay[2].UAnSta2 := 2*tan.conExt[3].opa.lay[2].UAnSta;
  tan.conExt[4].opa.lay[1].UA := 1/tan.conExt[4].opa.lay[1].R;
  tan.conExt[4].opa.lay[1].U := tan.conExt[4].opa.lay[1].UA/tan.conExt[4].opa.lay[1].A;
  tan.conExt[4].opa._T_a_start[1] := tan.conExt[4].opa.T_b_start+(
    tan.conExt[4].opa.T_a_start-tan.conExt[4].opa.T_b_start)*(tan.conExt[4].opa.lay[1].R
    +tan.conExt[4].opa.lay[2].R)/tan.conExt[4].opa.R;
  tan.conExt[4].opa.lay[1].T_a_start := tan.conExt[4].opa._T_a_start[1];
  tan.conExt[4].opa._T_b_start[1] := tan.conExt[4].opa.T_a_start+(
    tan.conExt[4].opa.T_b_start-tan.conExt[4].opa.T_a_start)*tan.conExt[4].opa.lay[1].R
    /tan.conExt[4].opa.R;
  tan.conExt[4].opa.lay[1].T_b_start := tan.conExt[4].opa._T_b_start[1];
  tan.conExt[4].opa.lay[1].C := tan.conExt[4].opa.lay[1].A*tan.conExt[4].opa.lay[1].material.x
    *tan.conExt[4].opa.lay[1].material.d*tan.conExt[4].opa.lay[1].material.c/
    tan.conExt[4].opa.lay[1].material.nSta;
  tan.conExt[4].opa.lay[1].UAnSta := tan.conExt[4].opa.lay[1].UA*
    tan.conExt[4].opa.lay[1].nSta;
  tan.conExt[4].opa.lay[1].UAnSta2 := 2*tan.conExt[4].opa.lay[1].UAnSta;
  tan.conExt[4].opa.lay[2].UA := 1/tan.conExt[4].opa.lay[2].R;
  tan.conExt[4].opa.lay[2].U := tan.conExt[4].opa.lay[2].UA/tan.conExt[4].opa.lay[2].A;
  tan.conExt[4].opa._T_a_start[2] := tan.conExt[4].opa.T_b_start+(
    tan.conExt[4].opa.T_a_start-tan.conExt[4].opa.T_b_start)*tan.conExt[4].opa.lay[2].R
    /tan.conExt[4].opa.R;
  tan.conExt[4].opa.lay[2].T_a_start := tan.conExt[4].opa._T_a_start[2];
  tan.conExt[4].opa._T_b_start[2] := tan.conExt[4].opa.T_a_start+(
    tan.conExt[4].opa.T_b_start-tan.conExt[4].opa.T_a_start)*(tan.conExt[4].opa.lay[1].R
    +tan.conExt[4].opa.lay[2].R)/tan.conExt[4].opa.R;
  tan.conExt[4].opa.lay[2].T_b_start := tan.conExt[4].opa._T_b_start[2];
  tan.conExt[4].opa.lay[2].C := tan.conExt[4].opa.lay[2].A*tan.conExt[4].opa.lay[2].material.x
    *tan.conExt[4].opa.lay[2].material.d*tan.conExt[4].opa.lay[2].material.c/
    tan.conExt[4].opa.lay[2].material.nSta;
  tan.conExt[4].opa.lay[2].UAnSta := tan.conExt[4].opa.lay[2].UA*
    tan.conExt[4].opa.lay[2].nSta;
  tan.conExt[4].opa.lay[2].UAnSta2 := 2*tan.conExt[4].opa.lay[2].UAnSta;
  tan.conExt[5].opa.lay[1].UA := 1/tan.conExt[5].opa.lay[1].R;
  tan.conExt[5].opa.lay[1].U := tan.conExt[5].opa.lay[1].UA/tan.conExt[5].opa.lay[1].A;
  tan.conExt[5].opa._T_a_start[1] := tan.conExt[5].opa.T_b_start+(
    tan.conExt[5].opa.T_a_start-tan.conExt[5].opa.T_b_start)*(tan.conExt[5].opa.lay[1].R
    +tan.conExt[5].opa.lay[2].R)/tan.conExt[5].opa.R;
  tan.conExt[5].opa.lay[1].T_a_start := tan.conExt[5].opa._T_a_start[1];
  tan.conExt[5].opa._T_b_start[1] := tan.conExt[5].opa.T_a_start+(
    tan.conExt[5].opa.T_b_start-tan.conExt[5].opa.T_a_start)*tan.conExt[5].opa.lay[1].R
    /tan.conExt[5].opa.R;
  tan.conExt[5].opa.lay[1].T_b_start := tan.conExt[5].opa._T_b_start[1];
  tan.conExt[5].opa.lay[1].C := tan.conExt[5].opa.lay[1].A*tan.conExt[5].opa.lay[1].material.x
    *tan.conExt[5].opa.lay[1].material.d*tan.conExt[5].opa.lay[1].material.c/
    tan.conExt[5].opa.lay[1].material.nSta;
  tan.conExt[5].opa.lay[1].UAnSta := tan.conExt[5].opa.lay[1].UA*
    tan.conExt[5].opa.lay[1].nSta;
  tan.conExt[5].opa.lay[1].UAnSta2 := 2*tan.conExt[5].opa.lay[1].UAnSta;
  tan.conExt[5].opa.lay[2].UA := 1/tan.conExt[5].opa.lay[2].R;
  tan.conExt[5].opa.lay[2].U := tan.conExt[5].opa.lay[2].UA/tan.conExt[5].opa.lay[2].A;
  tan.conExt[5].opa._T_a_start[2] := tan.conExt[5].opa.T_b_start+(
    tan.conExt[5].opa.T_a_start-tan.conExt[5].opa.T_b_start)*tan.conExt[5].opa.lay[2].R
    /tan.conExt[5].opa.R;
  tan.conExt[5].opa.lay[2].T_a_start := tan.conExt[5].opa._T_a_start[2];
  tan.conExt[5].opa._T_b_start[2] := tan.conExt[5].opa.T_a_start+(
    tan.conExt[5].opa.T_b_start-tan.conExt[5].opa.T_a_start)*(tan.conExt[5].opa.lay[1].R
    +tan.conExt[5].opa.lay[2].R)/tan.conExt[5].opa.R;
  tan.conExt[5].opa.lay[2].T_b_start := tan.conExt[5].opa._T_b_start[2];
  tan.conExt[5].opa.lay[2].C := tan.conExt[5].opa.lay[2].A*tan.conExt[5].opa.lay[2].material.x
    *tan.conExt[5].opa.lay[2].material.d*tan.conExt[5].opa.lay[2].material.c/
    tan.conExt[5].opa.lay[2].material.nSta;
  tan.conExt[5].opa.lay[2].UAnSta := tan.conExt[5].opa.lay[2].UA*
    tan.conExt[5].opa.lay[2].nSta;
  tan.conExt[5].opa.lay[2].UAnSta2 := 2*tan.conExt[5].opa.lay[2].UAnSta;
  tan.conExt[6].opa.lay[1].UA := 1/tan.conExt[6].opa.lay[1].R;
  tan.conExt[6].opa.lay[1].U := tan.conExt[6].opa.lay[1].UA/tan.conExt[6].opa.lay[1].A;
  tan.conExt[6].opa._T_a_start[1] := tan.conExt[6].opa.T_b_start+(
    tan.conExt[6].opa.T_a_start-tan.conExt[6].opa.T_b_start)*(tan.conExt[6].opa.lay[1].R
    +tan.conExt[6].opa.lay[2].R)/tan.conExt[6].opa.R;
  tan.conExt[6].opa.lay[1].T_a_start := tan.conExt[6].opa._T_a_start[1];
  tan.conExt[6].opa._T_b_start[1] := tan.conExt[6].opa.T_a_start+(
    tan.conExt[6].opa.T_b_start-tan.conExt[6].opa.T_a_start)*tan.conExt[6].opa.lay[1].R
    /tan.conExt[6].opa.R;
  tan.conExt[6].opa.lay[1].T_b_start := tan.conExt[6].opa._T_b_start[1];
  tan.conExt[6].opa.lay[1].C := tan.conExt[6].opa.lay[1].A*tan.conExt[6].opa.lay[1].material.x
    *tan.conExt[6].opa.lay[1].material.d*tan.conExt[6].opa.lay[1].material.c/
    tan.conExt[6].opa.lay[1].material.nSta;
  tan.conExt[6].opa.lay[1].UAnSta := tan.conExt[6].opa.lay[1].UA*
    tan.conExt[6].opa.lay[1].nSta;
  tan.conExt[6].opa.lay[1].UAnSta2 := 2*tan.conExt[6].opa.lay[1].UAnSta;
  tan.conExt[6].opa.lay[2].UA := 1/tan.conExt[6].opa.lay[2].R;
  tan.conExt[6].opa.lay[2].U := tan.conExt[6].opa.lay[2].UA/tan.conExt[6].opa.lay[2].A;
  tan.conExt[6].opa._T_a_start[2] := tan.conExt[6].opa.T_b_start+(
    tan.conExt[6].opa.T_a_start-tan.conExt[6].opa.T_b_start)*tan.conExt[6].opa.lay[2].R
    /tan.conExt[6].opa.R;
  tan.conExt[6].opa.lay[2].T_a_start := tan.conExt[6].opa._T_a_start[2];
  tan.conExt[6].opa._T_b_start[2] := tan.conExt[6].opa.T_a_start+(
    tan.conExt[6].opa.T_b_start-tan.conExt[6].opa.T_a_start)*(tan.conExt[6].opa.lay[1].R
    +tan.conExt[6].opa.lay[2].R)/tan.conExt[6].opa.R;
  tan.conExt[6].opa.lay[2].T_b_start := tan.conExt[6].opa._T_b_start[2];
  tan.conExt[6].opa.lay[2].C := tan.conExt[6].opa.lay[2].A*tan.conExt[6].opa.lay[2].material.x
    *tan.conExt[6].opa.lay[2].material.d*tan.conExt[6].opa.lay[2].material.c/
    tan.conExt[6].opa.lay[2].material.nSta;
  tan.conExt[6].opa.lay[2].UAnSta := tan.conExt[6].opa.lay[2].UA*
    tan.conExt[6].opa.lay[2].nSta;
  tan.conExt[6].opa.lay[2].UAnSta2 := 2*tan.conExt[6].opa.lay[2].UAnSta;
  tan.conExt[7].opa.lay[1].UA := 1/tan.conExt[7].opa.lay[1].R;
  tan.conExt[7].opa.lay[1].U := tan.conExt[7].opa.lay[1].UA/tan.conExt[7].opa.lay[1].A;
  tan.conExt[7].opa._T_a_start[1] := tan.conExt[7].opa.T_b_start+(
    tan.conExt[7].opa.T_a_start-tan.conExt[7].opa.T_b_start)*(tan.conExt[7].opa.lay[1].R
    +tan.conExt[7].opa.lay[2].R)/tan.conExt[7].opa.R;
  tan.conExt[7].opa.lay[1].T_a_start := tan.conExt[7].opa._T_a_start[1];
  tan.conExt[7].opa._T_b_start[1] := tan.conExt[7].opa.T_a_start+(
    tan.conExt[7].opa.T_b_start-tan.conExt[7].opa.T_a_start)*tan.conExt[7].opa.lay[1].R
    /tan.conExt[7].opa.R;
  tan.conExt[7].opa.lay[1].T_b_start := tan.conExt[7].opa._T_b_start[1];
  tan.conExt[7].opa.lay[1].C := tan.conExt[7].opa.lay[1].A*tan.conExt[7].opa.lay[1].material.x
    *tan.conExt[7].opa.lay[1].material.d*tan.conExt[7].opa.lay[1].material.c/
    tan.conExt[7].opa.lay[1].material.nSta;
  tan.conExt[7].opa.lay[1].UAnSta := tan.conExt[7].opa.lay[1].UA*
    tan.conExt[7].opa.lay[1].nSta;
  tan.conExt[7].opa.lay[1].UAnSta2 := 2*tan.conExt[7].opa.lay[1].UAnSta;
  tan.conExt[7].opa.lay[2].UA := 1/tan.conExt[7].opa.lay[2].R;
  tan.conExt[7].opa.lay[2].U := tan.conExt[7].opa.lay[2].UA/tan.conExt[7].opa.lay[2].A;
  tan.conExt[7].opa._T_a_start[2] := tan.conExt[7].opa.T_b_start+(
    tan.conExt[7].opa.T_a_start-tan.conExt[7].opa.T_b_start)*tan.conExt[7].opa.lay[2].R
    /tan.conExt[7].opa.R;
  tan.conExt[7].opa.lay[2].T_a_start := tan.conExt[7].opa._T_a_start[2];
  tan.conExt[7].opa._T_b_start[2] := tan.conExt[7].opa.T_a_start+(
    tan.conExt[7].opa.T_b_start-tan.conExt[7].opa.T_a_start)*(tan.conExt[7].opa.lay[1].R
    +tan.conExt[7].opa.lay[2].R)/tan.conExt[7].opa.R;
  tan.conExt[7].opa.lay[2].T_b_start := tan.conExt[7].opa._T_b_start[2];
  tan.conExt[7].opa.lay[2].C := tan.conExt[7].opa.lay[2].A*tan.conExt[7].opa.lay[2].material.x
    *tan.conExt[7].opa.lay[2].material.d*tan.conExt[7].opa.lay[2].material.c/
    tan.conExt[7].opa.lay[2].material.nSta;
  tan.conExt[7].opa.lay[2].UAnSta := tan.conExt[7].opa.lay[2].UA*
    tan.conExt[7].opa.lay[2].nSta;
  tan.conExt[7].opa.lay[2].UAnSta2 := 2*tan.conExt[7].opa.lay[2].UAnSta;
  tan.conExt[8].opa.lay[1].UA := 1/tan.conExt[8].opa.lay[1].R;
  tan.conExt[8].opa.lay[1].U := tan.conExt[8].opa.lay[1].UA/tan.conExt[8].opa.lay[1].A;
  tan.conExt[8].opa._T_a_start[1] := tan.conExt[8].opa.T_b_start+(
    tan.conExt[8].opa.T_a_start-tan.conExt[8].opa.T_b_start)*(tan.conExt[8].opa.lay[1].R
    +tan.conExt[8].opa.lay[2].R)/tan.conExt[8].opa.R;
  tan.conExt[8].opa.lay[1].T_a_start := tan.conExt[8].opa._T_a_start[1];
  tan.conExt[8].opa._T_b_start[1] := tan.conExt[8].opa.T_a_start+(
    tan.conExt[8].opa.T_b_start-tan.conExt[8].opa.T_a_start)*tan.conExt[8].opa.lay[1].R
    /tan.conExt[8].opa.R;
  tan.conExt[8].opa.lay[1].T_b_start := tan.conExt[8].opa._T_b_start[1];
  tan.conExt[8].opa.lay[1].C := tan.conExt[8].opa.lay[1].A*tan.conExt[8].opa.lay[1].material.x
    *tan.conExt[8].opa.lay[1].material.d*tan.conExt[8].opa.lay[1].material.c/
    tan.conExt[8].opa.lay[1].material.nSta;
  tan.conExt[8].opa.lay[1].UAnSta := tan.conExt[8].opa.lay[1].UA*
    tan.conExt[8].opa.lay[1].nSta;
  tan.conExt[8].opa.lay[1].UAnSta2 := 2*tan.conExt[8].opa.lay[1].UAnSta;
  tan.conExt[8].opa.lay[2].UA := 1/tan.conExt[8].opa.lay[2].R;
  tan.conExt[8].opa.lay[2].U := tan.conExt[8].opa.lay[2].UA/tan.conExt[8].opa.lay[2].A;
  tan.conExt[8].opa._T_a_start[2] := tan.conExt[8].opa.T_b_start+(
    tan.conExt[8].opa.T_a_start-tan.conExt[8].opa.T_b_start)*tan.conExt[8].opa.lay[2].R
    /tan.conExt[8].opa.R;
  tan.conExt[8].opa.lay[2].T_a_start := tan.conExt[8].opa._T_a_start[2];
  tan.conExt[8].opa._T_b_start[2] := tan.conExt[8].opa.T_a_start+(
    tan.conExt[8].opa.T_b_start-tan.conExt[8].opa.T_a_start)*(tan.conExt[8].opa.lay[1].R
    +tan.conExt[8].opa.lay[2].R)/tan.conExt[8].opa.R;
  tan.conExt[8].opa.lay[2].T_b_start := tan.conExt[8].opa._T_b_start[2];
  tan.conExt[8].opa.lay[2].C := tan.conExt[8].opa.lay[2].A*tan.conExt[8].opa.lay[2].material.x
    *tan.conExt[8].opa.lay[2].material.d*tan.conExt[8].opa.lay[2].material.c/
    tan.conExt[8].opa.lay[2].material.nSta;
  tan.conExt[8].opa.lay[2].UAnSta := tan.conExt[8].opa.lay[2].UA*
    tan.conExt[8].opa.lay[2].nSta;
  tan.conExt[8].opa.lay[2].UAnSta2 := 2*tan.conExt[8].opa.lay[2].UAnSta;
  tan.conExt[9].opa.lay[1].UA := 1/tan.conExt[9].opa.lay[1].R;
  tan.conExt[9].opa.lay[1].U := tan.conExt[9].opa.lay[1].UA/tan.conExt[9].opa.lay[1].A;
  tan.conExt[9].opa._T_a_start[1] := tan.conExt[9].opa.T_b_start+(
    tan.conExt[9].opa.T_a_start-tan.conExt[9].opa.T_b_start)*(tan.conExt[9].opa.lay[1].R
    +tan.conExt[9].opa.lay[2].R)/tan.conExt[9].opa.R;
  tan.conExt[9].opa.lay[1].T_a_start := tan.conExt[9].opa._T_a_start[1];
  tan.conExt[9].opa._T_b_start[1] := tan.conExt[9].opa.T_a_start+(
    tan.conExt[9].opa.T_b_start-tan.conExt[9].opa.T_a_start)*tan.conExt[9].opa.lay[1].R
    /tan.conExt[9].opa.R;
  tan.conExt[9].opa.lay[1].T_b_start := tan.conExt[9].opa._T_b_start[1];
  tan.conExt[9].opa.lay[1].C := tan.conExt[9].opa.lay[1].A*tan.conExt[9].opa.lay[1].material.x
    *tan.conExt[9].opa.lay[1].material.d*tan.conExt[9].opa.lay[1].material.c/
    tan.conExt[9].opa.lay[1].material.nSta;
  tan.conExt[9].opa.lay[1].UAnSta := tan.conExt[9].opa.lay[1].UA*
    tan.conExt[9].opa.lay[1].nSta;
  tan.conExt[9].opa.lay[1].UAnSta2 := 2*tan.conExt[9].opa.lay[1].UAnSta;
  tan.conExt[9].opa.lay[2].UA := 1/tan.conExt[9].opa.lay[2].R;
  tan.conExt[9].opa.lay[2].U := tan.conExt[9].opa.lay[2].UA/tan.conExt[9].opa.lay[2].A;
  tan.conExt[9].opa._T_a_start[2] := tan.conExt[9].opa.T_b_start+(
    tan.conExt[9].opa.T_a_start-tan.conExt[9].opa.T_b_start)*tan.conExt[9].opa.lay[2].R
    /tan.conExt[9].opa.R;
  tan.conExt[9].opa.lay[2].T_a_start := tan.conExt[9].opa._T_a_start[2];
  tan.conExt[9].opa._T_b_start[2] := tan.conExt[9].opa.T_a_start+(
    tan.conExt[9].opa.T_b_start-tan.conExt[9].opa.T_a_start)*(tan.conExt[9].opa.lay[1].R
    +tan.conExt[9].opa.lay[2].R)/tan.conExt[9].opa.R;
  tan.conExt[9].opa.lay[2].T_b_start := tan.conExt[9].opa._T_b_start[2];
  tan.conExt[9].opa.lay[2].C := tan.conExt[9].opa.lay[2].A*tan.conExt[9].opa.lay[2].material.x
    *tan.conExt[9].opa.lay[2].material.d*tan.conExt[9].opa.lay[2].material.c/
    tan.conExt[9].opa.lay[2].material.nSta;
  tan.conExt[9].opa.lay[2].UAnSta := tan.conExt[9].opa.lay[2].UA*
    tan.conExt[9].opa.lay[2].nSta;
  tan.conExt[9].opa.lay[2].UAnSta2 := 2*tan.conExt[9].opa.lay[2].UAnSta;
  tan.conExt[10].opa.lay[1].UA := 1/tan.conExt[10].opa.lay[1].R;
  tan.conExt[10].opa.lay[1].U := tan.conExt[10].opa.lay[1].UA/tan.conExt[10].opa.lay[1].A;
  tan.conExt[10].opa._T_a_start[1] := tan.conExt[10].opa.T_b_start+(
    tan.conExt[10].opa.T_a_start-tan.conExt[10].opa.T_b_start)*(tan.conExt[10].opa.lay[1].R
    +tan.conExt[10].opa.lay[2].R)/tan.conExt[10].opa.R;
  tan.conExt[10].opa.lay[1].T_a_start := tan.conExt[10].opa._T_a_start[1];
  tan.conExt[10].opa._T_b_start[1] := tan.conExt[10].opa.T_a_start+(
    tan.conExt[10].opa.T_b_start-tan.conExt[10].opa.T_a_start)*tan.conExt[10].opa.lay[1].R
    /tan.conExt[10].opa.R;
  tan.conExt[10].opa.lay[1].T_b_start := tan.conExt[10].opa._T_b_start[1];
  tan.conExt[10].opa.lay[1].C := tan.conExt[10].opa.lay[1].A*tan.conExt[10].opa.lay[1].material.x
    *tan.conExt[10].opa.lay[1].material.d*tan.conExt[10].opa.lay[1].material.c/
    tan.conExt[10].opa.lay[1].material.nSta;
  tan.conExt[10].opa.lay[1].UAnSta := tan.conExt[10].opa.lay[1].UA*
    tan.conExt[10].opa.lay[1].nSta;
  tan.conExt[10].opa.lay[1].UAnSta2 := 2*tan.conExt[10].opa.lay[1].UAnSta;
  tan.conExt[10].opa.lay[2].UA := 1/tan.conExt[10].opa.lay[2].R;
  tan.conExt[10].opa.lay[2].U := tan.conExt[10].opa.lay[2].UA/tan.conExt[10].opa.lay[2].A;
  tan.conExt[10].opa._T_a_start[2] := tan.conExt[10].opa.T_b_start+(
    tan.conExt[10].opa.T_a_start-tan.conExt[10].opa.T_b_start)*tan.conExt[10].opa.lay[2].R
    /tan.conExt[10].opa.R;
  tan.conExt[10].opa.lay[2].T_a_start := tan.conExt[10].opa._T_a_start[2];
  tan.conExt[10].opa._T_b_start[2] := tan.conExt[10].opa.T_a_start+(
    tan.conExt[10].opa.T_b_start-tan.conExt[10].opa.T_a_start)*(tan.conExt[10].opa.lay[1].R
    +tan.conExt[10].opa.lay[2].R)/tan.conExt[10].opa.R;
  tan.conExt[10].opa.lay[2].T_b_start := tan.conExt[10].opa._T_b_start[2];
  tan.conExt[10].opa.lay[2].C := tan.conExt[10].opa.lay[2].A*tan.conExt[10].opa.lay[2].material.x
    *tan.conExt[10].opa.lay[2].material.d*tan.conExt[10].opa.lay[2].material.c/
    tan.conExt[10].opa.lay[2].material.nSta;
  tan.conExt[10].opa.lay[2].UAnSta := tan.conExt[10].opa.lay[2].UA*
    tan.conExt[10].opa.lay[2].nSta;
  tan.conExt[10].opa.lay[2].UAnSta2 := 2*tan.conExt[10].opa.lay[2].UAnSta;
  tan.vol[1].dynBal.X_start[1] := tan.vol[1].X_start[1];
  tan.vol[1].dynBal.rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT
    (
    tan.vol[1].dynBal.p_start, 
    tan.vol[1].dynBal.T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[1].dynBal.p_start,
       tan.vol[1].dynBal.T_start, 0));
  tan.vol[2].dynBal.X_start[1] := tan.vol[2].X_start[1];
  tan.vol[2].dynBal.rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT
    (
    tan.vol[2].dynBal.p_start, 
    tan.vol[2].dynBal.T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[2].dynBal.p_start,
       tan.vol[2].dynBal.T_start, 0));
  tan.vol[3].dynBal.X_start[1] := tan.vol[3].X_start[1];
  tan.vol[3].dynBal.rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT
    (
    tan.vol[3].dynBal.p_start, 
    tan.vol[3].dynBal.T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[3].dynBal.p_start,
       tan.vol[3].dynBal.T_start, 0));
  tan.vol[4].dynBal.X_start[1] := tan.vol[4].X_start[1];
  tan.vol[4].dynBal.rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT
    (
    tan.vol[4].dynBal.p_start, 
    tan.vol[4].dynBal.T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[4].dynBal.p_start,
       tan.vol[4].dynBal.T_start, 0));
  tan.vol[5].dynBal.X_start[1] := tan.vol[5].X_start[1];
  tan.vol[5].dynBal.rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT
    (
    tan.vol[5].dynBal.p_start, 
    tan.vol[5].dynBal.T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[5].dynBal.p_start,
       tan.vol[5].dynBal.T_start, 0));
  tan.vol[6].dynBal.X_start[1] := tan.vol[6].X_start[1];
  tan.vol[6].dynBal.rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT
    (
    tan.vol[6].dynBal.p_start, 
    tan.vol[6].dynBal.T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[6].dynBal.p_start,
       tan.vol[6].dynBal.T_start, 0));
  tan.vol[7].dynBal.X_start[1] := tan.vol[7].X_start[1];
  tan.vol[7].dynBal.rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT
    (
    tan.vol[7].dynBal.p_start, 
    tan.vol[7].dynBal.T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[7].dynBal.p_start,
       tan.vol[7].dynBal.T_start, 0));
  tan.vol[8].dynBal.X_start[1] := tan.vol[8].X_start[1];
  tan.vol[8].dynBal.rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT
    (
    tan.vol[8].dynBal.p_start, 
    tan.vol[8].dynBal.T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[8].dynBal.p_start,
       tan.vol[8].dynBal.T_start, 0));
  tan.vol[9].dynBal.X_start[1] := tan.vol[9].X_start[1];
  tan.vol[9].dynBal.rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT
    (
    tan.vol[9].dynBal.p_start, 
    tan.vol[9].dynBal.T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[9].dynBal.p_start,
       tan.vol[9].dynBal.T_start, 0));
  tan.vol[10].dynBal.X_start[1] := tan.vol[10].X_start[1];
  tan.vol[10].dynBal.rho_nominal := Modelica.Media.Water.IF97_Utilities.rho_props_pT
    (
    tan.vol[10].dynBal.p_start, 
    tan.vol[10].dynBal.T_start, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_pT(tan.vol[10].dynBal.p_start,
       tan.vol[10].dynBal.T_start, 0));
  tan.conOpa.opa.lay[1].UA := 1/tan.conOpa.opa.lay[1].R;
  tan.conOpa.opa.lay[1].U := tan.conOpa.opa.lay[1].UA/tan.conOpa.opa.lay[1].A;
  tan.conOpa.opa._T_a_start[1] := tan.conOpa.opa.T_b_start+(tan.conOpa.opa.T_a_start
    -tan.conOpa.opa.T_b_start)*(tan.conOpa.opa.lay[1].R+tan.conOpa.opa.lay[2].R)
    /tan.conOpa.opa.R;
  tan.conOpa.opa.lay[1].T_a_start := tan.conOpa.opa._T_a_start[1];
  tan.conOpa.opa._T_b_start[1] := tan.conOpa.opa.T_a_start+(tan.conOpa.opa.T_b_start
    -tan.conOpa.opa.T_a_start)*tan.conOpa.opa.lay[1].R/tan.conOpa.opa.R;
  tan.conOpa.opa.lay[1].T_b_start := tan.conOpa.opa._T_b_start[1];
  tan.conOpa.opa.lay[1].C := tan.conOpa.opa.lay[1].A*tan.conOpa.opa.lay[1].material.x
    *tan.conOpa.opa.lay[1].material.d*tan.conOpa.opa.lay[1].material.c/
    tan.conOpa.opa.lay[1].material.nSta;
  tan.conOpa.opa.lay[1].UAnSta := tan.conOpa.opa.lay[1].UA*tan.conOpa.opa.lay[1].nSta;
  tan.conOpa.opa.lay[1].UAnSta2 := 2*tan.conOpa.opa.lay[1].UAnSta;
  tan.conOpa.opa.lay[2].UA := 1/tan.conOpa.opa.lay[2].R;
  tan.conOpa.opa.lay[2].U := tan.conOpa.opa.lay[2].UA/tan.conOpa.opa.lay[2].A;
  tan.conOpa.opa._T_a_start[2] := tan.conOpa.opa.T_b_start+(tan.conOpa.opa.T_a_start
    -tan.conOpa.opa.T_b_start)*tan.conOpa.opa.lay[2].R/tan.conOpa.opa.R;
  tan.conOpa.opa.lay[2].T_a_start := tan.conOpa.opa._T_a_start[2];
  tan.conOpa.opa._T_b_start[2] := tan.conOpa.opa.T_a_start+(tan.conOpa.opa.T_b_start
    -tan.conOpa.opa.T_a_start)*(tan.conOpa.opa.lay[1].R+tan.conOpa.opa.lay[2].R)
    /tan.conOpa.opa.R;
  tan.conOpa.opa.lay[2].T_b_start := tan.conOpa.opa._T_b_start[2];
  tan.conOpa.opa.lay[2].C := tan.conOpa.opa.lay[2].A*tan.conOpa.opa.lay[2].material.x
    *tan.conOpa.opa.lay[2].material.d*tan.conOpa.opa.lay[2].material.c/
    tan.conOpa.opa.lay[2].material.nSta;
  tan.conOpa.opa.lay[2].UAnSta := tan.conOpa.opa.lay[2].UA*tan.conOpa.opa.lay[2].nSta;
  tan.conOpa.opa.lay[2].UAnSta2 := 2*tan.conOpa.opa.lay[2].UAnSta;
  tan.conOpa3.opa.lay[1].UA := 1/tan.conOpa3.opa.lay[1].R;
  tan.conOpa3.opa.lay[1].U := tan.conOpa3.opa.lay[1].UA/tan.conOpa3.opa.lay[1].A;
  tan.conOpa3.opa._T_a_start[1] := tan.conOpa3.opa.T_b_start+(tan.conOpa3.opa.T_a_start
    -tan.conOpa3.opa.T_b_start)*tan.conOpa3.opa.lay[1].R/tan.conOpa3.opa.R;
  tan.conOpa3.opa.lay[1].T_a_start := tan.conOpa3.opa._T_a_start[1];
  tan.conOpa3.opa._T_b_start[1] := tan.conOpa3.opa.T_a_start+(tan.conOpa3.opa.T_b_start
    -tan.conOpa3.opa.T_a_start)*tan.conOpa3.opa.lay[1].R/tan.conOpa3.opa.R;
  tan.conOpa3.opa.lay[1].T_b_start := tan.conOpa3.opa._T_b_start[1];
  tan.conOpa3.opa.lay[1].C := tan.conOpa3.opa.lay[1].A*tan.conOpa3.opa.lay[1].material.x
    *tan.conOpa3.opa.lay[1].material.d*tan.conOpa3.opa.lay[1].material.c/
    tan.conOpa3.opa.lay[1].material.nSta;
  tan.conOpa3.opa.lay[1].UAnSta := tan.conOpa3.opa.lay[1].UA*tan.conOpa3.opa.lay[1].nSta;
  tan.conOpa3.opa.lay[1].UAnSta2 := 2*tan.conOpa3.opa.lay[1].UAnSta;
  tan.buoHeaTra.buoBas.m_flow_buo_x.h_cw := tan.h_cw_B_cons;
  tan.buoHeaTra.buoBas.m_flow_buo_x.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph
    (
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  algorithm 
    tan.buoHeaTra.buoBas.m_flow_buo_x.y := tan.buoHeaTra.buoBas.m_flow_buo_x.h_cw
      *tan.buoHeaTra.buoBas.m_flow_buo_x.A/(tan.buoHeaTra.buoBas.m_flow_buo_x.c_p
      *tan.buoHeaTra.buoBas.m_flow_buo_x.c_w);
  tan.buoHeaTra.buoMasIn.mFloOutBas := tan.buoHeaTra.buoBas.m_flow_buo_x.y;
  tan.buoHeaTra.dH_BU.mDotBas := tan.buoHeaTra.buoMasIn.mFloOutBas;
  tan.buoHeaTra.dH_BU.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph(
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  tan.convConBou2.u := tan.gain2[1].k*tan.h_WF_cons;
  burn.T_AD_flame.y := burn.T_AD_flame.add.k1*burn.T_AD_flame.const.k+
    burn.T_AD_flame.add.k2*TDryBul.k;
  burn.cdot_G.add.y := burn.cdot_G.add.k1*burn.T_AD_flame.y+burn.cdot_G.add.k2*
    TDryBul.k;
  tan.buoHeaTra.buoBas.t_H.h := tan.h_cw_B_cons;
  tan.buoHeaTra.buoFlu[1].m_flow_buo_x.h_cw := tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[1].m_flow_buo_x.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph
    (
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  algorithm 
    tan.buoHeaTra.buoFlu[1].m_flow_buo_x.y := tan.buoHeaTra.buoFlu[1].m_flow_buo_x.h_cw
      *tan.buoHeaTra.buoFlu[1].m_flow_buo_x.A/(tan.buoHeaTra.buoFlu[1].m_flow_buo_x.c_p
      *tan.buoHeaTra.buoFlu[1].m_flow_buo_x.c_w);
  tan.buoHeaTra.buoMasIn.mFloOutFlu[1] := tan.buoHeaTra.buoFlu[1].m_flow_buo_x.y;
  tan.buoHeaTra.buoFlu[2].m_flow_buo_x.h_cw := tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[2].m_flow_buo_x.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph
    (
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  algorithm 
    tan.buoHeaTra.buoFlu[2].m_flow_buo_x.y := tan.buoHeaTra.buoFlu[2].m_flow_buo_x.h_cw
      *tan.buoHeaTra.buoFlu[2].m_flow_buo_x.A/(tan.buoHeaTra.buoFlu[2].m_flow_buo_x.c_p
      *tan.buoHeaTra.buoFlu[2].m_flow_buo_x.c_w);
  tan.buoHeaTra.buoMasIn.mFloOutFlu[2] := tan.buoHeaTra.buoFlu[2].m_flow_buo_x.y;
  tan.buoHeaTra.buoFlu[3].m_flow_buo_x.h_cw := tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[3].m_flow_buo_x.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph
    (
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  algorithm 
    tan.buoHeaTra.buoFlu[3].m_flow_buo_x.y := tan.buoHeaTra.buoFlu[3].m_flow_buo_x.h_cw
      *tan.buoHeaTra.buoFlu[3].m_flow_buo_x.A/(tan.buoHeaTra.buoFlu[3].m_flow_buo_x.c_p
      *tan.buoHeaTra.buoFlu[3].m_flow_buo_x.c_w);
  tan.buoHeaTra.buoMasIn.mFloOutFlu[3] := tan.buoHeaTra.buoFlu[3].m_flow_buo_x.y;
  tan.buoHeaTra.buoFlu[4].m_flow_buo_x.h_cw := tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[4].m_flow_buo_x.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph
    (
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  algorithm 
    tan.buoHeaTra.buoFlu[4].m_flow_buo_x.y := tan.buoHeaTra.buoFlu[4].m_flow_buo_x.h_cw
      *tan.buoHeaTra.buoFlu[4].m_flow_buo_x.A/(tan.buoHeaTra.buoFlu[4].m_flow_buo_x.c_p
      *tan.buoHeaTra.buoFlu[4].m_flow_buo_x.c_w);
  tan.buoHeaTra.buoMasIn.mFloOutFlu[4] := tan.buoHeaTra.buoFlu[4].m_flow_buo_x.y;
  tan.buoHeaTra.buoFlu[5].m_flow_buo_x.h_cw := tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[5].m_flow_buo_x.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph
    (
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  algorithm 
    tan.buoHeaTra.buoFlu[5].m_flow_buo_x.y := tan.buoHeaTra.buoFlu[5].m_flow_buo_x.h_cw
      *tan.buoHeaTra.buoFlu[5].m_flow_buo_x.A/(tan.buoHeaTra.buoFlu[5].m_flow_buo_x.c_p
      *tan.buoHeaTra.buoFlu[5].m_flow_buo_x.c_w);
  tan.buoHeaTra.buoMasIn.mFloOutFlu[5] := tan.buoHeaTra.buoFlu[5].m_flow_buo_x.y;
  tan.buoHeaTra.buoFlu[6].m_flow_buo_x.h_cw := tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[6].m_flow_buo_x.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph
    (
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  algorithm 
    tan.buoHeaTra.buoFlu[6].m_flow_buo_x.y := tan.buoHeaTra.buoFlu[6].m_flow_buo_x.h_cw
      *tan.buoHeaTra.buoFlu[6].m_flow_buo_x.A/(tan.buoHeaTra.buoFlu[6].m_flow_buo_x.c_p
      *tan.buoHeaTra.buoFlu[6].m_flow_buo_x.c_w);
  tan.buoHeaTra.buoMasIn.mFloOutFlu[6] := tan.buoHeaTra.buoFlu[6].m_flow_buo_x.y;
  tan.buoHeaTra.buoFlu[7].m_flow_buo_x.h_cw := tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[7].m_flow_buo_x.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph
    (
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  algorithm 
    tan.buoHeaTra.buoFlu[7].m_flow_buo_x.y := tan.buoHeaTra.buoFlu[7].m_flow_buo_x.h_cw
      *tan.buoHeaTra.buoFlu[7].m_flow_buo_x.A/(tan.buoHeaTra.buoFlu[7].m_flow_buo_x.c_p
      *tan.buoHeaTra.buoFlu[7].m_flow_buo_x.c_w);
  tan.buoHeaTra.buoMasIn.mFloOutFlu[7] := tan.buoHeaTra.buoFlu[7].m_flow_buo_x.y;
  tan.buoHeaTra.buoFlu[8].m_flow_buo_x.h_cw := tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[8].m_flow_buo_x.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph
    (
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  algorithm 
    tan.buoHeaTra.buoFlu[8].m_flow_buo_x.y := tan.buoHeaTra.buoFlu[8].m_flow_buo_x.h_cw
      *tan.buoHeaTra.buoFlu[8].m_flow_buo_x.A/(tan.buoHeaTra.buoFlu[8].m_flow_buo_x.c_p
      *tan.buoHeaTra.buoFlu[8].m_flow_buo_x.c_w);
  tan.buoHeaTra.buoMasIn.mFloOutFlu[8] := tan.buoHeaTra.buoFlu[8].m_flow_buo_x.y;
  tan.buoHeaTra.buoFlu[9].m_flow_buo_x.h_cw := tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[9].m_flow_buo_x.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph
    (
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  algorithm 
    tan.buoHeaTra.buoFlu[9].m_flow_buo_x.y := tan.buoHeaTra.buoFlu[9].m_flow_buo_x.h_cw
      *tan.buoHeaTra.buoFlu[9].m_flow_buo_x.A/(tan.buoHeaTra.buoFlu[9].m_flow_buo_x.c_p
      *tan.buoHeaTra.buoFlu[9].m_flow_buo_x.c_w);
  tan.buoHeaTra.buoMasIn.mFloOutFlu[9] := tan.buoHeaTra.buoFlu[9].m_flow_buo_x.y;
  tan.buoHeaTra.buoFlu[10].m_flow_buo_x.h_cw := tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[10].m_flow_buo_x.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph
    (
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  algorithm 
    tan.buoHeaTra.buoFlu[10].m_flow_buo_x.y := tan.buoHeaTra.buoFlu[10].m_flow_buo_x.h_cw
      *tan.buoHeaTra.buoFlu[10].m_flow_buo_x.A/(tan.buoHeaTra.buoFlu[10].m_flow_buo_x.c_p
      *tan.buoHeaTra.buoFlu[10].m_flow_buo_x.c_w);
  tan.buoHeaTra.buoMasIn.mFloOutFlu[10] := tan.buoHeaTra.buoFlu[10].m_flow_buo_x.y;
  burn.fsRadiationExchange4.u := 1/(1.22222222222222+(1+1/(burn.absIR_Fla*
    burn.fv))/burn.absIR_FS);
  TBCBot.port.Q_flow := (-5.6704E-008)*(burn.fsRadiationExchange4.u*
    burn.fsRadiationExchange4.A*(TFloor.k^4-burn.T_AD_flame.y^4));
  tan.buoHeaTra.buoFlu[1].t_H.h := tan.h_WF_cons;
  tan.convConBou1[2].u := tan.gain2[2].k*tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[2].t_H.h := tan.h_WF_cons;
  tan.convConBou1[3].u := tan.gain2[3].k*tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[3].t_H.h := tan.h_WF_cons;
  tan.convConBou1[4].u := tan.gain2[4].k*tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[4].t_H.h := tan.h_WF_cons;
  tan.convConBou1[5].u := tan.gain2[5].k*tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[5].t_H.h := tan.h_WF_cons;
  tan.convConBou1[6].u := tan.gain2[6].k*tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[6].t_H.h := tan.h_WF_cons;
  tan.convConBou1[7].u := tan.gain2[7].k*tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[7].t_H.h := tan.h_WF_cons;
  tan.convConBou1[8].u := tan.gain2[8].k*tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[8].t_H.h := tan.h_WF_cons;
  tan.convConBou1[9].u := tan.gain2[9].k*tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[9].t_H.h := tan.h_WF_cons;
  tan.convConBou1[10].u := tan.gain2[10].k*tan.h_WF_cons;
  tan.buoHeaTra.buoFlu[10].t_H.h := tan.h_WF_cons;
  tan.draHeaTra.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph(
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  tan.buoHeaTra.dH_BU.mDotFlu[1] := tan.buoHeaTra.buoMasIn.mFloOutFlu[1];
  tan.buoHeaTra.dH_BU.mDotFlu[2] := tan.buoHeaTra.buoMasIn.mFloOutFlu[2];
  tan.buoHeaTra.dH_BU.mDotFlu[3] := tan.buoHeaTra.buoMasIn.mFloOutFlu[3];
  tan.buoHeaTra.dH_BU.mDotFlu[4] := tan.buoHeaTra.buoMasIn.mFloOutFlu[4];
  tan.buoHeaTra.dH_BU.mDotFlu[5] := tan.buoHeaTra.buoMasIn.mFloOutFlu[5];
  tan.buoHeaTra.dH_BU.mDotFlu[6] := tan.buoHeaTra.buoMasIn.mFloOutFlu[6];
  tan.buoHeaTra.dH_BU.mDotFlu[7] := tan.buoHeaTra.buoMasIn.mFloOutFlu[7];
  tan.buoHeaTra.dH_BU.mDotFlu[8] := tan.buoHeaTra.buoMasIn.mFloOutFlu[8];
  tan.buoHeaTra.dH_BU.mDotFlu[9] := tan.buoHeaTra.buoMasIn.mFloOutFlu[9];
  tan.buoHeaTra.dH_BU.mDotFlu[10] := tan.buoHeaTra.buoMasIn.mFloOutFlu[10];
  tan.buoHeaTra.qBuo.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph(
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));
  tan.c_p := Modelica.Media.Water.IF97_Utilities.cp_props_ph(
    101325, 
    Modelica.Media.Water.IF97_Utilities.h_props_pT(
      101325, 
      293.15, 
      Modelica.Media.Common.IF97BaseTwoPhase(
        phase = 1, 
        region = 1, 
        p = 101325, 
        T = 293.15, 
        h = 84013.0581525969, 
        R = 461.526, 
        cp = 4184.79409477555, 
        cv = 4157.43685131455, 
        rho = 998.206092467947, 
        s = 296.48264655725, 
        pt = 0.0, 
        pd = 0.0, 
        vt = 2.0698144861508E-007, 
        vp = -4.59071579951415E-013, 
        x = 0.0, 
        dpT = 0.0
      )), 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).p, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).h, Modelica.Media.Water.WaterIF97_ph.setState_pTX_Unique'"19A88B50"'
      (101325, 293.15, {1.0}, 0).phase, 0));

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.vol[10].V*der(tan.vol[10].dynBal.medium.d) = 0.0;
      */
      der(tan.vol[10].dynBal.medium.d) := 0.0;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.vol[8].V*der(tan.vol[8].dynBal.medium.d) = 0.0;
      */
      der(tan.vol[8].dynBal.medium.d) := 0.0;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.vol[9].V*der(tan.vol[9].dynBal.medium.d) = 0.0;
      */
      der(tan.vol[9].dynBal.medium.d) := 0.0;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.vol[6].V*der(tan.vol[6].dynBal.medium.d) = 0.0;
      */
      der(tan.vol[6].dynBal.medium.d) := 0.0;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.vol[5].V*der(tan.vol[5].dynBal.medium.d) = 0.0;
      */
      der(tan.vol[5].dynBal.medium.d) := 0.0;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.vol[4].V*der(tan.vol[4].dynBal.medium.d) = 0.0;
      */
      der(tan.vol[4].dynBal.medium.d) := 0.0;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.vol[3].V*der(tan.vol[3].dynBal.medium.d) = 0.0;
      */
      der(tan.vol[3].dynBal.medium.d) := 0.0;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.vol[2].V*der(tan.vol[2].dynBal.medium.d) = 0.0;
      */
      der(tan.vol[2].dynBal.medium.d) := 0.0;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.vol[1].V*der(tan.vol[1].dynBal.medium.d) = 0.0;
      */
      der(tan.vol[1].dynBal.medium.d) := 0.0;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.vol[7].V*der(tan.vol[7].dynBal.medium.d) = 0.0;
      */
      der(tan.vol[7].dynBal.medium.d) := 0.0;

  // End of linear system of equations

  tan.vol[10].dynBal.medium.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    101325.0, 
    293.15, 
    Modelica.Media.Common.IF97BaseTwoPhase(
      phase = 1, 
      region = 1, 
      p = 101325.0, 
      T = 293.15, 
      h = 84013.0581525969, 
      R = 461.526, 
      cp = 4184.79409477555, 
      cv = 4157.43685131455, 
      rho = 998.206092467947, 
      s = 296.48264655725, 
      pt = 0.0, 
      pd = 0.0, 
      vt = 2.0698144861508E-007, 
      vp = -4.59071579951415E-013, 
      x = 0.0, 
      dpT = 0.0
    ));
  tan.conExt[10].opa.lay[2].T[1] := tan.conExt[10].opa.lay[2].T_a_start+(
    tan.conExt[10].opa.lay[2].T_b_start-tan.conExt[10].opa.lay[2].T_a_start)*
    tan.conExt[10].opa.lay[2].UA/tan.conExt[10].opa.lay[2].UAnSta2;
  tan.conExt[10].opa.lay[1].T[1] := tan.conExt[10].opa.lay[1].T_a_start+(
    tan.conExt[10].opa.lay[1].T_b_start-tan.conExt[10].opa.lay[1].T_a_start)*
    tan.conExt[10].opa.lay[1].UA/tan.conExt[10].opa.lay[1].UAnSta2;
  tan.vol[8].dynBal.medium.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    101325.0, 
    293.15, 
    Modelica.Media.Common.IF97BaseTwoPhase(
      phase = 1, 
      region = 1, 
      p = 101325.0, 
      T = 293.15, 
      h = 84013.0581525969, 
      R = 461.526, 
      cp = 4184.79409477555, 
      cv = 4157.43685131455, 
      rho = 998.206092467947, 
      s = 296.48264655725, 
      pt = 0.0, 
      pd = 0.0, 
      vt = 2.0698144861508E-007, 
      vp = -4.59071579951415E-013, 
      x = 0.0, 
      dpT = 0.0
    ));
  tan.conExt[8].opa.lay[2].T[1] := tan.conExt[8].opa.lay[2].T_a_start+(
    tan.conExt[8].opa.lay[2].T_b_start-tan.conExt[8].opa.lay[2].T_a_start)*
    tan.conExt[8].opa.lay[2].UA/tan.conExt[8].opa.lay[2].UAnSta2;
  tan.conExt[8].opa.lay[1].T[1] := tan.conExt[8].opa.lay[1].T_a_start+(
    tan.conExt[8].opa.lay[1].T_b_start-tan.conExt[8].opa.lay[1].T_a_start)*
    tan.conExt[8].opa.lay[1].UA/tan.conExt[8].opa.lay[1].UAnSta2;
  tan.vol[9].dynBal.medium.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    101325.0, 
    293.15, 
    Modelica.Media.Common.IF97BaseTwoPhase(
      phase = 1, 
      region = 1, 
      p = 101325.0, 
      T = 293.15, 
      h = 84013.0581525969, 
      R = 461.526, 
      cp = 4184.79409477555, 
      cv = 4157.43685131455, 
      rho = 998.206092467947, 
      s = 296.48264655725, 
      pt = 0.0, 
      pd = 0.0, 
      vt = 2.0698144861508E-007, 
      vp = -4.59071579951415E-013, 
      x = 0.0, 
      dpT = 0.0
    ));
  tan.conExt[9].opa.lay[2].T[1] := tan.conExt[9].opa.lay[2].T_a_start+(
    tan.conExt[9].opa.lay[2].T_b_start-tan.conExt[9].opa.lay[2].T_a_start)*
    tan.conExt[9].opa.lay[2].UA/tan.conExt[9].opa.lay[2].UAnSta2;
  tan.conExt[9].opa.lay[1].T[1] := tan.conExt[9].opa.lay[1].T_a_start+(
    tan.conExt[9].opa.lay[1].T_b_start-tan.conExt[9].opa.lay[1].T_a_start)*
    tan.conExt[9].opa.lay[1].UA/tan.conExt[9].opa.lay[1].UAnSta2;
  tan.vol[6].dynBal.medium.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    101325.0, 
    293.15, 
    Modelica.Media.Common.IF97BaseTwoPhase(
      phase = 1, 
      region = 1, 
      p = 101325.0, 
      T = 293.15, 
      h = 84013.0581525969, 
      R = 461.526, 
      cp = 4184.79409477555, 
      cv = 4157.43685131455, 
      rho = 998.206092467947, 
      s = 296.48264655725, 
      pt = 0.0, 
      pd = 0.0, 
      vt = 2.0698144861508E-007, 
      vp = -4.59071579951415E-013, 
      x = 0.0, 
      dpT = 0.0
    ));
  tan.conExt[6].opa.lay[2].T[1] := tan.conExt[6].opa.lay[2].T_a_start+(
    tan.conExt[6].opa.lay[2].T_b_start-tan.conExt[6].opa.lay[2].T_a_start)*
    tan.conExt[6].opa.lay[2].UA/tan.conExt[6].opa.lay[2].UAnSta2;
  tan.conExt[6].opa.lay[1].T[1] := tan.conExt[6].opa.lay[1].T_a_start+(
    tan.conExt[6].opa.lay[1].T_b_start-tan.conExt[6].opa.lay[1].T_a_start)*
    tan.conExt[6].opa.lay[1].UA/tan.conExt[6].opa.lay[1].UAnSta2;
  tan.vol[5].dynBal.medium.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    101325.0, 
    293.15, 
    Modelica.Media.Common.IF97BaseTwoPhase(
      phase = 1, 
      region = 1, 
      p = 101325.0, 
      T = 293.15, 
      h = 84013.0581525969, 
      R = 461.526, 
      cp = 4184.79409477555, 
      cv = 4157.43685131455, 
      rho = 998.206092467947, 
      s = 296.48264655725, 
      pt = 0.0, 
      pd = 0.0, 
      vt = 2.0698144861508E-007, 
      vp = -4.59071579951415E-013, 
      x = 0.0, 
      dpT = 0.0
    ));
  tan.conExt[5].opa.lay[2].T[1] := tan.conExt[5].opa.lay[2].T_a_start+(
    tan.conExt[5].opa.lay[2].T_b_start-tan.conExt[5].opa.lay[2].T_a_start)*
    tan.conExt[5].opa.lay[2].UA/tan.conExt[5].opa.lay[2].UAnSta2;
  tan.conExt[5].opa.lay[1].T[1] := tan.conExt[5].opa.lay[1].T_a_start+(
    tan.conExt[5].opa.lay[1].T_b_start-tan.conExt[5].opa.lay[1].T_a_start)*
    tan.conExt[5].opa.lay[1].UA/tan.conExt[5].opa.lay[1].UAnSta2;
  tan.vol[4].dynBal.medium.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    101325.0, 
    293.15, 
    Modelica.Media.Common.IF97BaseTwoPhase(
      phase = 1, 
      region = 1, 
      p = 101325.0, 
      T = 293.15, 
      h = 84013.0581525969, 
      R = 461.526, 
      cp = 4184.79409477555, 
      cv = 4157.43685131455, 
      rho = 998.206092467947, 
      s = 296.48264655725, 
      pt = 0.0, 
      pd = 0.0, 
      vt = 2.0698144861508E-007, 
      vp = -4.59071579951415E-013, 
      x = 0.0, 
      dpT = 0.0
    ));
  tan.conExt[4].opa.lay[2].T[1] := tan.conExt[4].opa.lay[2].T_a_start+(
    tan.conExt[4].opa.lay[2].T_b_start-tan.conExt[4].opa.lay[2].T_a_start)*
    tan.conExt[4].opa.lay[2].UA/tan.conExt[4].opa.lay[2].UAnSta2;
  tan.conExt[4].opa.lay[1].T[1] := tan.conExt[4].opa.lay[1].T_a_start+(
    tan.conExt[4].opa.lay[1].T_b_start-tan.conExt[4].opa.lay[1].T_a_start)*
    tan.conExt[4].opa.lay[1].UA/tan.conExt[4].opa.lay[1].UAnSta2;
  tan.vol[3].dynBal.medium.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    101325.0, 
    293.15, 
    Modelica.Media.Common.IF97BaseTwoPhase(
      phase = 1, 
      region = 1, 
      p = 101325.0, 
      T = 293.15, 
      h = 84013.0581525969, 
      R = 461.526, 
      cp = 4184.79409477555, 
      cv = 4157.43685131455, 
      rho = 998.206092467947, 
      s = 296.48264655725, 
      pt = 0.0, 
      pd = 0.0, 
      vt = 2.0698144861508E-007, 
      vp = -4.59071579951415E-013, 
      x = 0.0, 
      dpT = 0.0
    ));
  tan.conExt[3].opa.lay[2].T[1] := tan.conExt[3].opa.lay[2].T_a_start+(
    tan.conExt[3].opa.lay[2].T_b_start-tan.conExt[3].opa.lay[2].T_a_start)*
    tan.conExt[3].opa.lay[2].UA/tan.conExt[3].opa.lay[2].UAnSta2;
  tan.conExt[3].opa.lay[1].T[1] := tan.conExt[3].opa.lay[1].T_a_start+(
    tan.conExt[3].opa.lay[1].T_b_start-tan.conExt[3].opa.lay[1].T_a_start)*
    tan.conExt[3].opa.lay[1].UA/tan.conExt[3].opa.lay[1].UAnSta2;
  tan.vol[2].dynBal.medium.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    101325.0, 
    293.15, 
    Modelica.Media.Common.IF97BaseTwoPhase(
      phase = 1, 
      region = 1, 
      p = 101325.0, 
      T = 293.15, 
      h = 84013.0581525969, 
      R = 461.526, 
      cp = 4184.79409477555, 
      cv = 4157.43685131455, 
      rho = 998.206092467947, 
      s = 296.48264655725, 
      pt = 0.0, 
      pd = 0.0, 
      vt = 2.0698144861508E-007, 
      vp = -4.59071579951415E-013, 
      x = 0.0, 
      dpT = 0.0
    ));
  tan.conExt[2].opa.lay[2].T[1] := tan.conExt[2].opa.lay[2].T_a_start+(
    tan.conExt[2].opa.lay[2].T_b_start-tan.conExt[2].opa.lay[2].T_a_start)*
    tan.conExt[2].opa.lay[2].UA/tan.conExt[2].opa.lay[2].UAnSta2;
  tan.conExt[2].opa.lay[1].T[1] := tan.conExt[2].opa.lay[1].T_a_start+(
    tan.conExt[2].opa.lay[1].T_b_start-tan.conExt[2].opa.lay[1].T_a_start)*
    tan.conExt[2].opa.lay[1].UA/tan.conExt[2].opa.lay[1].UAnSta2;
  tan.vol[1].dynBal.medium.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    101325.0, 
    293.15, 
    Modelica.Media.Common.IF97BaseTwoPhase(
      phase = 1, 
      region = 1, 
      p = 101325.0, 
      T = 293.15, 
      h = 84013.0581525969, 
      R = 461.526, 
      cp = 4184.79409477555, 
      cv = 4157.43685131455, 
      rho = 998.206092467947, 
      s = 296.48264655725, 
      pt = 0.0, 
      pd = 0.0, 
      vt = 2.0698144861508E-007, 
      vp = -4.59071579951415E-013, 
      x = 0.0, 
      dpT = 0.0
    ));
  tan.conExt[1].opa.lay[2].T[1] := tan.conExt[1].opa.lay[2].T_a_start+(
    tan.conExt[1].opa.lay[2].T_b_start-tan.conExt[1].opa.lay[2].T_a_start)*
    tan.conExt[1].opa.lay[2].UA/tan.conExt[1].opa.lay[2].UAnSta2;
  tan.conExt[1].opa.lay[1].T[1] := tan.conExt[1].opa.lay[1].T_a_start+(
    tan.conExt[1].opa.lay[1].T_b_start-tan.conExt[1].opa.lay[1].T_a_start)*
    tan.conExt[1].opa.lay[1].UA/tan.conExt[1].opa.lay[1].UAnSta2;
  tan.conOpa.opa.lay[2].T[1] := tan.conOpa.opa.lay[2].T_a_start+(
    tan.conOpa.opa.lay[2].T_b_start-tan.conOpa.opa.lay[2].T_a_start)*
    tan.conOpa.opa.lay[2].UA/tan.conOpa.opa.lay[2].UAnSta2;
  tan.conOpa.opa.lay[1].T[1] := tan.conOpa.opa.lay[1].T_a_start+(
    tan.conOpa.opa.lay[1].T_b_start-tan.conOpa.opa.lay[1].T_a_start)*
    tan.conOpa.opa.lay[1].UA/tan.conOpa.opa.lay[1].UAnSta2;
  tan.vol[7].dynBal.medium.h := Modelica.Media.Water.IF97_Utilities.h_props_pT(
    101325.0, 
    293.15, 
    Modelica.Media.Common.IF97BaseTwoPhase(
      phase = 1, 
      region = 1, 
      p = 101325.0, 
      T = 293.15, 
      h = 84013.0581525969, 
      R = 461.526, 
      cp = 4184.79409477555, 
      cv = 4157.43685131455, 
      rho = 998.206092467947, 
      s = 296.48264655725, 
      pt = 0.0, 
      pd = 0.0, 
      vt = 2.0698144861508E-007, 
      vp = -4.59071579951415E-013, 
      x = 0.0, 
      dpT = 0.0
    ));
  tan.conExt[7].opa.lay[2].T[1] := tan.conExt[7].opa.lay[2].T_a_start+(
    tan.conExt[7].opa.lay[2].T_b_start-tan.conExt[7].opa.lay[2].T_a_start)*
    tan.conExt[7].opa.lay[2].UA/tan.conExt[7].opa.lay[2].UAnSta2;
  tan.conExt[7].opa.lay[1].T[1] := tan.conExt[7].opa.lay[1].T_a_start+(
    tan.conExt[7].opa.lay[1].T_b_start-tan.conExt[7].opa.lay[1].T_a_start)*
    tan.conExt[7].opa.lay[1].UA/tan.conExt[7].opa.lay[1].UAnSta2;
  tan.flueWall[10].opa.lay[1].T[1] := tan.flueWall[10].opa.lay[1].T_a_start+(
    tan.flueWall[10].opa.lay[1].T_b_start-tan.flueWall[10].opa.lay[1].T_a_start)
    *tan.flueWall[10].opa.lay[1].UA/tan.flueWall[10].opa.lay[1].UAnSta2;
  tan.flueWall[9].opa.lay[1].T[1] := tan.flueWall[9].opa.lay[1].T_a_start+(
    tan.flueWall[9].opa.lay[1].T_b_start-tan.flueWall[9].opa.lay[1].T_a_start)*
    tan.flueWall[9].opa.lay[1].UA/tan.flueWall[9].opa.lay[1].UAnSta2;
  tan.flueWall[8].opa.lay[1].T[1] := tan.flueWall[8].opa.lay[1].T_a_start+(
    tan.flueWall[8].opa.lay[1].T_b_start-tan.flueWall[8].opa.lay[1].T_a_start)*
    tan.flueWall[8].opa.lay[1].UA/tan.flueWall[8].opa.lay[1].UAnSta2;
  tan.flueWall[7].opa.lay[1].T[1] := tan.flueWall[7].opa.lay[1].T_a_start+(
    tan.flueWall[7].opa.lay[1].T_b_start-tan.flueWall[7].opa.lay[1].T_a_start)*
    tan.flueWall[7].opa.lay[1].UA/tan.flueWall[7].opa.lay[1].UAnSta2;
  tan.flueWall[6].opa.lay[1].T[1] := tan.flueWall[6].opa.lay[1].T_a_start+(
    tan.flueWall[6].opa.lay[1].T_b_start-tan.flueWall[6].opa.lay[1].T_a_start)*
    tan.flueWall[6].opa.lay[1].UA/tan.flueWall[6].opa.lay[1].UAnSta2;
  tan.flueWall[5].opa.lay[1].T[1] := tan.flueWall[5].opa.lay[1].T_a_start+(
    tan.flueWall[5].opa.lay[1].T_b_start-tan.flueWall[5].opa.lay[1].T_a_start)*
    tan.flueWall[5].opa.lay[1].UA/tan.flueWall[5].opa.lay[1].UAnSta2;
  tan.flueWall[4].opa.lay[1].T[1] := tan.flueWall[4].opa.lay[1].T_a_start+(
    tan.flueWall[4].opa.lay[1].T_b_start-tan.flueWall[4].opa.lay[1].T_a_start)*
    tan.flueWall[4].opa.lay[1].UA/tan.flueWall[4].opa.lay[1].UAnSta2;
  tan.flueWall[3].opa.lay[1].T[1] := tan.flueWall[3].opa.lay[1].T_a_start+(
    tan.flueWall[3].opa.lay[1].T_b_start-tan.flueWall[3].opa.lay[1].T_a_start)*
    tan.flueWall[3].opa.lay[1].UA/tan.flueWall[3].opa.lay[1].UAnSta2;
  tan.flueWall[2].opa.lay[1].T[1] := tan.flueWall[2].opa.lay[1].T_a_start+(
    tan.flueWall[2].opa.lay[1].T_b_start-tan.flueWall[2].opa.lay[1].T_a_start)*
    tan.flueWall[2].opa.lay[1].UA/tan.flueWall[2].opa.lay[1].UAnSta2;
  tan.flueWall[1].opa.lay[1].T[1] := tan.flueWall[1].opa.lay[1].T_a_start+(
    tan.flueWall[1].opa.lay[1].T_b_start-tan.flueWall[1].opa.lay[1].T_a_start)*
    tan.flueWall[1].opa.lay[1].UA/tan.flueWall[1].opa.lay[1].UAnSta2;
  tan.conOpa3.opa.lay[1].T[1] := tan.conOpa3.opa.lay[1].T_a_start+(
    tan.conOpa3.opa.lay[1].T_b_start-tan.conOpa3.opa.lay[1].T_a_start)*
    tan.conOpa3.opa.lay[1].UA/tan.conOpa3.opa.lay[1].UAnSta2;
  onOffController.y_.start := onOffController.pre_y_start;

  // Nonlinear system of equations
  // Nonlinear system of equations number = 1.
    // It depends on the following parameters: 
    //   TDryBul.k
    //   TRadMea.k
    //   tan.conExt[10].opa.lay[2].UAnSta2
    //   tan.convConBou9[10].A
    //   tan.fsRadiationExchange1[10].A
    // It depends on the following timevarying variables: 
    //   tan.conExt[10].opa.lay[2].T[1]
    // Unknowns[1]: 
    //   tan.convConBou9[10].dT(start = 0)
  algorithm // Torn part
    tan.conExt[10].opa_b.T := tan.convConBou9[10].dT+TDryBul.k;
    tan.fsRadiationExchange1[10].port.Q_flow := 5.6704E-008*(TRadMea.k*
      tan.fsRadiationExchange1[10].A*(tan.conExt[10].opa_b.T^4-0.6561));
    tan.convConBou9[10].q_flow := homotopy(noEvent(smooth(1, (if noEvent(
      tan.convConBou9[10].dT > 0) then 1.3*tan.convConBou9[10].dT^1.3333 else (
      -1.3)*( -tan.convConBou9[10].dT)^1.3333))), 1.63785952183583*
      tan.convConBou9[10].dT);
    tan.convConBou9[10].Q_flow := tan.convConBou9[10].A*tan.convConBou9[10].q_flow;
    tan.conExt[10].opa_b.Q_flow := (tan.conExt[10].opa_b.T-tan.conExt[10].opa.lay[2].T[1])
      *tan.conExt[10].opa.lay[2].UAnSta2;

  equation // Residual equations
    0 = tan.conExt[10].opa_b.Q_flow+tan.convConBou9[10].Q_flow+tan.fsRadiationExchange1[10].port.Q_flow;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations



  // Nonlinear system of equations
  // Nonlinear system of equations number = 2.
    // It depends on the following parameters: 
    //   TDryBul.k
    //   TRadMea.k
    //   tan.conExt[8].opa.lay[2].UAnSta2
    //   tan.convConBou9[8].A
    //   tan.fsRadiationExchange1[8].A
    // It depends on the following timevarying variables: 
    //   tan.conExt[8].opa.lay[2].T[1]
    // Unknowns[1]: 
    //   tan.convConBou9[8].dT(start = 0)
  algorithm // Torn part
    tan.conExt[8].opa_b.T := tan.convConBou9[8].dT+TDryBul.k;
    tan.fsRadiationExchange1[8].port.Q_flow := 5.6704E-008*(TRadMea.k*
      tan.fsRadiationExchange1[8].A*(tan.conExt[8].opa_b.T^4-0.6561));
    tan.convConBou9[8].q_flow := homotopy(noEvent(smooth(1, (if noEvent(
      tan.convConBou9[8].dT > 0) then 1.3*tan.convConBou9[8].dT^1.3333 else (
      -1.3)*( -tan.convConBou9[8].dT)^1.3333))), 1.63785952183583*
      tan.convConBou9[8].dT);
    tan.convConBou9[8].Q_flow := tan.convConBou9[8].A*tan.convConBou9[8].q_flow;
    tan.conExt[8].opa_b.Q_flow := (tan.conExt[8].opa_b.T-tan.conExt[8].opa.lay[2].T[1])
      *tan.conExt[8].opa.lay[2].UAnSta2;

  equation // Residual equations
    0 = tan.conExt[8].opa_b.Q_flow+tan.convConBou9[8].Q_flow+tan.fsRadiationExchange1[8].port.Q_flow;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations



  // Nonlinear system of equations
  // Nonlinear system of equations number = 3.
    // It depends on the following parameters: 
    //   TDryBul.k
    //   TRadMea.k
    //   tan.conExt[9].opa.lay[2].UAnSta2
    //   tan.convConBou9[9].A
    //   tan.fsRadiationExchange1[9].A
    // It depends on the following timevarying variables: 
    //   tan.conExt[9].opa.lay[2].T[1]
    // Unknowns[1]: 
    //   tan.convConBou9[9].dT(start = 0)
  algorithm // Torn part
    tan.conExt[9].opa_b.T := tan.convConBou9[9].dT+TDryBul.k;
    tan.fsRadiationExchange1[9].port.Q_flow := 5.6704E-008*(TRadMea.k*
      tan.fsRadiationExchange1[9].A*(tan.conExt[9].opa_b.T^4-0.6561));
    tan.convConBou9[9].q_flow := homotopy(noEvent(smooth(1, (if noEvent(
      tan.convConBou9[9].dT > 0) then 1.3*tan.convConBou9[9].dT^1.3333 else (
      -1.3)*( -tan.convConBou9[9].dT)^1.3333))), 1.63785952183583*
      tan.convConBou9[9].dT);
    tan.convConBou9[9].Q_flow := tan.convConBou9[9].A*tan.convConBou9[9].q_flow;
    tan.conExt[9].opa_b.Q_flow := (tan.conExt[9].opa_b.T-tan.conExt[9].opa.lay[2].T[1])
      *tan.conExt[9].opa.lay[2].UAnSta2;

  equation // Residual equations
    0 = tan.conExt[9].opa_b.Q_flow+tan.convConBou9[9].Q_flow+tan.fsRadiationExchange1[9].port.Q_flow;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations



  // Nonlinear system of equations
  // Nonlinear system of equations number = 4.
    // It depends on the following parameters: 
    //   TDryBul.k
    //   TRadMea.k
    //   tan.conExt[6].opa.lay[2].UAnSta2
    //   tan.convConBou9[6].A
    //   tan.fsRadiationExchange1[6].A
    // It depends on the following timevarying variables: 
    //   tan.conExt[6].opa.lay[2].T[1]
    // Unknowns[1]: 
    //   tan.convConBou9[6].dT(start = 0)
  algorithm // Torn part
    tan.conExt[6].opa_b.T := tan.convConBou9[6].dT+TDryBul.k;
    tan.fsRadiationExchange1[6].port.Q_flow := 5.6704E-008*(TRadMea.k*
      tan.fsRadiationExchange1[6].A*(tan.conExt[6].opa_b.T^4-0.6561));
    tan.convConBou9[6].q_flow := homotopy(noEvent(smooth(1, (if noEvent(
      tan.convConBou9[6].dT > 0) then 1.3*tan.convConBou9[6].dT^1.3333 else (
      -1.3)*( -tan.convConBou9[6].dT)^1.3333))), 1.63785952183583*
      tan.convConBou9[6].dT);
    tan.convConBou9[6].Q_flow := tan.convConBou9[6].A*tan.convConBou9[6].q_flow;
    tan.conExt[6].opa_b.Q_flow := (tan.conExt[6].opa_b.T-tan.conExt[6].opa.lay[2].T[1])
      *tan.conExt[6].opa.lay[2].UAnSta2;

  equation // Residual equations
    0 = tan.conExt[6].opa_b.Q_flow+tan.convConBou9[6].Q_flow+tan.fsRadiationExchange1[6].port.Q_flow;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations



  // Nonlinear system of equations
  // Nonlinear system of equations number = 5.
    // It depends on the following parameters: 
    //   TDryBul.k
    //   TRadMea.k
    //   tan.conExt[5].opa.lay[2].UAnSta2
    //   tan.convConBou9[5].A
    //   tan.fsRadiationExchange1[5].A
    // It depends on the following timevarying variables: 
    //   tan.conExt[5].opa.lay[2].T[1]
    // Unknowns[1]: 
    //   tan.convConBou9[5].dT(start = 0)
  algorithm // Torn part
    tan.conExt[5].opa_b.T := tan.convConBou9[5].dT+TDryBul.k;
    tan.fsRadiationExchange1[5].port.Q_flow := 5.6704E-008*(TRadMea.k*
      tan.fsRadiationExchange1[5].A*(tan.conExt[5].opa_b.T^4-0.6561));
    tan.convConBou9[5].q_flow := homotopy(noEvent(smooth(1, (if noEvent(
      tan.convConBou9[5].dT > 0) then 1.3*tan.convConBou9[5].dT^1.3333 else (
      -1.3)*( -tan.convConBou9[5].dT)^1.3333))), 1.63785952183583*
      tan.convConBou9[5].dT);
    tan.convConBou9[5].Q_flow := tan.convConBou9[5].A*tan.convConBou9[5].q_flow;
    tan.conExt[5].opa_b.Q_flow := (tan.conExt[5].opa_b.T-tan.conExt[5].opa.lay[2].T[1])
      *tan.conExt[5].opa.lay[2].UAnSta2;

  equation // Residual equations
    0 = tan.conExt[5].opa_b.Q_flow+tan.convConBou9[5].Q_flow+tan.fsRadiationExchange1[5].port.Q_flow;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations



  // Nonlinear system of equations
  // Nonlinear system of equations number = 6.
    // It depends on the following parameters: 
    //   TDryBul.k
    //   TRadMea.k
    //   tan.conExt[4].opa.lay[2].UAnSta2
    //   tan.convConBou9[4].A
    //   tan.fsRadiationExchange1[4].A
    // It depends on the following timevarying variables: 
    //   tan.conExt[4].opa.lay[2].T[1]
    // Unknowns[1]: 
    //   tan.convConBou9[4].dT(start = 0)
  algorithm // Torn part
    tan.conExt[4].opa_b.T := tan.convConBou9[4].dT+TDryBul.k;
    tan.fsRadiationExchange1[4].port.Q_flow := 5.6704E-008*(TRadMea.k*
      tan.fsRadiationExchange1[4].A*(tan.conExt[4].opa_b.T^4-0.6561));
    tan.convConBou9[4].q_flow := homotopy(noEvent(smooth(1, (if noEvent(
      tan.convConBou9[4].dT > 0) then 1.3*tan.convConBou9[4].dT^1.3333 else (
      -1.3)*( -tan.convConBou9[4].dT)^1.3333))), 1.63785952183583*
      tan.convConBou9[4].dT);
    tan.convConBou9[4].Q_flow := tan.convConBou9[4].A*tan.convConBou9[4].q_flow;
    tan.conExt[4].opa_b.Q_flow := (tan.conExt[4].opa_b.T-tan.conExt[4].opa.lay[2].T[1])
      *tan.conExt[4].opa.lay[2].UAnSta2;

  equation // Residual equations
    0 = tan.conExt[4].opa_b.Q_flow+tan.convConBou9[4].Q_flow+tan.fsRadiationExchange1[4].port.Q_flow;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations



  // Nonlinear system of equations
  // Nonlinear system of equations number = 7.
    // It depends on the following parameters: 
    //   TDryBul.k
    //   TRadMea.k
    //   tan.conExt[3].opa.lay[2].UAnSta2
    //   tan.convConBou9[3].A
    //   tan.fsRadiationExchange1[3].A
    // It depends on the following timevarying variables: 
    //   tan.conExt[3].opa.lay[2].T[1]
    // Unknowns[1]: 
    //   tan.convConBou9[3].dT(start = 0)
  algorithm // Torn part
    tan.conExt[3].opa_b.T := tan.convConBou9[3].dT+TDryBul.k;
    tan.fsRadiationExchange1[3].port.Q_flow := 5.6704E-008*(TRadMea.k*
      tan.fsRadiationExchange1[3].A*(tan.conExt[3].opa_b.T^4-0.6561));
    tan.convConBou9[3].q_flow := homotopy(noEvent(smooth(1, (if noEvent(
      tan.convConBou9[3].dT > 0) then 1.3*tan.convConBou9[3].dT^1.3333 else (
      -1.3)*( -tan.convConBou9[3].dT)^1.3333))), 1.63785952183583*
      tan.convConBou9[3].dT);
    tan.convConBou9[3].Q_flow := tan.convConBou9[3].A*tan.convConBou9[3].q_flow;
    tan.conExt[3].opa_b.Q_flow := (tan.conExt[3].opa_b.T-tan.conExt[3].opa.lay[2].T[1])
      *tan.conExt[3].opa.lay[2].UAnSta2;

  equation // Residual equations
    0 = tan.conExt[3].opa_b.Q_flow+tan.convConBou9[3].Q_flow+tan.fsRadiationExchange1[3].port.Q_flow;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations



  // Nonlinear system of equations
  // Nonlinear system of equations number = 8.
    // It depends on the following parameters: 
    //   TDryBul.k
    //   TRadMea.k
    //   tan.conExt[2].opa.lay[2].UAnSta2
    //   tan.convConBou9[2].A
    //   tan.fsRadiationExchange1[2].A
    // It depends on the following timevarying variables: 
    //   tan.conExt[2].opa.lay[2].T[1]
    // Unknowns[1]: 
    //   tan.convConBou9[2].dT(start = 0)
  algorithm // Torn part
    tan.conExt[2].opa_b.T := tan.convConBou9[2].dT+TDryBul.k;
    tan.fsRadiationExchange1[2].port.Q_flow := 5.6704E-008*(TRadMea.k*
      tan.fsRadiationExchange1[2].A*(tan.conExt[2].opa_b.T^4-0.6561));
    tan.convConBou9[2].q_flow := homotopy(noEvent(smooth(1, (if noEvent(
      tan.convConBou9[2].dT > 0) then 1.3*tan.convConBou9[2].dT^1.3333 else (
      -1.3)*( -tan.convConBou9[2].dT)^1.3333))), 1.63785952183583*
      tan.convConBou9[2].dT);
    tan.convConBou9[2].Q_flow := tan.convConBou9[2].A*tan.convConBou9[2].q_flow;
    tan.conExt[2].opa_b.Q_flow := (tan.conExt[2].opa_b.T-tan.conExt[2].opa.lay[2].T[1])
      *tan.conExt[2].opa.lay[2].UAnSta2;

  equation // Residual equations
    0 = tan.conExt[2].opa_b.Q_flow+tan.convConBou9[2].Q_flow+tan.fsRadiationExchange1[2].port.Q_flow;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations



  // Nonlinear system of equations
  // Nonlinear system of equations number = 9.
    // It depends on the following parameters: 
    //   TDryBul.k
    //   TRadMea.k
    //   tan.conExt[1].opa.lay[2].UAnSta2
    //   tan.convConBou9[1].A
    //   tan.fsRadiationExchange1[1].A
    // It depends on the following timevarying variables: 
    //   tan.conExt[1].opa.lay[2].T[1]
    // Unknowns[1]: 
    //   tan.convConBou9[1].dT(start = 0)
  algorithm // Torn part
    tan.conExt[1].opa_b.T := tan.convConBou9[1].dT+TDryBul.k;
    tan.fsRadiationExchange1[1].port.Q_flow := 5.6704E-008*(TRadMea.k*
      tan.fsRadiationExchange1[1].A*(tan.conExt[1].opa_b.T^4-0.6561));
    tan.convConBou9[1].q_flow := homotopy(noEvent(smooth(1, (if noEvent(
      tan.convConBou9[1].dT > 0) then 1.3*tan.convConBou9[1].dT^1.3333 else (
      -1.3)*( -tan.convConBou9[1].dT)^1.3333))), 1.63785952183583*
      tan.convConBou9[1].dT);
    tan.convConBou9[1].Q_flow := tan.convConBou9[1].A*tan.convConBou9[1].q_flow;
    tan.conExt[1].opa_b.Q_flow := (tan.conExt[1].opa_b.T-tan.conExt[1].opa.lay[2].T[1])
      *tan.conExt[1].opa.lay[2].UAnSta2;

  equation // Residual equations
    0 = tan.conExt[1].opa_b.Q_flow+tan.convConBou9[1].Q_flow+tan.fsRadiationExchange1[1].port.Q_flow;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations



  // Nonlinear system of equations
  // Nonlinear system of equations number = 10.
    // It depends on the following parameters: 
    //   TDryBul.k
    //   TRadMea.k
    //   tan.conOpa.opa.lay[2].UAnSta2
    //   tan.convConBou10.A
    //   tan.fsRadiationExchange2.A
    // It depends on the following timevarying variables: 
    //   tan.conOpa.opa.lay[2].T[1]
    // Unknowns[1]: 
    //   tan.convConBou10.dT(start = 0)
  algorithm // Torn part
    tan.conOpa.opa_b.T := tan.convConBou10.dT+TDryBul.k;
    tan.fsRadiationExchange2.port.Q_flow := 5.6704E-008*(TRadMea.k*
      tan.fsRadiationExchange2.A*(tan.conOpa.opa_b.T^4-0.6561));
    tan.convConBou10.q_flow := homotopy(noEvent(smooth(1, (if noEvent(
      tan.convConBou10.dT > 0) then 0.76*tan.convConBou10.dT^1.3333 else (-1.51)
      *( -tan.convConBou10.dT)^1.3333))), 0.957517874304026*tan.convConBou10.dT);
    tan.convConBou10.Q_flow := tan.convConBou10.A*tan.convConBou10.q_flow;
    tan.conOpa.opa_b.Q_flow := (tan.conOpa.opa_b.T-tan.conOpa.opa.lay[2].T[1])*
      tan.conOpa.opa.lay[2].UAnSta2;

  equation // Residual equations
    0 = tan.conOpa.opa_b.Q_flow+tan.convConBou10.Q_flow+tan.fsRadiationExchange2.port.Q_flow;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations



  // Nonlinear system of equations
  // Nonlinear system of equations number = 11.
    // It depends on the following parameters: 
    //   TDryBul.k
    //   TRadMea.k
    //   tan.conExt[7].opa.lay[2].UAnSta2
    //   tan.convConBou9[7].A
    //   tan.fsRadiationExchange1[7].A
    // It depends on the following timevarying variables: 
    //   tan.conExt[7].opa.lay[2].T[1]
    // Unknowns[1]: 
    //   tan.convConBou9[7].dT(start = 0)
  algorithm // Torn part
    tan.conExt[7].opa_b.T := tan.convConBou9[7].dT+TDryBul.k;
    tan.fsRadiationExchange1[7].port.Q_flow := 5.6704E-008*(TRadMea.k*
      tan.fsRadiationExchange1[7].A*(tan.conExt[7].opa_b.T^4-0.6561));
    tan.convConBou9[7].q_flow := homotopy(noEvent(smooth(1, (if noEvent(
      tan.convConBou9[7].dT > 0) then 1.3*tan.convConBou9[7].dT^1.3333 else (
      -1.3)*( -tan.convConBou9[7].dT)^1.3333))), 1.63785952183583*
      tan.convConBou9[7].dT);
    tan.convConBou9[7].Q_flow := tan.convConBou9[7].A*tan.convConBou9[7].q_flow;
    tan.conExt[7].opa_b.Q_flow := (tan.conExt[7].opa_b.T-tan.conExt[7].opa.lay[2].T[1])
      *tan.conExt[7].opa.lay[2].UAnSta2;

  equation // Residual equations
    0 = tan.conExt[7].opa_b.Q_flow+tan.convConBou9[7].Q_flow+tan.fsRadiationExchange1[7].port.Q_flow;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations


  onOffController.y := onOffController.y_.start;


// -----------------------------------------------------------------------------

// Dynamics Section
  tan.buoHeaTra.buoMasIn.TWat[10] := Modelica.Media.Water.IF97_Utilities.T_props_ph
    (
    101325.0, 
    tan.vol[10].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(101325.0, 
      tan.vol[10].dynBal.medium.h, 0, 0));
  tan.convConBou8[10].dT := TDryBul.k-tan.buoHeaTra.buoMasIn.TWat[10];
  tan.convConBou8[10].q_flow := 0.2*tan.convConBou8[10].dT;
  tan.convConBou8[10].Q_flow := tan.convConBou8[10].A*tan.convConBou8[10].q_flow;

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.flueWall[10].opa_a.T-tan.flueWall[10].opa.lay[1].T[1] = 
        tan.buoHeaTra.QDotFlu[10]/tan.flueWall[10].opa.lay[1].UAnSta2;
      */
      tan.convConBou1[10].dT := (tan.flueWall[10].opa.lay[1].T[1]-
        tan.buoHeaTra.buoMasIn.TWat[10])/(1.0+tan.convConBou1[10].A*
        tan.convConBou1[10].u/tan.flueWall[10].opa.lay[1].UAnSta2);

    // Torn part
      tan.flueWall[10].opa_a.T := tan.convConBou1[10].dT+tan.buoHeaTra.buoMasIn.TWat[10];
      tan.convConBou1[10].q_flow := tan.convConBou1[10].u*tan.convConBou1[10].dT;
      tan.buoHeaTra.QDotFlu[10] :=  -tan.convConBou1[10].A*tan.convConBou1[10].q_flow;
  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.conOpa3.opa_a.T-tan.conOpa3.opa.lay[1].T[1] = tan.conOpa3.opa_a.Q_flow
        /tan.conOpa3.opa.lay[1].UAnSta2;
      */
      tan.convConBou2.dT := (tan.conOpa3.opa.lay[1].T[1]-tan.buoHeaTra.buoMasIn.TWat[10])
        /(1.0+tan.convConBou2.A*tan.convConBou2.u/tan.conOpa3.opa.lay[1].UAnSta2);

    // Torn part
      tan.conOpa3.opa_a.T := tan.convConBou2.dT+tan.buoHeaTra.buoMasIn.TWat[10];
      tan.convConBou2.q_flow := tan.convConBou2.u*tan.convConBou2.dT;
      tan.conOpa3.opa_a.Q_flow :=  -tan.convConBou2.A*tan.convConBou2.q_flow;
  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.conExt[10].opa_a.T-tan.conExt[10].opa.lay[1].T[1] = tan.conExt[10].opa_a.Q_flow
        /tan.conExt[10].opa.lay[1].UAnSta2;
      */
      tan.convConBou4[10].dT := (tan.conExt[10].opa.lay[1].T[1]-tan.buoHeaTra.buoMasIn.TWat[10])
        /(1.0+tan.convConBou4[10].A*tan.convConBou1[10].u/tan.conExt[10].opa.lay[1].UAnSta2);

    // Torn part
      tan.conExt[10].opa_a.T := tan.convConBou4[10].dT+tan.buoHeaTra.buoMasIn.TWat[10];
      tan.convConBou4[10].q_flow := tan.convConBou1[10].u*tan.convConBou4[10].dT;
      tan.conExt[10].opa_a.Q_flow :=  -tan.convConBou4[10].A*tan.convConBou4[10].q_flow;
  // End of linear system of equations

  tan.draHeaTra.draHeaTra[10] := m_flow_in[10].k*tan.draHeaTra.c_p*(
    tan.draHeaTra.TIn-tan.buoHeaTra.buoMasIn.TWat[10]);
  tan.prescribedHeatFlow1[10].port.Q_flow :=  -tan.draHeaTra.draHeaTra[10]*(1+
    tan.prescribedHeatFlow1[10].alpha*(tan.buoHeaTra.buoMasIn.TWat[10]-
    tan.prescribedHeatFlow1[10].T_ref));
  tan.buoHeaTra.buoBas.t_H.T := tan.buoHeaTra.buoMasIn.TWat[10];
  tan.buoHeaTra.buoBas.t_H.Q_flow := tan.buoHeaTra.buoBas.gain1.k*
    tan.conOpa3.opa_a.Q_flow;
  algorithm 
    tan.buoHeaTra.buoBas.t_H.y := tan.buoHeaTra.buoBas.t_H.T+tan.buoHeaTra.buoBas.t_H.c_w
      *tan.buoHeaTra.buoBas.t_H.Q_flow/(tan.buoHeaTra.buoBas.t_H.h*
      tan.buoHeaTra.buoBas.t_H.A);
  tan.buoHeaTra.buoMasIn.THotOutBas := tan.buoHeaTra.buoBas.t_H.y;
  tan.buoHeaTra.dH_BU.THotBas := tan.buoHeaTra.buoMasIn.THotOutBas;
  tan.buoHeaTra.buoMasIn.TWat[1] := Modelica.Media.Water.IF97_Utilities.T_props_ph
    (
    101325.0, 
    tan.vol[1].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(101325.0, 
      tan.vol[1].dynBal.medium.h, 0, 0));
  tan.buoHeaTra.dH_BU.TWat[1] := tan.buoHeaTra.buoMasIn.TWat[1];
  tan.buoHeaTra.buoMasIn.TWat[2] := Modelica.Media.Water.IF97_Utilities.T_props_ph
    (
    101325.0, 
    tan.vol[2].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(101325.0, 
      tan.vol[2].dynBal.medium.h, 0, 0));
  tan.buoHeaTra.dH_BU.TWat[2] := tan.buoHeaTra.buoMasIn.TWat[2];
  tan.buoHeaTra.buoMasIn.TWat[3] := Modelica.Media.Water.IF97_Utilities.T_props_ph
    (
    101325.0, 
    tan.vol[3].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(101325.0, 
      tan.vol[3].dynBal.medium.h, 0, 0));
  tan.buoHeaTra.dH_BU.TWat[3] := tan.buoHeaTra.buoMasIn.TWat[3];
  tan.buoHeaTra.buoMasIn.TWat[4] := Modelica.Media.Water.IF97_Utilities.T_props_ph
    (
    101325.0, 
    tan.vol[4].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(101325.0, 
      tan.vol[4].dynBal.medium.h, 0, 0));
  tan.buoHeaTra.dH_BU.TWat[4] := tan.buoHeaTra.buoMasIn.TWat[4];
  tan.buoHeaTra.buoMasIn.TWat[5] := Modelica.Media.Water.IF97_Utilities.T_props_ph
    (
    101325.0, 
    tan.vol[5].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(101325.0, 
      tan.vol[5].dynBal.medium.h, 0, 0));
  tan.buoHeaTra.dH_BU.TWat[5] := tan.buoHeaTra.buoMasIn.TWat[5];
  tan.buoHeaTra.buoMasIn.TWat[6] := Modelica.Media.Water.IF97_Utilities.T_props_ph
    (
    101325.0, 
    tan.vol[6].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(101325.0, 
      tan.vol[6].dynBal.medium.h, 0, 0));
  tan.buoHeaTra.dH_BU.TWat[6] := tan.buoHeaTra.buoMasIn.TWat[6];
  tan.buoHeaTra.buoMasIn.TWat[7] := Modelica.Media.Water.IF97_Utilities.T_props_ph
    (
    101325.0, 
    tan.vol[7].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(101325.0, 
      tan.vol[7].dynBal.medium.h, 0, 0));
  tan.buoHeaTra.dH_BU.TWat[7] := tan.buoHeaTra.buoMasIn.TWat[7];
  tan.buoHeaTra.buoMasIn.TWat[8] := Modelica.Media.Water.IF97_Utilities.T_props_ph
    (
    101325.0, 
    tan.vol[8].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(101325.0, 
      tan.vol[8].dynBal.medium.h, 0, 0));
  tan.buoHeaTra.dH_BU.TWat[8] := tan.buoHeaTra.buoMasIn.TWat[8];
  tan.buoHeaTra.buoMasIn.TWat[9] := Modelica.Media.Water.IF97_Utilities.T_props_ph
    (
    101325.0, 
    tan.vol[9].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(101325.0, 
      tan.vol[9].dynBal.medium.h, 0, 0));
  tan.buoHeaTra.dH_BU.TWat[9] := tan.buoHeaTra.buoMasIn.TWat[9];
  tan.buoHeaTra.dH_BU.TWat[10] := tan.buoHeaTra.buoMasIn.TWat[10];
  tan.buoHeaTra.buoFlu[1].t_H.T := tan.buoHeaTra.buoMasIn.TWat[1];

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.flueWall[1].opa_a.T-tan.flueWall[1].opa.lay[1].T[1] = tan.buoHeaTra.QDotFlu[1]
        /tan.flueWall[1].opa.lay[1].UAnSta2;
      */
      tan.convConBou1[1].dT := (tan.flueWall[1].opa.lay[1].T[1]-tan.buoHeaTra.buoMasIn.TWat[1])
        /(1.0+tan.convConBou1[1].A*tan.convConBou2.u/tan.flueWall[1].opa.lay[1].UAnSta2);

    // Torn part
      tan.flueWall[1].opa_a.T := tan.convConBou1[1].dT+tan.buoHeaTra.buoMasIn.TWat[1];
      tan.convConBou1[1].q_flow := tan.convConBou2.u*tan.convConBou1[1].dT;
      tan.buoHeaTra.QDotFlu[1] :=  -tan.convConBou1[1].A*tan.convConBou1[1].q_flow;
  // End of linear system of equations

  tan.buoHeaTra.buoFlu[1].t_H.Q_flow := tan.buoHeaTra.buoFlu[1].gain1.k*
    tan.buoHeaTra.QDotFlu[1];
  algorithm 
    tan.buoHeaTra.buoFlu[1].t_H.y := tan.buoHeaTra.buoFlu[1].t_H.T+
      tan.buoHeaTra.buoFlu[1].t_H.c_w*tan.buoHeaTra.buoFlu[1].t_H.Q_flow/(
      tan.buoHeaTra.buoFlu[1].t_H.h*tan.buoHeaTra.buoFlu[1].t_H.A);
  tan.buoHeaTra.buoMasIn.THotOutFlu[1] := tan.buoHeaTra.buoFlu[1].t_H.y;
  tan.buoHeaTra.dH_BU.THotFlu[1] := tan.buoHeaTra.buoMasIn.THotOutFlu[1];
  tan.buoHeaTra.buoFlu[2].t_H.T := tan.buoHeaTra.buoMasIn.TWat[2];

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.flueWall[2].opa_a.T-tan.flueWall[2].opa.lay[1].T[1] = tan.buoHeaTra.QDotFlu[2]
        /tan.flueWall[2].opa.lay[1].UAnSta2;
      */
      tan.convConBou1[2].dT := (tan.flueWall[2].opa.lay[1].T[1]-tan.buoHeaTra.buoMasIn.TWat[2])
        /(1.0+tan.convConBou1[2].A*tan.convConBou1[2].u/tan.flueWall[2].opa.lay[1].UAnSta2);

    // Torn part
      tan.flueWall[2].opa_a.T := tan.convConBou1[2].dT+tan.buoHeaTra.buoMasIn.TWat[2];
      tan.convConBou1[2].q_flow := tan.convConBou1[2].u*tan.convConBou1[2].dT;
      tan.buoHeaTra.QDotFlu[2] :=  -tan.convConBou1[2].A*tan.convConBou1[2].q_flow;
  // End of linear system of equations

  tan.buoHeaTra.buoFlu[2].t_H.Q_flow := tan.buoHeaTra.buoFlu[2].gain1.k*
    tan.buoHeaTra.QDotFlu[2];
  algorithm 
    tan.buoHeaTra.buoFlu[2].t_H.y := tan.buoHeaTra.buoFlu[2].t_H.T+
      tan.buoHeaTra.buoFlu[2].t_H.c_w*tan.buoHeaTra.buoFlu[2].t_H.Q_flow/(
      tan.buoHeaTra.buoFlu[2].t_H.h*tan.buoHeaTra.buoFlu[2].t_H.A);
  tan.buoHeaTra.buoMasIn.THotOutFlu[2] := tan.buoHeaTra.buoFlu[2].t_H.y;
  tan.buoHeaTra.dH_BU.THotFlu[2] := tan.buoHeaTra.buoMasIn.THotOutFlu[2];
  tan.buoHeaTra.buoFlu[3].t_H.T := tan.buoHeaTra.buoMasIn.TWat[3];

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.flueWall[3].opa_a.T-tan.flueWall[3].opa.lay[1].T[1] = tan.buoHeaTra.QDotFlu[3]
        /tan.flueWall[3].opa.lay[1].UAnSta2;
      */
      tan.convConBou1[3].dT := (tan.flueWall[3].opa.lay[1].T[1]-tan.buoHeaTra.buoMasIn.TWat[3])
        /(1.0+tan.convConBou1[3].A*tan.convConBou1[3].u/tan.flueWall[3].opa.lay[1].UAnSta2);

    // Torn part
      tan.flueWall[3].opa_a.T := tan.convConBou1[3].dT+tan.buoHeaTra.buoMasIn.TWat[3];
      tan.convConBou1[3].q_flow := tan.convConBou1[3].u*tan.convConBou1[3].dT;
      tan.buoHeaTra.QDotFlu[3] :=  -tan.convConBou1[3].A*tan.convConBou1[3].q_flow;
  // End of linear system of equations

  tan.buoHeaTra.buoFlu[3].t_H.Q_flow := tan.buoHeaTra.buoFlu[3].gain1.k*
    tan.buoHeaTra.QDotFlu[3];
  algorithm 
    tan.buoHeaTra.buoFlu[3].t_H.y := tan.buoHeaTra.buoFlu[3].t_H.T+
      tan.buoHeaTra.buoFlu[3].t_H.c_w*tan.buoHeaTra.buoFlu[3].t_H.Q_flow/(
      tan.buoHeaTra.buoFlu[3].t_H.h*tan.buoHeaTra.buoFlu[3].t_H.A);
  tan.buoHeaTra.buoMasIn.THotOutFlu[3] := tan.buoHeaTra.buoFlu[3].t_H.y;
  tan.buoHeaTra.dH_BU.THotFlu[3] := tan.buoHeaTra.buoMasIn.THotOutFlu[3];
  tan.buoHeaTra.buoFlu[4].t_H.T := tan.buoHeaTra.buoMasIn.TWat[4];

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.flueWall[4].opa_a.T-tan.flueWall[4].opa.lay[1].T[1] = tan.buoHeaTra.QDotFlu[4]
        /tan.flueWall[4].opa.lay[1].UAnSta2;
      */
      tan.convConBou1[4].dT := (tan.flueWall[4].opa.lay[1].T[1]-tan.buoHeaTra.buoMasIn.TWat[4])
        /(1.0+tan.convConBou1[4].A*tan.convConBou1[4].u/tan.flueWall[4].opa.lay[1].UAnSta2);

    // Torn part
      tan.flueWall[4].opa_a.T := tan.convConBou1[4].dT+tan.buoHeaTra.buoMasIn.TWat[4];
      tan.convConBou1[4].q_flow := tan.convConBou1[4].u*tan.convConBou1[4].dT;
      tan.buoHeaTra.QDotFlu[4] :=  -tan.convConBou1[4].A*tan.convConBou1[4].q_flow;
  // End of linear system of equations

  tan.buoHeaTra.buoFlu[4].t_H.Q_flow := tan.buoHeaTra.buoFlu[4].gain1.k*
    tan.buoHeaTra.QDotFlu[4];
  algorithm 
    tan.buoHeaTra.buoFlu[4].t_H.y := tan.buoHeaTra.buoFlu[4].t_H.T+
      tan.buoHeaTra.buoFlu[4].t_H.c_w*tan.buoHeaTra.buoFlu[4].t_H.Q_flow/(
      tan.buoHeaTra.buoFlu[4].t_H.h*tan.buoHeaTra.buoFlu[4].t_H.A);
  tan.buoHeaTra.buoMasIn.THotOutFlu[4] := tan.buoHeaTra.buoFlu[4].t_H.y;
  tan.buoHeaTra.dH_BU.THotFlu[4] := tan.buoHeaTra.buoMasIn.THotOutFlu[4];
  tan.buoHeaTra.buoFlu[5].t_H.T := tan.buoHeaTra.buoMasIn.TWat[5];

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.flueWall[5].opa_a.T-tan.flueWall[5].opa.lay[1].T[1] = tan.buoHeaTra.QDotFlu[5]
        /tan.flueWall[5].opa.lay[1].UAnSta2;
      */
      tan.convConBou1[5].dT := (tan.flueWall[5].opa.lay[1].T[1]-tan.buoHeaTra.buoMasIn.TWat[5])
        /(1.0+tan.convConBou1[5].A*tan.convConBou1[5].u/tan.flueWall[5].opa.lay[1].UAnSta2);

    // Torn part
      tan.flueWall[5].opa_a.T := tan.convConBou1[5].dT+tan.buoHeaTra.buoMasIn.TWat[5];
      tan.convConBou1[5].q_flow := tan.convConBou1[5].u*tan.convConBou1[5].dT;
      tan.buoHeaTra.QDotFlu[5] :=  -tan.convConBou1[5].A*tan.convConBou1[5].q_flow;
  // End of linear system of equations

  tan.buoHeaTra.buoFlu[5].t_H.Q_flow := tan.buoHeaTra.buoFlu[5].gain1.k*
    tan.buoHeaTra.QDotFlu[5];
  algorithm 
    tan.buoHeaTra.buoFlu[5].t_H.y := tan.buoHeaTra.buoFlu[5].t_H.T+
      tan.buoHeaTra.buoFlu[5].t_H.c_w*tan.buoHeaTra.buoFlu[5].t_H.Q_flow/(
      tan.buoHeaTra.buoFlu[5].t_H.h*tan.buoHeaTra.buoFlu[5].t_H.A);
  tan.buoHeaTra.buoMasIn.THotOutFlu[5] := tan.buoHeaTra.buoFlu[5].t_H.y;
  tan.buoHeaTra.dH_BU.THotFlu[5] := tan.buoHeaTra.buoMasIn.THotOutFlu[5];
  tan.buoHeaTra.buoFlu[6].t_H.T := tan.buoHeaTra.buoMasIn.TWat[6];

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.flueWall[6].opa_a.T-tan.flueWall[6].opa.lay[1].T[1] = tan.buoHeaTra.QDotFlu[6]
        /tan.flueWall[6].opa.lay[1].UAnSta2;
      */
      tan.convConBou1[6].dT := (tan.flueWall[6].opa.lay[1].T[1]-tan.buoHeaTra.buoMasIn.TWat[6])
        /(1.0+tan.convConBou1[6].A*tan.convConBou1[6].u/tan.flueWall[6].opa.lay[1].UAnSta2);

    // Torn part
      tan.flueWall[6].opa_a.T := tan.convConBou1[6].dT+tan.buoHeaTra.buoMasIn.TWat[6];
      tan.convConBou1[6].q_flow := tan.convConBou1[6].u*tan.convConBou1[6].dT;
      tan.buoHeaTra.QDotFlu[6] :=  -tan.convConBou1[6].A*tan.convConBou1[6].q_flow;
  // End of linear system of equations

  tan.buoHeaTra.buoFlu[6].t_H.Q_flow := tan.buoHeaTra.buoFlu[6].gain1.k*
    tan.buoHeaTra.QDotFlu[6];
  algorithm 
    tan.buoHeaTra.buoFlu[6].t_H.y := tan.buoHeaTra.buoFlu[6].t_H.T+
      tan.buoHeaTra.buoFlu[6].t_H.c_w*tan.buoHeaTra.buoFlu[6].t_H.Q_flow/(
      tan.buoHeaTra.buoFlu[6].t_H.h*tan.buoHeaTra.buoFlu[6].t_H.A);
  tan.buoHeaTra.buoMasIn.THotOutFlu[6] := tan.buoHeaTra.buoFlu[6].t_H.y;
  tan.buoHeaTra.dH_BU.THotFlu[6] := tan.buoHeaTra.buoMasIn.THotOutFlu[6];
  tan.buoHeaTra.buoFlu[7].t_H.T := tan.buoHeaTra.buoMasIn.TWat[7];

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.flueWall[7].opa_a.T-tan.flueWall[7].opa.lay[1].T[1] = tan.buoHeaTra.QDotFlu[7]
        /tan.flueWall[7].opa.lay[1].UAnSta2;
      */
      tan.convConBou1[7].dT := (tan.flueWall[7].opa.lay[1].T[1]-tan.buoHeaTra.buoMasIn.TWat[7])
        /(1.0+tan.convConBou1[7].A*tan.convConBou1[7].u/tan.flueWall[7].opa.lay[1].UAnSta2);

    // Torn part
      tan.flueWall[7].opa_a.T := tan.convConBou1[7].dT+tan.buoHeaTra.buoMasIn.TWat[7];
      tan.convConBou1[7].q_flow := tan.convConBou1[7].u*tan.convConBou1[7].dT;
      tan.buoHeaTra.QDotFlu[7] :=  -tan.convConBou1[7].A*tan.convConBou1[7].q_flow;
  // End of linear system of equations

  tan.buoHeaTra.buoFlu[7].t_H.Q_flow := tan.buoHeaTra.buoFlu[7].gain1.k*
    tan.buoHeaTra.QDotFlu[7];
  algorithm 
    tan.buoHeaTra.buoFlu[7].t_H.y := tan.buoHeaTra.buoFlu[7].t_H.T+
      tan.buoHeaTra.buoFlu[7].t_H.c_w*tan.buoHeaTra.buoFlu[7].t_H.Q_flow/(
      tan.buoHeaTra.buoFlu[7].t_H.h*tan.buoHeaTra.buoFlu[7].t_H.A);
  tan.buoHeaTra.buoMasIn.THotOutFlu[7] := tan.buoHeaTra.buoFlu[7].t_H.y;
  tan.buoHeaTra.dH_BU.THotFlu[7] := tan.buoHeaTra.buoMasIn.THotOutFlu[7];
  tan.buoHeaTra.buoFlu[8].t_H.T := tan.buoHeaTra.buoMasIn.TWat[8];

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.flueWall[8].opa_a.T-tan.flueWall[8].opa.lay[1].T[1] = tan.buoHeaTra.QDotFlu[8]
        /tan.flueWall[8].opa.lay[1].UAnSta2;
      */
      tan.convConBou1[8].dT := (tan.flueWall[8].opa.lay[1].T[1]-tan.buoHeaTra.buoMasIn.TWat[8])
        /(1.0+tan.convConBou1[8].A*tan.convConBou1[8].u/tan.flueWall[8].opa.lay[1].UAnSta2);

    // Torn part
      tan.flueWall[8].opa_a.T := tan.convConBou1[8].dT+tan.buoHeaTra.buoMasIn.TWat[8];
      tan.convConBou1[8].q_flow := tan.convConBou1[8].u*tan.convConBou1[8].dT;
      tan.buoHeaTra.QDotFlu[8] :=  -tan.convConBou1[8].A*tan.convConBou1[8].q_flow;
  // End of linear system of equations

  tan.buoHeaTra.buoFlu[8].t_H.Q_flow := tan.buoHeaTra.buoFlu[8].gain1.k*
    tan.buoHeaTra.QDotFlu[8];
  algorithm 
    tan.buoHeaTra.buoFlu[8].t_H.y := tan.buoHeaTra.buoFlu[8].t_H.T+
      tan.buoHeaTra.buoFlu[8].t_H.c_w*tan.buoHeaTra.buoFlu[8].t_H.Q_flow/(
      tan.buoHeaTra.buoFlu[8].t_H.h*tan.buoHeaTra.buoFlu[8].t_H.A);
  tan.buoHeaTra.buoMasIn.THotOutFlu[8] := tan.buoHeaTra.buoFlu[8].t_H.y;
  tan.buoHeaTra.dH_BU.THotFlu[8] := tan.buoHeaTra.buoMasIn.THotOutFlu[8];
  tan.buoHeaTra.buoFlu[9].t_H.T := tan.buoHeaTra.buoMasIn.TWat[9];

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.flueWall[9].opa_a.T-tan.flueWall[9].opa.lay[1].T[1] = tan.buoHeaTra.QDotFlu[9]
        /tan.flueWall[9].opa.lay[1].UAnSta2;
      */
      tan.convConBou1[9].dT := (tan.flueWall[9].opa.lay[1].T[1]-tan.buoHeaTra.buoMasIn.TWat[9])
        /(1.0+tan.convConBou1[9].A*tan.convConBou1[9].u/tan.flueWall[9].opa.lay[1].UAnSta2);

    // Torn part
      tan.flueWall[9].opa_a.T := tan.convConBou1[9].dT+tan.buoHeaTra.buoMasIn.TWat[9];
      tan.convConBou1[9].q_flow := tan.convConBou1[9].u*tan.convConBou1[9].dT;
      tan.buoHeaTra.QDotFlu[9] :=  -tan.convConBou1[9].A*tan.convConBou1[9].q_flow;
  // End of linear system of equations

  tan.buoHeaTra.buoFlu[9].t_H.Q_flow := tan.buoHeaTra.buoFlu[9].gain1.k*
    tan.buoHeaTra.QDotFlu[9];
  algorithm 
    tan.buoHeaTra.buoFlu[9].t_H.y := tan.buoHeaTra.buoFlu[9].t_H.T+
      tan.buoHeaTra.buoFlu[9].t_H.c_w*tan.buoHeaTra.buoFlu[9].t_H.Q_flow/(
      tan.buoHeaTra.buoFlu[9].t_H.h*tan.buoHeaTra.buoFlu[9].t_H.A);
  tan.buoHeaTra.buoMasIn.THotOutFlu[9] := tan.buoHeaTra.buoFlu[9].t_H.y;
  tan.buoHeaTra.dH_BU.THotFlu[9] := tan.buoHeaTra.buoMasIn.THotOutFlu[9];
  tan.buoHeaTra.buoFlu[10].t_H.T := tan.buoHeaTra.buoMasIn.TWat[10];
  tan.buoHeaTra.buoFlu[10].t_H.Q_flow := tan.buoHeaTra.buoFlu[10].gain1.k*
    tan.buoHeaTra.QDotFlu[10];
  algorithm 
    tan.buoHeaTra.buoFlu[10].t_H.y := tan.buoHeaTra.buoFlu[10].t_H.T+
      tan.buoHeaTra.buoFlu[10].t_H.c_w*tan.buoHeaTra.buoFlu[10].t_H.Q_flow/(
      tan.buoHeaTra.buoFlu[10].t_H.h*tan.buoHeaTra.buoFlu[10].t_H.A);
  tan.buoHeaTra.buoMasIn.THotOutFlu[10] := tan.buoHeaTra.buoFlu[10].t_H.y;
  tan.buoHeaTra.dH_BU.THotFlu[10] := tan.buoHeaTra.buoMasIn.THotOutFlu[10];
  tan.buoHeaTra.dH_BU.dH_BU_B := fill(0.0, 10);
  tan.buoHeaTra.dH_BU.dH_BU_F_Seg := fill(0.0, 10);
  tan.buoHeaTra.dH_BU.dH_BU_F := fill(0.0, 10);
  tan.buoHeaTra.dH_BU.dH_BU := fill(0.0, 10);
  algorithm 
    tan.buoHeaTra.dH_BU.dH_BU_B[1] := tan.buoHeaTra.dH_BU.mDotBas*
      tan.buoHeaTra.dH_BU.c_p*(tan.buoHeaTra.dH_BU.THotBas-tan.buoHeaTra.dH_BU.TWat
      [1])*Buildings.Utilities.Math.Functions.smoothHeaviside(tan.buoHeaTra.dH_BU.THotBas
      -tan.buoHeaTra.dH_BU.TWat[1], 1E-005);
    for j in (1:10) loop
      tan.buoHeaTra.dH_BU.dH_BU_F_Seg[j] := tan.buoHeaTra.dH_BU.mDotFlu[j]*
        tan.buoHeaTra.dH_BU.c_p*(tan.buoHeaTra.dH_BU.THotFlu[j]-tan.buoHeaTra.dH_BU.TWat
        [1])*Buildings.Utilities.Math.Functions.smoothHeaviside(tan.buoHeaTra.dH_BU.THotFlu
        [j]-tan.buoHeaTra.dH_BU.TWat[1], 1E-005);
    end for;
    tan.buoHeaTra.dH_BU.dH_BU_F[1] := sum(tan.buoHeaTra.dH_BU.dH_BU_F_Seg[1:10]);
    tan.buoHeaTra.dH_BU.dH_BU[1] := tan.buoHeaTra.dH_BU.dH_BU_B[1]+
      tan.buoHeaTra.dH_BU.dH_BU_F[1];
    for i in (2:9) loop
      tan.buoHeaTra.dH_BU.dH_BU_B[i] := tan.buoHeaTra.dH_BU.mDotBas*
        tan.buoHeaTra.dH_BU.c_p*(tan.buoHeaTra.dH_BU.THotBas-tan.buoHeaTra.dH_BU.TWat
        [i])*Buildings.Utilities.Math.Functions.smoothHeaviside(tan.buoHeaTra.dH_BU.THotBas
        -tan.buoHeaTra.dH_BU.TWat[i], 1E-005)*Buildings.Utilities.Math.Functions.smoothHeaviside
        (tan.buoHeaTra.dH_BU.TWat[i-1]-tan.buoHeaTra.dH_BU.THotBas, 1E-005);
      for j in (1:i) loop
        tan.buoHeaTra.dH_BU.dH_BU_F_Seg[j] := tan.buoHeaTra.dH_BU.mDotFlu[j]*
          tan.buoHeaTra.dH_BU.c_p*(tan.buoHeaTra.dH_BU.THotFlu[j]-
          tan.buoHeaTra.dH_BU.TWat[i])*Buildings.Utilities.Math.Functions.smoothHeaviside
          (tan.buoHeaTra.dH_BU.THotFlu[j]-tan.buoHeaTra.dH_BU.TWat[i], 1E-005)*
          Buildings.Utilities.Math.Functions.smoothHeaviside(tan.buoHeaTra.dH_BU.TWat
          [i-1]-tan.buoHeaTra.dH_BU.THotFlu[j], 1E-005);
      end for;
      tan.buoHeaTra.dH_BU.dH_BU_F[i] := sum(tan.buoHeaTra.dH_BU.dH_BU_F_Seg[1:10]);
      tan.buoHeaTra.dH_BU.dH_BU[i] := tan.buoHeaTra.dH_BU.dH_BU_B[i]+
        tan.buoHeaTra.dH_BU.dH_BU_F[i];
    end for;
    tan.buoHeaTra.dH_BU.dH_BU_B[10] := tan.buoHeaTra.dH_BU.mDotBas*
      tan.buoHeaTra.dH_BU.c_p*(tan.buoHeaTra.dH_BU.THotBas-tan.buoHeaTra.dH_BU.TWat[10])
      *Buildings.Utilities.Math.Functions.smoothHeaviside(tan.buoHeaTra.dH_BU.TWat[9]
      -tan.buoHeaTra.dH_BU.THotBas, 1E-005);
    for j in (1:10) loop
      tan.buoHeaTra.dH_BU.dH_BU_F_Seg[j] := tan.buoHeaTra.dH_BU.mDotFlu[j]*
        tan.buoHeaTra.dH_BU.c_p*(tan.buoHeaTra.dH_BU.THotFlu[j]-tan.buoHeaTra.dH_BU.TWat[10])
        *Buildings.Utilities.Math.Functions.smoothHeaviside(tan.buoHeaTra.dH_BU.TWat[9]
        -tan.buoHeaTra.dH_BU.THotFlu[j], 1E-005);
    end for;
    tan.buoHeaTra.dH_BU.dH_BU_F[10] := sum(tan.buoHeaTra.dH_BU.dH_BU_F_Seg[1:10]);
    tan.buoHeaTra.dH_BU.dH_BU[10] := tan.buoHeaTra.dH_BU.dH_BU_B[10]+
      tan.buoHeaTra.dH_BU.dH_BU_F[10];
  tan.buoHeaTra.buoMasIn.m_flow_BU := fill(0.0, 10);
  tan.buoHeaTra.buoMasIn.mFloInFluSeg := fill(0.0, 10);
  tan.buoHeaTra.buoMasIn.mFloInFlu := fill(0.0, 10);
  tan.buoHeaTra.buoMasIn.mFloIn := fill(0.0, 10);
  algorithm 
    for i in (2:9) loop
      tan.buoHeaTra.buoMasIn.m_flow_BU[i] := tan.buoHeaTra.buoMasIn.mFloOutBas*
        Buildings.Utilities.Math.Functions.smoothHeaviside(tan.buoHeaTra.buoMasIn.THotOutBas
        -tan.buoHeaTra.buoMasIn.TWat[i], 1E-005)*Buildings.Utilities.Math.Functions.smoothHeaviside
        (tan.buoHeaTra.buoMasIn.TWat[i-1]-tan.buoHeaTra.buoMasIn.THotOutBas, 
        1E-005);
      for j in (1:10) loop
        tan.buoHeaTra.buoMasIn.mFloInFluSeg[j] := tan.buoHeaTra.buoMasIn.mFloOutFlu
          [j]*Buildings.Utilities.Math.Functions.smoothHeaviside(
          tan.buoHeaTra.buoMasIn.THotOutFlu[j]-tan.buoHeaTra.buoMasIn.TWat[i], 
          1E-005)*Buildings.Utilities.Math.Functions.smoothHeaviside(
          tan.buoHeaTra.buoMasIn.TWat[i-1]-tan.buoHeaTra.buoMasIn.THotOutFlu[j],
           1E-005);
      end for;
      tan.buoHeaTra.buoMasIn.mFloInFlu[i] := sum(tan.buoHeaTra.buoMasIn.mFloInFluSeg
        [1:10]);
      tan.buoHeaTra.buoMasIn.mFloIn[i] := tan.buoHeaTra.buoMasIn.m_flow_BU[i]+
        tan.buoHeaTra.buoMasIn.mFloInFlu[i];
    end for;
    tan.buoHeaTra.buoMasIn.m_flow_BU[1] := tan.buoHeaTra.buoMasIn.mFloOutBas*
      Buildings.Utilities.Math.Functions.smoothHeaviside(tan.buoHeaTra.buoMasIn.THotOutBas
      -tan.buoHeaTra.buoMasIn.TWat[1], 1E-005);
    for j in (1:10) loop
      tan.buoHeaTra.buoMasIn.mFloInFluSeg[j] := tan.buoHeaTra.buoMasIn.mFloOutFlu
        [j]*Buildings.Utilities.Math.Functions.smoothHeaviside(tan.buoHeaTra.buoMasIn.THotOutFlu
        [j]-tan.buoHeaTra.buoMasIn.TWat[1], 1E-005);
    end for;
    tan.buoHeaTra.buoMasIn.mFloInFlu[1] := sum(tan.buoHeaTra.buoMasIn.mFloInFluSeg
      [1:10]);
    tan.buoHeaTra.buoMasIn.mFloIn[1] := tan.buoHeaTra.buoMasIn.m_flow_BU[1]+
      tan.buoHeaTra.buoMasIn.mFloInFlu[1];
    tan.buoHeaTra.buoMasIn.m_flow_BU[10] := tan.buoHeaTra.buoMasIn.mFloOutBas*
      Buildings.Utilities.Math.Functions.smoothHeaviside(tan.buoHeaTra.buoMasIn.TWat[9]
      -tan.buoHeaTra.buoMasIn.THotOutBas, 1E-005);
    for j in (1:10) loop
      tan.buoHeaTra.buoMasIn.mFloInFluSeg[j] := tan.buoHeaTra.buoMasIn.mFloOutFlu
        [j]*Buildings.Utilities.Math.Functions.smoothHeaviside(tan.buoHeaTra.buoMasIn.TWat[9]
        -tan.buoHeaTra.buoMasIn.THotOutFlu[j], 1E-005);
    end for;
    tan.buoHeaTra.buoMasIn.mFloInFlu[10] := sum(tan.buoHeaTra.buoMasIn.mFloInFluSeg
      [1:10]);
    tan.buoHeaTra.buoMasIn.mFloIn[10] := tan.buoHeaTra.buoMasIn.m_flow_BU[10]+
      tan.buoHeaTra.buoMasIn.mFloInFlu[10];
  tan.buoHeaTra.mDCal1.mDotD[1] := tan.buoHeaTra.buoMasIn.mFloIn[1]-
    tan.buoHeaTra.buoMasIn.mFloOutFlu[1];
  tan.buoHeaTra.mDCal1.mDotD[2] := tan.buoHeaTra.buoMasIn.mFloIn[2]-
    tan.buoHeaTra.buoMasIn.mFloOutFlu[2]+tan.buoHeaTra.mDCal1.mDotD[1];
  tan.buoHeaTra.mDCal1.mDotD[3] := tan.buoHeaTra.buoMasIn.mFloIn[3]-
    tan.buoHeaTra.buoMasIn.mFloOutFlu[3]+tan.buoHeaTra.mDCal1.mDotD[2];
  tan.buoHeaTra.mDCal1.mDotD[4] := tan.buoHeaTra.buoMasIn.mFloIn[4]-
    tan.buoHeaTra.buoMasIn.mFloOutFlu[4]+tan.buoHeaTra.mDCal1.mDotD[3];
  tan.buoHeaTra.mDCal1.mDotD[5] := tan.buoHeaTra.buoMasIn.mFloIn[5]-
    tan.buoHeaTra.buoMasIn.mFloOutFlu[5]+tan.buoHeaTra.mDCal1.mDotD[4];
  tan.buoHeaTra.mDCal1.mDotD[6] := tan.buoHeaTra.buoMasIn.mFloIn[6]-
    tan.buoHeaTra.buoMasIn.mFloOutFlu[6]+tan.buoHeaTra.mDCal1.mDotD[5];
  tan.buoHeaTra.mDCal1.mDotD[7] := tan.buoHeaTra.buoMasIn.mFloIn[7]-
    tan.buoHeaTra.buoMasIn.mFloOutFlu[7]+tan.buoHeaTra.mDCal1.mDotD[6];
  tan.buoHeaTra.mDCal1.mDotD[8] := tan.buoHeaTra.buoMasIn.mFloIn[8]-
    tan.buoHeaTra.buoMasIn.mFloOutFlu[8]+tan.buoHeaTra.mDCal1.mDotD[7];
  tan.buoHeaTra.mDCal1.mDotD[9] := tan.buoHeaTra.buoMasIn.mFloIn[9]-
    tan.buoHeaTra.buoMasIn.mFloOutFlu[9]+tan.buoHeaTra.mDCal1.mDotD[8];
  tan.buoHeaTra.buoHeaTra[10] := tan.buoHeaTra.dH_BU.dH_BU[10]+tan.buoHeaTra.qBuo.c_p
    *tan.buoHeaTra.qBuo.m_flow_C*(tan.buoHeaTra.buoMasIn.TWat[9]-
    tan.buoHeaTra.buoMasIn.TWat[10])+tan.buoHeaTra.mDCal1.mDotD[9]*
    tan.buoHeaTra.qBuo.c_p*(tan.buoHeaTra.buoMasIn.TWat[9]-tan.buoHeaTra.buoMasIn.TWat[10]);
  tan.prescribedHeatFlow[10].port.Q_flow :=  -tan.buoHeaTra.buoHeaTra[10]*(1+
    tan.prescribedHeatFlow[10].alpha*(tan.buoHeaTra.buoMasIn.TWat[10]-
    tan.prescribedHeatFlow[10].T_ref));
  der(tan.vol[10].dynBal.U) := tan.convConBou8[10].Q_flow-(tan.buoHeaTra.QDotFlu[10]
    +tan.conOpa3.opa_a.Q_flow+tan.conExt[10].opa_a.Q_flow)-tan.prescribedHeatFlow1[10].port.Q_flow
    -tan.prescribedHeatFlow[10].port.Q_flow;
  tan.vol[10].dynBal.medium.state.phase := (if tan.vol[10].dynBal.medium.h < 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.hvl_p(
    tan.vol[10].dynBal.medium.p, 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.boilingcurve_p(
      tan.vol[10].dynBal.medium.p)) or tan.vol[10].dynBal.medium.h > 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.hvl_p(
    tan.vol[10].dynBal.medium.p, 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.dewcurve_p(
      tan.vol[10].dynBal.medium.p)) or tan.vol[10].dynBal.medium.p > 22064000.0
     then 1 else 2);
  tan.vol[10].dynBal.medium.d := Modelica.Media.Water.IF97_Utilities.rho_props_ph
    (
    tan.vol[10].dynBal.medium.p, 
    tan.vol[10].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[10].dynBal.medium.p,
       tan.vol[10].dynBal.medium.h, tan.vol[10].dynBal.medium.state.phase, 0));
  tan.vol[10].dynBal.m := tan.vol[10].V*tan.vol[10].dynBal.medium.d;

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
       -tan.vol[10].dynBal.m*der(tan.vol[10].dynBal.medium.u) =  -
        der(tan.vol[10].dynBal.U);
      */
      der(tan.vol[10].dynBal.medium.u) := der(tan.vol[10].dynBal.U)/
        tan.vol[10].dynBal.m;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      der(tan.vol[10].dynBal.medium.d) = Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[10].dynBal.medium.p, 
        tan.vol[10].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[10].dynBal.medium.p,
           tan.vol[10].dynBal.medium.h, tan.vol[10].dynBal.medium.state.phase, 0),
           
        der(tan.vol[10].dynBal.medium.p), 
        der(tan.vol[10].dynBal.medium.h));
      */
      der(tan.vol[10].dynBal.medium.p) :=  -(Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[10].dynBal.medium.p, 
        tan.vol[10].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[10].dynBal.medium.p,
           tan.vol[10].dynBal.medium.h, tan.vol[10].dynBal.medium.state.phase, 0),
           
        0.0, 
        1.0)*(der(tan.vol[10].dynBal.medium.u)-tan.vol[10].dynBal.medium.p*
        der(tan.vol[10].dynBal.medium.d)/tan.vol[10].dynBal.medium.d^2)-
        der(tan.vol[10].dynBal.medium.d))/(Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[10].dynBal.medium.p, 
        tan.vol[10].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[10].dynBal.medium.p,
           tan.vol[10].dynBal.medium.h, tan.vol[10].dynBal.medium.state.phase, 0),
           
        1.0, 
        0.0)+Modelica.Media.Water.IF97_Utilities.rho_ph_der(
        tan.vol[10].dynBal.medium.p, 
        tan.vol[10].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[10].dynBal.medium.p,
           tan.vol[10].dynBal.medium.h, tan.vol[10].dynBal.medium.state.phase, 0),
           
        0.0, 
        1.0)/tan.vol[10].dynBal.medium.d);

    // Torn part
      der(tan.vol[10].dynBal.medium.h) := der(tan.vol[10].dynBal.medium.u)-
        tan.vol[10].dynBal.medium.p*der(tan.vol[10].dynBal.medium.d)/
        tan.vol[10].dynBal.medium.d^2+der(tan.vol[10].dynBal.medium.p)/
        tan.vol[10].dynBal.medium.d;
  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.conExt[10].opa.lay[1].port_b.T-tan.conExt[10].opa.lay[2].T[1] = 
        tan.conExt[10].opa.Q_flow[2]/tan.conExt[10].opa.lay[2].UAnSta2;
      */
      tan.conExt[10].opa.lay[1].port_b.T := (tan.conExt[10].opa.lay[2].T[1]+
        tan.conExt[10].opa.lay[1].T[1]*tan.conExt[10].opa.lay[1].UAnSta2/
        tan.conExt[10].opa.lay[2].UAnSta2)/(1.0+tan.conExt[10].opa.lay[1].UAnSta2
        /tan.conExt[10].opa.lay[2].UAnSta2);

    // Torn part
      tan.conExt[10].opa.Q_flow[2] :=  -(tan.conExt[10].opa.lay[1].port_b.T-
        tan.conExt[10].opa.lay[1].T[1])*tan.conExt[10].opa.lay[1].UAnSta2;
  // End of linear system of equations


  // Nonlinear system of equations
  // Nonlinear system of equations number = 12.
    // It depends on the following parameters: 
    //   TDryBul.k
    //   TRadMea.k
    //   tan.conExt[10].opa.lay[2].UAnSta2
    //   tan.convConBou9[10].A
    //   tan.fsRadiationExchange1[10].A
    // It depends on the following timevarying variables: 
    //   tan.conExt[10].opa.lay[2].T[1]
    // Unknowns[1]: 
    //   tan.conExt[10].opa_b.T
  algorithm // Torn part
    tan.fsRadiationExchange1[10].port.Q_flow := 5.6704E-008*(TRadMea.k*
      tan.fsRadiationExchange1[10].A*(tan.conExt[10].opa_b.T^4-0.6561));
    tan.convConBou9[10].dT := tan.conExt[10].opa_b.T-TDryBul.k;
    tan.convConBou9[10].q_flow := noEvent(smooth(1, (if noEvent(tan.convConBou9[10].dT
       > 0) then 1.3*tan.convConBou9[10].dT^1.3333 else (-1.3)*( -
      tan.convConBou9[10].dT)^1.3333)));
    tan.convConBou9[10].Q_flow := tan.convConBou9[10].A*tan.convConBou9[10].q_flow;
    tan.conExt[10].opa_b.Q_flow := (tan.conExt[10].opa_b.T-tan.conExt[10].opa.lay[2].T[1])
      *tan.conExt[10].opa.lay[2].UAnSta2;

  equation // Residual equations
    0 = tan.conExt[10].opa_b.Q_flow+tan.convConBou9[10].Q_flow+tan.fsRadiationExchange1[10].port.Q_flow;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations


  der(tan.conExt[10].opa.lay[2].T[1]) := (tan.conExt[10].opa.Q_flow[2]+
    tan.conExt[10].opa_b.Q_flow)/tan.conExt[10].opa.lay[2].C;
  der(tan.conExt[10].opa.lay[1].T[1]) := (tan.conExt[10].opa_a.Q_flow-
    tan.conExt[10].opa.Q_flow[2])/tan.conExt[10].opa.lay[1].C;
  tan.convConBou8[8].dT := TDryBul.k-tan.buoHeaTra.buoMasIn.TWat[8];
  tan.convConBou8[8].q_flow := 0.2*tan.convConBou8[8].dT;
  tan.convConBou8[8].Q_flow := tan.convConBou8[8].A*tan.convConBou8[8].q_flow;

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.conExt[8].opa_a.T-tan.conExt[8].opa.lay[1].T[1] = tan.conExt[8].opa_a.Q_flow
        /tan.conExt[8].opa.lay[1].UAnSta2;
      */
      tan.convConBou4[8].dT := (tan.conExt[8].opa.lay[1].T[1]-tan.buoHeaTra.buoMasIn.TWat[8])
        /(1.0+tan.convConBou4[8].A*tan.convConBou1[8].u/tan.conExt[8].opa.lay[1].UAnSta2);

    // Torn part
      tan.conExt[8].opa_a.T := tan.convConBou4[8].dT+tan.buoHeaTra.buoMasIn.TWat[8];
      tan.convConBou4[8].q_flow := tan.convConBou1[8].u*tan.convConBou4[8].dT;
      tan.conExt[8].opa_a.Q_flow :=  -tan.convConBou4[8].A*tan.convConBou4[8].q_flow;
  // End of linear system of equations

  tan.draHeaTra.draHeaTra[8] := m_flow_in[8].k*tan.draHeaTra.c_p*(
    tan.buoHeaTra.buoMasIn.TWat[9]-tan.buoHeaTra.buoMasIn.TWat[8]);
  tan.prescribedHeatFlow1[8].port.Q_flow :=  -tan.draHeaTra.draHeaTra[8]*(1+
    tan.prescribedHeatFlow1[8].alpha*(tan.buoHeaTra.buoMasIn.TWat[8]-
    tan.prescribedHeatFlow1[8].T_ref));
  tan.buoHeaTra.buoHeaTra[8] := tan.buoHeaTra.dH_BU.dH_BU[8]+tan.buoHeaTra.qBuo.c_p
    *tan.buoHeaTra.mDCal1.mDotD[7]*(tan.buoHeaTra.buoMasIn.TWat[7]-
    tan.buoHeaTra.buoMasIn.TWat[8])+tan.buoHeaTra.qBuo.c_p*tan.buoHeaTra.qBuo.m_flow_C
    *(tan.buoHeaTra.buoMasIn.TWat[7]-tan.buoHeaTra.buoMasIn.TWat[8])-
    tan.buoHeaTra.qBuo.c_p*tan.buoHeaTra.qBuo.m_flow_C*(tan.buoHeaTra.buoMasIn.TWat[8]
    -tan.buoHeaTra.buoMasIn.TWat[9]);
  tan.prescribedHeatFlow[8].port.Q_flow :=  -tan.buoHeaTra.buoHeaTra[8]*(1+
    tan.prescribedHeatFlow[8].alpha*(tan.buoHeaTra.buoMasIn.TWat[8]-
    tan.prescribedHeatFlow[8].T_ref));
  der(tan.vol[8].dynBal.U) := tan.convConBou8[8].Q_flow-(tan.buoHeaTra.QDotFlu[8]
    +tan.conExt[8].opa_a.Q_flow)-tan.prescribedHeatFlow1[8].port.Q_flow-
    tan.prescribedHeatFlow[8].port.Q_flow;
  tan.vol[8].dynBal.medium.state.phase := (if tan.vol[8].dynBal.medium.h < 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.hvl_p(
    tan.vol[8].dynBal.medium.p, 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.boilingcurve_p(
      tan.vol[8].dynBal.medium.p)) or tan.vol[8].dynBal.medium.h > 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.hvl_p(
    tan.vol[8].dynBal.medium.p, 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.dewcurve_p(
      tan.vol[8].dynBal.medium.p)) or tan.vol[8].dynBal.medium.p > 22064000.0
     then 1 else 2);
  tan.vol[8].dynBal.medium.d := Modelica.Media.Water.IF97_Utilities.rho_props_ph
    (
    tan.vol[8].dynBal.medium.p, 
    tan.vol[8].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[8].dynBal.medium.p,
       tan.vol[8].dynBal.medium.h, tan.vol[8].dynBal.medium.state.phase, 0));
  tan.vol[8].dynBal.m := tan.vol[8].V*tan.vol[8].dynBal.medium.d;

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
       -tan.vol[8].dynBal.m*der(tan.vol[8].dynBal.medium.u) =  -der(tan.vol[8].dynBal.U);
      */
      der(tan.vol[8].dynBal.medium.u) := der(tan.vol[8].dynBal.U)/
        tan.vol[8].dynBal.m;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      der(tan.vol[8].dynBal.medium.d) = Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[8].dynBal.medium.p, 
        tan.vol[8].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[8].dynBal.medium.p,
           tan.vol[8].dynBal.medium.h, tan.vol[8].dynBal.medium.state.phase, 0),
           
        der(tan.vol[8].dynBal.medium.p), 
        der(tan.vol[8].dynBal.medium.h));
      */
      der(tan.vol[8].dynBal.medium.p) :=  -(Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[8].dynBal.medium.p, 
        tan.vol[8].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[8].dynBal.medium.p,
           tan.vol[8].dynBal.medium.h, tan.vol[8].dynBal.medium.state.phase, 0),
           
        0.0, 
        1.0)*(der(tan.vol[8].dynBal.medium.u)-tan.vol[8].dynBal.medium.p*
        der(tan.vol[8].dynBal.medium.d)/tan.vol[8].dynBal.medium.d^2)-
        der(tan.vol[8].dynBal.medium.d))/(Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[8].dynBal.medium.p, 
        tan.vol[8].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[8].dynBal.medium.p,
           tan.vol[8].dynBal.medium.h, tan.vol[8].dynBal.medium.state.phase, 0),
           
        1.0, 
        0.0)+Modelica.Media.Water.IF97_Utilities.rho_ph_der(
        tan.vol[8].dynBal.medium.p, 
        tan.vol[8].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[8].dynBal.medium.p,
           tan.vol[8].dynBal.medium.h, tan.vol[8].dynBal.medium.state.phase, 0),
           
        0.0, 
        1.0)/tan.vol[8].dynBal.medium.d);

    // Torn part
      der(tan.vol[8].dynBal.medium.h) := der(tan.vol[8].dynBal.medium.u)-
        tan.vol[8].dynBal.medium.p*der(tan.vol[8].dynBal.medium.d)/
        tan.vol[8].dynBal.medium.d^2+der(tan.vol[8].dynBal.medium.p)/
        tan.vol[8].dynBal.medium.d;
  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.conExt[8].opa.lay[1].port_b.T-tan.conExt[8].opa.lay[2].T[1] = 
        tan.conExt[8].opa.Q_flow[2]/tan.conExt[8].opa.lay[2].UAnSta2;
      */
      tan.conExt[8].opa.lay[1].port_b.T := (tan.conExt[8].opa.lay[2].T[1]+
        tan.conExt[8].opa.lay[1].T[1]*tan.conExt[8].opa.lay[1].UAnSta2/
        tan.conExt[8].opa.lay[2].UAnSta2)/(1.0+tan.conExt[8].opa.lay[1].UAnSta2/
        tan.conExt[8].opa.lay[2].UAnSta2);

    // Torn part
      tan.conExt[8].opa.Q_flow[2] :=  -(tan.conExt[8].opa.lay[1].port_b.T-
        tan.conExt[8].opa.lay[1].T[1])*tan.conExt[8].opa.lay[1].UAnSta2;
  // End of linear system of equations


  // Nonlinear system of equations
  // Nonlinear system of equations number = 13.
    // It depends on the following parameters: 
    //   TDryBul.k
    //   TRadMea.k
    //   tan.conExt[8].opa.lay[2].UAnSta2
    //   tan.convConBou9[8].A
    //   tan.fsRadiationExchange1[8].A
    // It depends on the following timevarying variables: 
    //   tan.conExt[8].opa.lay[2].T[1]
    // Unknowns[1]: 
    //   tan.conExt[8].opa_b.T
  algorithm // Torn part
    tan.fsRadiationExchange1[8].port.Q_flow := 5.6704E-008*(TRadMea.k*
      tan.fsRadiationExchange1[8].A*(tan.conExt[8].opa_b.T^4-0.6561));
    tan.convConBou9[8].dT := tan.conExt[8].opa_b.T-TDryBul.k;
    tan.convConBou9[8].q_flow := noEvent(smooth(1, (if noEvent(tan.convConBou9[8].dT
       > 0) then 1.3*tan.convConBou9[8].dT^1.3333 else (-1.3)*( -
      tan.convConBou9[8].dT)^1.3333)));
    tan.convConBou9[8].Q_flow := tan.convConBou9[8].A*tan.convConBou9[8].q_flow;
    tan.conExt[8].opa_b.Q_flow := (tan.conExt[8].opa_b.T-tan.conExt[8].opa.lay[2].T[1])
      *tan.conExt[8].opa.lay[2].UAnSta2;

  equation // Residual equations
    0 = tan.conExt[8].opa_b.Q_flow+tan.convConBou9[8].Q_flow+tan.fsRadiationExchange1[8].port.Q_flow;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations


  der(tan.conExt[8].opa.lay[2].T[1]) := (tan.conExt[8].opa.Q_flow[2]+
    tan.conExt[8].opa_b.Q_flow)/tan.conExt[8].opa.lay[2].C;
  der(tan.conExt[8].opa.lay[1].T[1]) := (tan.conExt[8].opa_a.Q_flow-
    tan.conExt[8].opa.Q_flow[2])/tan.conExt[8].opa.lay[1].C;
  tan.convConBou8[9].dT := TDryBul.k-tan.buoHeaTra.buoMasIn.TWat[9];
  tan.convConBou8[9].q_flow := 0.2*tan.convConBou8[9].dT;
  tan.convConBou8[9].Q_flow := tan.convConBou8[9].A*tan.convConBou8[9].q_flow;

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.conExt[9].opa_a.T-tan.conExt[9].opa.lay[1].T[1] = tan.conExt[9].opa_a.Q_flow
        /tan.conExt[9].opa.lay[1].UAnSta2;
      */
      tan.convConBou4[9].dT := (tan.conExt[9].opa.lay[1].T[1]-tan.buoHeaTra.buoMasIn.TWat[9])
        /(1.0+tan.convConBou4[9].A*tan.convConBou1[9].u/tan.conExt[9].opa.lay[1].UAnSta2);

    // Torn part
      tan.conExt[9].opa_a.T := tan.convConBou4[9].dT+tan.buoHeaTra.buoMasIn.TWat[9];
      tan.convConBou4[9].q_flow := tan.convConBou1[9].u*tan.convConBou4[9].dT;
      tan.conExt[9].opa_a.Q_flow :=  -tan.convConBou4[9].A*tan.convConBou4[9].q_flow;
  // End of linear system of equations

  tan.draHeaTra.draHeaTra[9] := m_flow_in[9].k*tan.draHeaTra.c_p*(
    tan.buoHeaTra.buoMasIn.TWat[10]-tan.buoHeaTra.buoMasIn.TWat[9]);
  tan.prescribedHeatFlow1[9].port.Q_flow :=  -tan.draHeaTra.draHeaTra[9]*(1+
    tan.prescribedHeatFlow1[9].alpha*(tan.buoHeaTra.buoMasIn.TWat[9]-
    tan.prescribedHeatFlow1[9].T_ref));
  tan.buoHeaTra.buoHeaTra[9] := tan.buoHeaTra.dH_BU.dH_BU[9]+tan.buoHeaTra.qBuo.c_p
    *tan.buoHeaTra.mDCal1.mDotD[8]*(tan.buoHeaTra.buoMasIn.TWat[8]-
    tan.buoHeaTra.buoMasIn.TWat[9])+tan.buoHeaTra.qBuo.c_p*tan.buoHeaTra.qBuo.m_flow_C
    *(tan.buoHeaTra.buoMasIn.TWat[8]-tan.buoHeaTra.buoMasIn.TWat[9])-
    tan.buoHeaTra.qBuo.c_p*tan.buoHeaTra.qBuo.m_flow_C*(tan.buoHeaTra.buoMasIn.TWat[9]
    -tan.buoHeaTra.buoMasIn.TWat[10]);
  tan.prescribedHeatFlow[9].port.Q_flow :=  -tan.buoHeaTra.buoHeaTra[9]*(1+
    tan.prescribedHeatFlow[9].alpha*(tan.buoHeaTra.buoMasIn.TWat[9]-
    tan.prescribedHeatFlow[9].T_ref));
  der(tan.vol[9].dynBal.U) := tan.convConBou8[9].Q_flow-(tan.buoHeaTra.QDotFlu[9]
    +tan.conExt[9].opa_a.Q_flow)-tan.prescribedHeatFlow1[9].port.Q_flow-
    tan.prescribedHeatFlow[9].port.Q_flow;
  tan.vol[9].dynBal.medium.state.phase := (if tan.vol[9].dynBal.medium.h < 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.hvl_p(
    tan.vol[9].dynBal.medium.p, 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.boilingcurve_p(
      tan.vol[9].dynBal.medium.p)) or tan.vol[9].dynBal.medium.h > 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.hvl_p(
    tan.vol[9].dynBal.medium.p, 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.dewcurve_p(
      tan.vol[9].dynBal.medium.p)) or tan.vol[9].dynBal.medium.p > 22064000.0
     then 1 else 2);
  tan.vol[9].dynBal.medium.d := Modelica.Media.Water.IF97_Utilities.rho_props_ph
    (
    tan.vol[9].dynBal.medium.p, 
    tan.vol[9].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[9].dynBal.medium.p,
       tan.vol[9].dynBal.medium.h, tan.vol[9].dynBal.medium.state.phase, 0));
  tan.vol[9].dynBal.m := tan.vol[9].V*tan.vol[9].dynBal.medium.d;

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
       -tan.vol[9].dynBal.m*der(tan.vol[9].dynBal.medium.u) =  -der(tan.vol[9].dynBal.U);
      */
      der(tan.vol[9].dynBal.medium.u) := der(tan.vol[9].dynBal.U)/
        tan.vol[9].dynBal.m;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      der(tan.vol[9].dynBal.medium.d) = Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[9].dynBal.medium.p, 
        tan.vol[9].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[9].dynBal.medium.p,
           tan.vol[9].dynBal.medium.h, tan.vol[9].dynBal.medium.state.phase, 0),
           
        der(tan.vol[9].dynBal.medium.p), 
        der(tan.vol[9].dynBal.medium.h));
      */
      der(tan.vol[9].dynBal.medium.p) :=  -(Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[9].dynBal.medium.p, 
        tan.vol[9].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[9].dynBal.medium.p,
           tan.vol[9].dynBal.medium.h, tan.vol[9].dynBal.medium.state.phase, 0),
           
        0.0, 
        1.0)*(der(tan.vol[9].dynBal.medium.u)-tan.vol[9].dynBal.medium.p*
        der(tan.vol[9].dynBal.medium.d)/tan.vol[9].dynBal.medium.d^2)-
        der(tan.vol[9].dynBal.medium.d))/(Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[9].dynBal.medium.p, 
        tan.vol[9].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[9].dynBal.medium.p,
           tan.vol[9].dynBal.medium.h, tan.vol[9].dynBal.medium.state.phase, 0),
           
        1.0, 
        0.0)+Modelica.Media.Water.IF97_Utilities.rho_ph_der(
        tan.vol[9].dynBal.medium.p, 
        tan.vol[9].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[9].dynBal.medium.p,
           tan.vol[9].dynBal.medium.h, tan.vol[9].dynBal.medium.state.phase, 0),
           
        0.0, 
        1.0)/tan.vol[9].dynBal.medium.d);

    // Torn part
      der(tan.vol[9].dynBal.medium.h) := der(tan.vol[9].dynBal.medium.u)-
        tan.vol[9].dynBal.medium.p*der(tan.vol[9].dynBal.medium.d)/
        tan.vol[9].dynBal.medium.d^2+der(tan.vol[9].dynBal.medium.p)/
        tan.vol[9].dynBal.medium.d;
  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.conExt[9].opa.lay[1].port_b.T-tan.conExt[9].opa.lay[2].T[1] = 
        tan.conExt[9].opa.Q_flow[2]/tan.conExt[9].opa.lay[2].UAnSta2;
      */
      tan.conExt[9].opa.lay[1].port_b.T := (tan.conExt[9].opa.lay[2].T[1]+
        tan.conExt[9].opa.lay[1].T[1]*tan.conExt[9].opa.lay[1].UAnSta2/
        tan.conExt[9].opa.lay[2].UAnSta2)/(1.0+tan.conExt[9].opa.lay[1].UAnSta2/
        tan.conExt[9].opa.lay[2].UAnSta2);

    // Torn part
      tan.conExt[9].opa.Q_flow[2] :=  -(tan.conExt[9].opa.lay[1].port_b.T-
        tan.conExt[9].opa.lay[1].T[1])*tan.conExt[9].opa.lay[1].UAnSta2;
  // End of linear system of equations


  // Nonlinear system of equations
  // Nonlinear system of equations number = 14.
    // It depends on the following parameters: 
    //   TDryBul.k
    //   TRadMea.k
    //   tan.conExt[9].opa.lay[2].UAnSta2
    //   tan.convConBou9[9].A
    //   tan.fsRadiationExchange1[9].A
    // It depends on the following timevarying variables: 
    //   tan.conExt[9].opa.lay[2].T[1]
    // Unknowns[1]: 
    //   tan.conExt[9].opa_b.T
  algorithm // Torn part
    tan.fsRadiationExchange1[9].port.Q_flow := 5.6704E-008*(TRadMea.k*
      tan.fsRadiationExchange1[9].A*(tan.conExt[9].opa_b.T^4-0.6561));
    tan.convConBou9[9].dT := tan.conExt[9].opa_b.T-TDryBul.k;
    tan.convConBou9[9].q_flow := noEvent(smooth(1, (if noEvent(tan.convConBou9[9].dT
       > 0) then 1.3*tan.convConBou9[9].dT^1.3333 else (-1.3)*( -
      tan.convConBou9[9].dT)^1.3333)));
    tan.convConBou9[9].Q_flow := tan.convConBou9[9].A*tan.convConBou9[9].q_flow;
    tan.conExt[9].opa_b.Q_flow := (tan.conExt[9].opa_b.T-tan.conExt[9].opa.lay[2].T[1])
      *tan.conExt[9].opa.lay[2].UAnSta2;

  equation // Residual equations
    0 = tan.conExt[9].opa_b.Q_flow+tan.convConBou9[9].Q_flow+tan.fsRadiationExchange1[9].port.Q_flow;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations


  der(tan.conExt[9].opa.lay[2].T[1]) := (tan.conExt[9].opa.Q_flow[2]+
    tan.conExt[9].opa_b.Q_flow)/tan.conExt[9].opa.lay[2].C;
  der(tan.conExt[9].opa.lay[1].T[1]) := (tan.conExt[9].opa_a.Q_flow-
    tan.conExt[9].opa.Q_flow[2])/tan.conExt[9].opa.lay[1].C;
  tan.convConBou8[6].dT := TDryBul.k-tan.buoHeaTra.buoMasIn.TWat[6];
  tan.convConBou8[6].q_flow := 0.2*tan.convConBou8[6].dT;
  tan.convConBou8[6].Q_flow := tan.convConBou8[6].A*tan.convConBou8[6].q_flow;

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.conExt[6].opa_a.T-tan.conExt[6].opa.lay[1].T[1] = tan.conExt[6].opa_a.Q_flow
        /tan.conExt[6].opa.lay[1].UAnSta2;
      */
      tan.convConBou4[6].dT := (tan.conExt[6].opa.lay[1].T[1]-tan.buoHeaTra.buoMasIn.TWat[6])
        /(1.0+tan.convConBou4[6].A*tan.convConBou1[6].u/tan.conExt[6].opa.lay[1].UAnSta2);

    // Torn part
      tan.conExt[6].opa_a.T := tan.convConBou4[6].dT+tan.buoHeaTra.buoMasIn.TWat[6];
      tan.convConBou4[6].q_flow := tan.convConBou1[6].u*tan.convConBou4[6].dT;
      tan.conExt[6].opa_a.Q_flow :=  -tan.convConBou4[6].A*tan.convConBou4[6].q_flow;
  // End of linear system of equations

  tan.draHeaTra.draHeaTra[6] := m_flow_in[6].k*tan.draHeaTra.c_p*(
    tan.buoHeaTra.buoMasIn.TWat[7]-tan.buoHeaTra.buoMasIn.TWat[6]);
  tan.prescribedHeatFlow1[6].port.Q_flow :=  -tan.draHeaTra.draHeaTra[6]*(1+
    tan.prescribedHeatFlow1[6].alpha*(tan.buoHeaTra.buoMasIn.TWat[6]-
    tan.prescribedHeatFlow1[6].T_ref));
  tan.buoHeaTra.buoHeaTra[6] := tan.buoHeaTra.dH_BU.dH_BU[6]+tan.buoHeaTra.qBuo.c_p
    *tan.buoHeaTra.mDCal1.mDotD[5]*(tan.buoHeaTra.buoMasIn.TWat[5]-
    tan.buoHeaTra.buoMasIn.TWat[6])+tan.buoHeaTra.qBuo.c_p*tan.buoHeaTra.qBuo.m_flow_C
    *(tan.buoHeaTra.buoMasIn.TWat[5]-tan.buoHeaTra.buoMasIn.TWat[6])-
    tan.buoHeaTra.qBuo.c_p*tan.buoHeaTra.qBuo.m_flow_C*(tan.buoHeaTra.buoMasIn.TWat[6]
    -tan.buoHeaTra.buoMasIn.TWat[7]);
  tan.prescribedHeatFlow[6].port.Q_flow :=  -tan.buoHeaTra.buoHeaTra[6]*(1+
    tan.prescribedHeatFlow[6].alpha*(tan.buoHeaTra.buoMasIn.TWat[6]-
    tan.prescribedHeatFlow[6].T_ref));
  der(tan.vol[6].dynBal.U) := tan.convConBou8[6].Q_flow-(tan.buoHeaTra.QDotFlu[6]
    +tan.conExt[6].opa_a.Q_flow)-tan.prescribedHeatFlow1[6].port.Q_flow-
    tan.prescribedHeatFlow[6].port.Q_flow;
  tan.vol[6].dynBal.medium.state.phase := (if tan.vol[6].dynBal.medium.h < 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.hvl_p(
    tan.vol[6].dynBal.medium.p, 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.boilingcurve_p(
      tan.vol[6].dynBal.medium.p)) or tan.vol[6].dynBal.medium.h > 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.hvl_p(
    tan.vol[6].dynBal.medium.p, 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.dewcurve_p(
      tan.vol[6].dynBal.medium.p)) or tan.vol[6].dynBal.medium.p > 22064000.0
     then 1 else 2);
  tan.vol[6].dynBal.medium.d := Modelica.Media.Water.IF97_Utilities.rho_props_ph
    (
    tan.vol[6].dynBal.medium.p, 
    tan.vol[6].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[6].dynBal.medium.p,
       tan.vol[6].dynBal.medium.h, tan.vol[6].dynBal.medium.state.phase, 0));
  tan.vol[6].dynBal.m := tan.vol[6].V*tan.vol[6].dynBal.medium.d;

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
       -tan.vol[6].dynBal.m*der(tan.vol[6].dynBal.medium.u) =  -der(tan.vol[6].dynBal.U);
      */
      der(tan.vol[6].dynBal.medium.u) := der(tan.vol[6].dynBal.U)/
        tan.vol[6].dynBal.m;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      der(tan.vol[6].dynBal.medium.d) = Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[6].dynBal.medium.p, 
        tan.vol[6].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[6].dynBal.medium.p,
           tan.vol[6].dynBal.medium.h, tan.vol[6].dynBal.medium.state.phase, 0),
           
        der(tan.vol[6].dynBal.medium.p), 
        der(tan.vol[6].dynBal.medium.h));
      */
      der(tan.vol[6].dynBal.medium.p) :=  -(Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[6].dynBal.medium.p, 
        tan.vol[6].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[6].dynBal.medium.p,
           tan.vol[6].dynBal.medium.h, tan.vol[6].dynBal.medium.state.phase, 0),
           
        0.0, 
        1.0)*(der(tan.vol[6].dynBal.medium.u)-tan.vol[6].dynBal.medium.p*
        der(tan.vol[6].dynBal.medium.d)/tan.vol[6].dynBal.medium.d^2)-
        der(tan.vol[6].dynBal.medium.d))/(Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[6].dynBal.medium.p, 
        tan.vol[6].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[6].dynBal.medium.p,
           tan.vol[6].dynBal.medium.h, tan.vol[6].dynBal.medium.state.phase, 0),
           
        1.0, 
        0.0)+Modelica.Media.Water.IF97_Utilities.rho_ph_der(
        tan.vol[6].dynBal.medium.p, 
        tan.vol[6].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[6].dynBal.medium.p,
           tan.vol[6].dynBal.medium.h, tan.vol[6].dynBal.medium.state.phase, 0),
           
        0.0, 
        1.0)/tan.vol[6].dynBal.medium.d);

    // Torn part
      der(tan.vol[6].dynBal.medium.h) := der(tan.vol[6].dynBal.medium.u)-
        tan.vol[6].dynBal.medium.p*der(tan.vol[6].dynBal.medium.d)/
        tan.vol[6].dynBal.medium.d^2+der(tan.vol[6].dynBal.medium.p)/
        tan.vol[6].dynBal.medium.d;
  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.conExt[6].opa.lay[1].port_b.T-tan.conExt[6].opa.lay[2].T[1] = 
        tan.conExt[6].opa.Q_flow[2]/tan.conExt[6].opa.lay[2].UAnSta2;
      */
      tan.conExt[6].opa.lay[1].port_b.T := (tan.conExt[6].opa.lay[2].T[1]+
        tan.conExt[6].opa.lay[1].T[1]*tan.conExt[6].opa.lay[1].UAnSta2/
        tan.conExt[6].opa.lay[2].UAnSta2)/(1.0+tan.conExt[6].opa.lay[1].UAnSta2/
        tan.conExt[6].opa.lay[2].UAnSta2);

    // Torn part
      tan.conExt[6].opa.Q_flow[2] :=  -(tan.conExt[6].opa.lay[1].port_b.T-
        tan.conExt[6].opa.lay[1].T[1])*tan.conExt[6].opa.lay[1].UAnSta2;
  // End of linear system of equations


  // Nonlinear system of equations
  // Nonlinear system of equations number = 15.
    // It depends on the following parameters: 
    //   TDryBul.k
    //   TRadMea.k
    //   tan.conExt[6].opa.lay[2].UAnSta2
    //   tan.convConBou9[6].A
    //   tan.fsRadiationExchange1[6].A
    // It depends on the following timevarying variables: 
    //   tan.conExt[6].opa.lay[2].T[1]
    // Unknowns[1]: 
    //   tan.conExt[6].opa_b.T
  algorithm // Torn part
    tan.fsRadiationExchange1[6].port.Q_flow := 5.6704E-008*(TRadMea.k*
      tan.fsRadiationExchange1[6].A*(tan.conExt[6].opa_b.T^4-0.6561));
    tan.convConBou9[6].dT := tan.conExt[6].opa_b.T-TDryBul.k;
    tan.convConBou9[6].q_flow := noEvent(smooth(1, (if noEvent(tan.convConBou9[6].dT
       > 0) then 1.3*tan.convConBou9[6].dT^1.3333 else (-1.3)*( -
      tan.convConBou9[6].dT)^1.3333)));
    tan.convConBou9[6].Q_flow := tan.convConBou9[6].A*tan.convConBou9[6].q_flow;
    tan.conExt[6].opa_b.Q_flow := (tan.conExt[6].opa_b.T-tan.conExt[6].opa.lay[2].T[1])
      *tan.conExt[6].opa.lay[2].UAnSta2;

  equation // Residual equations
    0 = tan.conExt[6].opa_b.Q_flow+tan.convConBou9[6].Q_flow+tan.fsRadiationExchange1[6].port.Q_flow;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations


  der(tan.conExt[6].opa.lay[2].T[1]) := (tan.conExt[6].opa.Q_flow[2]+
    tan.conExt[6].opa_b.Q_flow)/tan.conExt[6].opa.lay[2].C;
  der(tan.conExt[6].opa.lay[1].T[1]) := (tan.conExt[6].opa_a.Q_flow-
    tan.conExt[6].opa.Q_flow[2])/tan.conExt[6].opa.lay[1].C;
  tan.convConBou8[5].dT := TDryBul.k-tan.buoHeaTra.buoMasIn.TWat[5];
  tan.convConBou8[5].q_flow := 0.2*tan.convConBou8[5].dT;
  tan.convConBou8[5].Q_flow := tan.convConBou8[5].A*tan.convConBou8[5].q_flow;

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.conExt[5].opa_a.T-tan.conExt[5].opa.lay[1].T[1] = tan.conExt[5].opa_a.Q_flow
        /tan.conExt[5].opa.lay[1].UAnSta2;
      */
      tan.convConBou4[5].dT := (tan.conExt[5].opa.lay[1].T[1]-tan.buoHeaTra.buoMasIn.TWat[5])
        /(1.0+tan.convConBou4[5].A*tan.convConBou1[5].u/tan.conExt[5].opa.lay[1].UAnSta2);

    // Torn part
      tan.conExt[5].opa_a.T := tan.convConBou4[5].dT+tan.buoHeaTra.buoMasIn.TWat[5];
      tan.convConBou4[5].q_flow := tan.convConBou1[5].u*tan.convConBou4[5].dT;
      tan.conExt[5].opa_a.Q_flow :=  -tan.convConBou4[5].A*tan.convConBou4[5].q_flow;
  // End of linear system of equations

  tan.draHeaTra.draHeaTra[5] := m_flow_in[5].k*tan.draHeaTra.c_p*(
    tan.buoHeaTra.buoMasIn.TWat[6]-tan.buoHeaTra.buoMasIn.TWat[5]);
  tan.prescribedHeatFlow1[5].port.Q_flow :=  -tan.draHeaTra.draHeaTra[5]*(1+
    tan.prescribedHeatFlow1[5].alpha*(tan.buoHeaTra.buoMasIn.TWat[5]-
    tan.prescribedHeatFlow1[5].T_ref));
  tan.buoHeaTra.buoHeaTra[5] := tan.buoHeaTra.dH_BU.dH_BU[5]+tan.buoHeaTra.qBuo.c_p
    *tan.buoHeaTra.mDCal1.mDotD[4]*(tan.buoHeaTra.buoMasIn.TWat[4]-
    tan.buoHeaTra.buoMasIn.TWat[5])+tan.buoHeaTra.qBuo.c_p*tan.buoHeaTra.qBuo.m_flow_C
    *(tan.buoHeaTra.buoMasIn.TWat[4]-tan.buoHeaTra.buoMasIn.TWat[5])-
    tan.buoHeaTra.qBuo.c_p*tan.buoHeaTra.qBuo.m_flow_C*(tan.buoHeaTra.buoMasIn.TWat[5]
    -tan.buoHeaTra.buoMasIn.TWat[6]);
  tan.prescribedHeatFlow[5].port.Q_flow :=  -tan.buoHeaTra.buoHeaTra[5]*(1+
    tan.prescribedHeatFlow[5].alpha*(tan.buoHeaTra.buoMasIn.TWat[5]-
    tan.prescribedHeatFlow[5].T_ref));
  der(tan.vol[5].dynBal.U) := tan.convConBou8[5].Q_flow-(tan.buoHeaTra.QDotFlu[5]
    +tan.conExt[5].opa_a.Q_flow)-tan.prescribedHeatFlow1[5].port.Q_flow-
    tan.prescribedHeatFlow[5].port.Q_flow;
  tan.vol[5].dynBal.medium.state.phase := (if tan.vol[5].dynBal.medium.h < 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.hvl_p(
    tan.vol[5].dynBal.medium.p, 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.boilingcurve_p(
      tan.vol[5].dynBal.medium.p)) or tan.vol[5].dynBal.medium.h > 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.hvl_p(
    tan.vol[5].dynBal.medium.p, 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.dewcurve_p(
      tan.vol[5].dynBal.medium.p)) or tan.vol[5].dynBal.medium.p > 22064000.0
     then 1 else 2);
  tan.vol[5].dynBal.medium.d := Modelica.Media.Water.IF97_Utilities.rho_props_ph
    (
    tan.vol[5].dynBal.medium.p, 
    tan.vol[5].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[5].dynBal.medium.p,
       tan.vol[5].dynBal.medium.h, tan.vol[5].dynBal.medium.state.phase, 0));
  tan.vol[5].dynBal.m := tan.vol[5].V*tan.vol[5].dynBal.medium.d;

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
       -tan.vol[5].dynBal.m*der(tan.vol[5].dynBal.medium.u) =  -der(tan.vol[5].dynBal.U);
      */
      der(tan.vol[5].dynBal.medium.u) := der(tan.vol[5].dynBal.U)/
        tan.vol[5].dynBal.m;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      der(tan.vol[5].dynBal.medium.d) = Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[5].dynBal.medium.p, 
        tan.vol[5].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[5].dynBal.medium.p,
           tan.vol[5].dynBal.medium.h, tan.vol[5].dynBal.medium.state.phase, 0),
           
        der(tan.vol[5].dynBal.medium.p), 
        der(tan.vol[5].dynBal.medium.h));
      */
      der(tan.vol[5].dynBal.medium.p) :=  -(Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[5].dynBal.medium.p, 
        tan.vol[5].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[5].dynBal.medium.p,
           tan.vol[5].dynBal.medium.h, tan.vol[5].dynBal.medium.state.phase, 0),
           
        0.0, 
        1.0)*(der(tan.vol[5].dynBal.medium.u)-tan.vol[5].dynBal.medium.p*
        der(tan.vol[5].dynBal.medium.d)/tan.vol[5].dynBal.medium.d^2)-
        der(tan.vol[5].dynBal.medium.d))/(Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[5].dynBal.medium.p, 
        tan.vol[5].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[5].dynBal.medium.p,
           tan.vol[5].dynBal.medium.h, tan.vol[5].dynBal.medium.state.phase, 0),
           
        1.0, 
        0.0)+Modelica.Media.Water.IF97_Utilities.rho_ph_der(
        tan.vol[5].dynBal.medium.p, 
        tan.vol[5].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[5].dynBal.medium.p,
           tan.vol[5].dynBal.medium.h, tan.vol[5].dynBal.medium.state.phase, 0),
           
        0.0, 
        1.0)/tan.vol[5].dynBal.medium.d);

    // Torn part
      der(tan.vol[5].dynBal.medium.h) := der(tan.vol[5].dynBal.medium.u)-
        tan.vol[5].dynBal.medium.p*der(tan.vol[5].dynBal.medium.d)/
        tan.vol[5].dynBal.medium.d^2+der(tan.vol[5].dynBal.medium.p)/
        tan.vol[5].dynBal.medium.d;
  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.conExt[5].opa.lay[1].port_b.T-tan.conExt[5].opa.lay[2].T[1] = 
        tan.conExt[5].opa.Q_flow[2]/tan.conExt[5].opa.lay[2].UAnSta2;
      */
      tan.conExt[5].opa.lay[1].port_b.T := (tan.conExt[5].opa.lay[2].T[1]+
        tan.conExt[5].opa.lay[1].T[1]*tan.conExt[5].opa.lay[1].UAnSta2/
        tan.conExt[5].opa.lay[2].UAnSta2)/(1.0+tan.conExt[5].opa.lay[1].UAnSta2/
        tan.conExt[5].opa.lay[2].UAnSta2);

    // Torn part
      tan.conExt[5].opa.Q_flow[2] :=  -(tan.conExt[5].opa.lay[1].port_b.T-
        tan.conExt[5].opa.lay[1].T[1])*tan.conExt[5].opa.lay[1].UAnSta2;
  // End of linear system of equations


  // Nonlinear system of equations
  // Nonlinear system of equations number = 16.
    // It depends on the following parameters: 
    //   TDryBul.k
    //   TRadMea.k
    //   tan.conExt[5].opa.lay[2].UAnSta2
    //   tan.convConBou9[5].A
    //   tan.fsRadiationExchange1[5].A
    // It depends on the following timevarying variables: 
    //   tan.conExt[5].opa.lay[2].T[1]
    // Unknowns[1]: 
    //   tan.conExt[5].opa_b.T
  algorithm // Torn part
    tan.fsRadiationExchange1[5].port.Q_flow := 5.6704E-008*(TRadMea.k*
      tan.fsRadiationExchange1[5].A*(tan.conExt[5].opa_b.T^4-0.6561));
    tan.convConBou9[5].dT := tan.conExt[5].opa_b.T-TDryBul.k;
    tan.convConBou9[5].q_flow := noEvent(smooth(1, (if noEvent(tan.convConBou9[5].dT
       > 0) then 1.3*tan.convConBou9[5].dT^1.3333 else (-1.3)*( -
      tan.convConBou9[5].dT)^1.3333)));
    tan.convConBou9[5].Q_flow := tan.convConBou9[5].A*tan.convConBou9[5].q_flow;
    tan.conExt[5].opa_b.Q_flow := (tan.conExt[5].opa_b.T-tan.conExt[5].opa.lay[2].T[1])
      *tan.conExt[5].opa.lay[2].UAnSta2;

  equation // Residual equations
    0 = tan.conExt[5].opa_b.Q_flow+tan.convConBou9[5].Q_flow+tan.fsRadiationExchange1[5].port.Q_flow;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations


  der(tan.conExt[5].opa.lay[2].T[1]) := (tan.conExt[5].opa.Q_flow[2]+
    tan.conExt[5].opa_b.Q_flow)/tan.conExt[5].opa.lay[2].C;
  der(tan.conExt[5].opa.lay[1].T[1]) := (tan.conExt[5].opa_a.Q_flow-
    tan.conExt[5].opa.Q_flow[2])/tan.conExt[5].opa.lay[1].C;
  tan.convConBou8[4].dT := TDryBul.k-tan.buoHeaTra.buoMasIn.TWat[4];
  tan.convConBou8[4].q_flow := 0.2*tan.convConBou8[4].dT;
  tan.convConBou8[4].Q_flow := tan.convConBou8[4].A*tan.convConBou8[4].q_flow;

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.conExt[4].opa_a.T-tan.conExt[4].opa.lay[1].T[1] = tan.conExt[4].opa_a.Q_flow
        /tan.conExt[4].opa.lay[1].UAnSta2;
      */
      tan.convConBou4[4].dT := (tan.conExt[4].opa.lay[1].T[1]-tan.buoHeaTra.buoMasIn.TWat[4])
        /(1.0+tan.convConBou4[4].A*tan.convConBou1[4].u/tan.conExt[4].opa.lay[1].UAnSta2);

    // Torn part
      tan.conExt[4].opa_a.T := tan.convConBou4[4].dT+tan.buoHeaTra.buoMasIn.TWat[4];
      tan.convConBou4[4].q_flow := tan.convConBou1[4].u*tan.convConBou4[4].dT;
      tan.conExt[4].opa_a.Q_flow :=  -tan.convConBou4[4].A*tan.convConBou4[4].q_flow;
  // End of linear system of equations

  tan.draHeaTra.draHeaTra[4] := m_flow_in[4].k*tan.draHeaTra.c_p*(
    tan.buoHeaTra.buoMasIn.TWat[5]-tan.buoHeaTra.buoMasIn.TWat[4]);
  tan.prescribedHeatFlow1[4].port.Q_flow :=  -tan.draHeaTra.draHeaTra[4]*(1+
    tan.prescribedHeatFlow1[4].alpha*(tan.buoHeaTra.buoMasIn.TWat[4]-
    tan.prescribedHeatFlow1[4].T_ref));
  tan.buoHeaTra.buoHeaTra[4] := tan.buoHeaTra.dH_BU.dH_BU[4]+tan.buoHeaTra.qBuo.c_p
    *tan.buoHeaTra.mDCal1.mDotD[3]*(tan.buoHeaTra.buoMasIn.TWat[3]-
    tan.buoHeaTra.buoMasIn.TWat[4])+tan.buoHeaTra.qBuo.c_p*tan.buoHeaTra.qBuo.m_flow_C
    *(tan.buoHeaTra.buoMasIn.TWat[3]-tan.buoHeaTra.buoMasIn.TWat[4])-
    tan.buoHeaTra.qBuo.c_p*tan.buoHeaTra.qBuo.m_flow_C*(tan.buoHeaTra.buoMasIn.TWat[4]
    -tan.buoHeaTra.buoMasIn.TWat[5]);
  tan.prescribedHeatFlow[4].port.Q_flow :=  -tan.buoHeaTra.buoHeaTra[4]*(1+
    tan.prescribedHeatFlow[4].alpha*(tan.buoHeaTra.buoMasIn.TWat[4]-
    tan.prescribedHeatFlow[4].T_ref));
  der(tan.vol[4].dynBal.U) := tan.convConBou8[4].Q_flow-(tan.buoHeaTra.QDotFlu[4]
    +tan.conExt[4].opa_a.Q_flow)-tan.prescribedHeatFlow1[4].port.Q_flow-
    tan.prescribedHeatFlow[4].port.Q_flow;
  tan.vol[4].dynBal.medium.state.phase := (if tan.vol[4].dynBal.medium.h < 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.hvl_p(
    tan.vol[4].dynBal.medium.p, 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.boilingcurve_p(
      tan.vol[4].dynBal.medium.p)) or tan.vol[4].dynBal.medium.h > 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.hvl_p(
    tan.vol[4].dynBal.medium.p, 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.dewcurve_p(
      tan.vol[4].dynBal.medium.p)) or tan.vol[4].dynBal.medium.p > 22064000.0
     then 1 else 2);
  tan.vol[4].dynBal.medium.d := Modelica.Media.Water.IF97_Utilities.rho_props_ph
    (
    tan.vol[4].dynBal.medium.p, 
    tan.vol[4].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[4].dynBal.medium.p,
       tan.vol[4].dynBal.medium.h, tan.vol[4].dynBal.medium.state.phase, 0));
  tan.vol[4].dynBal.m := tan.vol[4].V*tan.vol[4].dynBal.medium.d;

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
       -tan.vol[4].dynBal.m*der(tan.vol[4].dynBal.medium.u) =  -der(tan.vol[4].dynBal.U);
      */
      der(tan.vol[4].dynBal.medium.u) := der(tan.vol[4].dynBal.U)/
        tan.vol[4].dynBal.m;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      der(tan.vol[4].dynBal.medium.d) = Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[4].dynBal.medium.p, 
        tan.vol[4].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[4].dynBal.medium.p,
           tan.vol[4].dynBal.medium.h, tan.vol[4].dynBal.medium.state.phase, 0),
           
        der(tan.vol[4].dynBal.medium.p), 
        der(tan.vol[4].dynBal.medium.h));
      */
      der(tan.vol[4].dynBal.medium.p) :=  -(Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[4].dynBal.medium.p, 
        tan.vol[4].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[4].dynBal.medium.p,
           tan.vol[4].dynBal.medium.h, tan.vol[4].dynBal.medium.state.phase, 0),
           
        0.0, 
        1.0)*(der(tan.vol[4].dynBal.medium.u)-tan.vol[4].dynBal.medium.p*
        der(tan.vol[4].dynBal.medium.d)/tan.vol[4].dynBal.medium.d^2)-
        der(tan.vol[4].dynBal.medium.d))/(Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[4].dynBal.medium.p, 
        tan.vol[4].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[4].dynBal.medium.p,
           tan.vol[4].dynBal.medium.h, tan.vol[4].dynBal.medium.state.phase, 0),
           
        1.0, 
        0.0)+Modelica.Media.Water.IF97_Utilities.rho_ph_der(
        tan.vol[4].dynBal.medium.p, 
        tan.vol[4].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[4].dynBal.medium.p,
           tan.vol[4].dynBal.medium.h, tan.vol[4].dynBal.medium.state.phase, 0),
           
        0.0, 
        1.0)/tan.vol[4].dynBal.medium.d);

    // Torn part
      der(tan.vol[4].dynBal.medium.h) := der(tan.vol[4].dynBal.medium.u)-
        tan.vol[4].dynBal.medium.p*der(tan.vol[4].dynBal.medium.d)/
        tan.vol[4].dynBal.medium.d^2+der(tan.vol[4].dynBal.medium.p)/
        tan.vol[4].dynBal.medium.d;
  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.conExt[4].opa.lay[1].port_b.T-tan.conExt[4].opa.lay[2].T[1] = 
        tan.conExt[4].opa.Q_flow[2]/tan.conExt[4].opa.lay[2].UAnSta2;
      */
      tan.conExt[4].opa.lay[1].port_b.T := (tan.conExt[4].opa.lay[2].T[1]+
        tan.conExt[4].opa.lay[1].T[1]*tan.conExt[4].opa.lay[1].UAnSta2/
        tan.conExt[4].opa.lay[2].UAnSta2)/(1.0+tan.conExt[4].opa.lay[1].UAnSta2/
        tan.conExt[4].opa.lay[2].UAnSta2);

    // Torn part
      tan.conExt[4].opa.Q_flow[2] :=  -(tan.conExt[4].opa.lay[1].port_b.T-
        tan.conExt[4].opa.lay[1].T[1])*tan.conExt[4].opa.lay[1].UAnSta2;
  // End of linear system of equations


  // Nonlinear system of equations
  // Nonlinear system of equations number = 17.
    // It depends on the following parameters: 
    //   TDryBul.k
    //   TRadMea.k
    //   tan.conExt[4].opa.lay[2].UAnSta2
    //   tan.convConBou9[4].A
    //   tan.fsRadiationExchange1[4].A
    // It depends on the following timevarying variables: 
    //   tan.conExt[4].opa.lay[2].T[1]
    // Unknowns[1]: 
    //   tan.conExt[4].opa_b.T
  algorithm // Torn part
    tan.fsRadiationExchange1[4].port.Q_flow := 5.6704E-008*(TRadMea.k*
      tan.fsRadiationExchange1[4].A*(tan.conExt[4].opa_b.T^4-0.6561));
    tan.convConBou9[4].dT := tan.conExt[4].opa_b.T-TDryBul.k;
    tan.convConBou9[4].q_flow := noEvent(smooth(1, (if noEvent(tan.convConBou9[4].dT
       > 0) then 1.3*tan.convConBou9[4].dT^1.3333 else (-1.3)*( -
      tan.convConBou9[4].dT)^1.3333)));
    tan.convConBou9[4].Q_flow := tan.convConBou9[4].A*tan.convConBou9[4].q_flow;
    tan.conExt[4].opa_b.Q_flow := (tan.conExt[4].opa_b.T-tan.conExt[4].opa.lay[2].T[1])
      *tan.conExt[4].opa.lay[2].UAnSta2;

  equation // Residual equations
    0 = tan.conExt[4].opa_b.Q_flow+tan.convConBou9[4].Q_flow+tan.fsRadiationExchange1[4].port.Q_flow;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations


  der(tan.conExt[4].opa.lay[2].T[1]) := (tan.conExt[4].opa.Q_flow[2]+
    tan.conExt[4].opa_b.Q_flow)/tan.conExt[4].opa.lay[2].C;
  der(tan.conExt[4].opa.lay[1].T[1]) := (tan.conExt[4].opa_a.Q_flow-
    tan.conExt[4].opa.Q_flow[2])/tan.conExt[4].opa.lay[1].C;
  tan.convConBou8[3].dT := TDryBul.k-tan.buoHeaTra.buoMasIn.TWat[3];
  tan.convConBou8[3].q_flow := 0.2*tan.convConBou8[3].dT;
  tan.convConBou8[3].Q_flow := tan.convConBou8[3].A*tan.convConBou8[3].q_flow;

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.conExt[3].opa_a.T-tan.conExt[3].opa.lay[1].T[1] = tan.conExt[3].opa_a.Q_flow
        /tan.conExt[3].opa.lay[1].UAnSta2;
      */
      tan.convConBou4[3].dT := (tan.conExt[3].opa.lay[1].T[1]-tan.buoHeaTra.buoMasIn.TWat[3])
        /(1.0+tan.convConBou4[3].A*tan.convConBou1[3].u/tan.conExt[3].opa.lay[1].UAnSta2);

    // Torn part
      tan.conExt[3].opa_a.T := tan.convConBou4[3].dT+tan.buoHeaTra.buoMasIn.TWat[3];
      tan.convConBou4[3].q_flow := tan.convConBou1[3].u*tan.convConBou4[3].dT;
      tan.conExt[3].opa_a.Q_flow :=  -tan.convConBou4[3].A*tan.convConBou4[3].q_flow;
  // End of linear system of equations

  tan.draHeaTra.draHeaTra[3] := m_flow_in[3].k*tan.draHeaTra.c_p*(
    tan.buoHeaTra.buoMasIn.TWat[4]-tan.buoHeaTra.buoMasIn.TWat[3]);
  tan.prescribedHeatFlow1[3].port.Q_flow :=  -tan.draHeaTra.draHeaTra[3]*(1+
    tan.prescribedHeatFlow1[3].alpha*(tan.buoHeaTra.buoMasIn.TWat[3]-
    tan.prescribedHeatFlow1[3].T_ref));
  tan.buoHeaTra.buoHeaTra[3] := tan.buoHeaTra.dH_BU.dH_BU[3]+tan.buoHeaTra.qBuo.c_p
    *tan.buoHeaTra.mDCal1.mDotD[2]*(tan.buoHeaTra.buoMasIn.TWat[2]-
    tan.buoHeaTra.buoMasIn.TWat[3])+tan.buoHeaTra.qBuo.c_p*tan.buoHeaTra.qBuo.m_flow_C
    *(tan.buoHeaTra.buoMasIn.TWat[2]-tan.buoHeaTra.buoMasIn.TWat[3])-
    tan.buoHeaTra.qBuo.c_p*tan.buoHeaTra.qBuo.m_flow_C*(tan.buoHeaTra.buoMasIn.TWat[3]
    -tan.buoHeaTra.buoMasIn.TWat[4]);
  tan.prescribedHeatFlow[3].port.Q_flow :=  -tan.buoHeaTra.buoHeaTra[3]*(1+
    tan.prescribedHeatFlow[3].alpha*(tan.buoHeaTra.buoMasIn.TWat[3]-
    tan.prescribedHeatFlow[3].T_ref));
  der(tan.vol[3].dynBal.U) := tan.convConBou8[3].Q_flow-(tan.buoHeaTra.QDotFlu[3]
    +tan.conExt[3].opa_a.Q_flow)-tan.prescribedHeatFlow1[3].port.Q_flow-
    tan.prescribedHeatFlow[3].port.Q_flow;
  tan.vol[3].dynBal.medium.state.phase := (if tan.vol[3].dynBal.medium.h < 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.hvl_p(
    tan.vol[3].dynBal.medium.p, 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.boilingcurve_p(
      tan.vol[3].dynBal.medium.p)) or tan.vol[3].dynBal.medium.h > 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.hvl_p(
    tan.vol[3].dynBal.medium.p, 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.dewcurve_p(
      tan.vol[3].dynBal.medium.p)) or tan.vol[3].dynBal.medium.p > 22064000.0
     then 1 else 2);
  tan.vol[3].dynBal.medium.d := Modelica.Media.Water.IF97_Utilities.rho_props_ph
    (
    tan.vol[3].dynBal.medium.p, 
    tan.vol[3].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[3].dynBal.medium.p,
       tan.vol[3].dynBal.medium.h, tan.vol[3].dynBal.medium.state.phase, 0));
  tan.vol[3].dynBal.m := tan.vol[3].V*tan.vol[3].dynBal.medium.d;

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
       -tan.vol[3].dynBal.m*der(tan.vol[3].dynBal.medium.u) =  -der(tan.vol[3].dynBal.U);
      */
      der(tan.vol[3].dynBal.medium.u) := der(tan.vol[3].dynBal.U)/
        tan.vol[3].dynBal.m;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      der(tan.vol[3].dynBal.medium.d) = Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[3].dynBal.medium.p, 
        tan.vol[3].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[3].dynBal.medium.p,
           tan.vol[3].dynBal.medium.h, tan.vol[3].dynBal.medium.state.phase, 0),
           
        der(tan.vol[3].dynBal.medium.p), 
        der(tan.vol[3].dynBal.medium.h));
      */
      der(tan.vol[3].dynBal.medium.p) :=  -(Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[3].dynBal.medium.p, 
        tan.vol[3].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[3].dynBal.medium.p,
           tan.vol[3].dynBal.medium.h, tan.vol[3].dynBal.medium.state.phase, 0),
           
        0.0, 
        1.0)*(der(tan.vol[3].dynBal.medium.u)-tan.vol[3].dynBal.medium.p*
        der(tan.vol[3].dynBal.medium.d)/tan.vol[3].dynBal.medium.d^2)-
        der(tan.vol[3].dynBal.medium.d))/(Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[3].dynBal.medium.p, 
        tan.vol[3].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[3].dynBal.medium.p,
           tan.vol[3].dynBal.medium.h, tan.vol[3].dynBal.medium.state.phase, 0),
           
        1.0, 
        0.0)+Modelica.Media.Water.IF97_Utilities.rho_ph_der(
        tan.vol[3].dynBal.medium.p, 
        tan.vol[3].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[3].dynBal.medium.p,
           tan.vol[3].dynBal.medium.h, tan.vol[3].dynBal.medium.state.phase, 0),
           
        0.0, 
        1.0)/tan.vol[3].dynBal.medium.d);

    // Torn part
      der(tan.vol[3].dynBal.medium.h) := der(tan.vol[3].dynBal.medium.u)-
        tan.vol[3].dynBal.medium.p*der(tan.vol[3].dynBal.medium.d)/
        tan.vol[3].dynBal.medium.d^2+der(tan.vol[3].dynBal.medium.p)/
        tan.vol[3].dynBal.medium.d;
  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.conExt[3].opa.lay[1].port_b.T-tan.conExt[3].opa.lay[2].T[1] = 
        tan.conExt[3].opa.Q_flow[2]/tan.conExt[3].opa.lay[2].UAnSta2;
      */
      tan.conExt[3].opa.lay[1].port_b.T := (tan.conExt[3].opa.lay[2].T[1]+
        tan.conExt[3].opa.lay[1].T[1]*tan.conExt[3].opa.lay[1].UAnSta2/
        tan.conExt[3].opa.lay[2].UAnSta2)/(1.0+tan.conExt[3].opa.lay[1].UAnSta2/
        tan.conExt[3].opa.lay[2].UAnSta2);

    // Torn part
      tan.conExt[3].opa.Q_flow[2] :=  -(tan.conExt[3].opa.lay[1].port_b.T-
        tan.conExt[3].opa.lay[1].T[1])*tan.conExt[3].opa.lay[1].UAnSta2;
  // End of linear system of equations


  // Nonlinear system of equations
  // Nonlinear system of equations number = 18.
    // It depends on the following parameters: 
    //   TDryBul.k
    //   TRadMea.k
    //   tan.conExt[3].opa.lay[2].UAnSta2
    //   tan.convConBou9[3].A
    //   tan.fsRadiationExchange1[3].A
    // It depends on the following timevarying variables: 
    //   tan.conExt[3].opa.lay[2].T[1]
    // Unknowns[1]: 
    //   tan.conExt[3].opa_b.T
  algorithm // Torn part
    tan.fsRadiationExchange1[3].port.Q_flow := 5.6704E-008*(TRadMea.k*
      tan.fsRadiationExchange1[3].A*(tan.conExt[3].opa_b.T^4-0.6561));
    tan.convConBou9[3].dT := tan.conExt[3].opa_b.T-TDryBul.k;
    tan.convConBou9[3].q_flow := noEvent(smooth(1, (if noEvent(tan.convConBou9[3].dT
       > 0) then 1.3*tan.convConBou9[3].dT^1.3333 else (-1.3)*( -
      tan.convConBou9[3].dT)^1.3333)));
    tan.convConBou9[3].Q_flow := tan.convConBou9[3].A*tan.convConBou9[3].q_flow;
    tan.conExt[3].opa_b.Q_flow := (tan.conExt[3].opa_b.T-tan.conExt[3].opa.lay[2].T[1])
      *tan.conExt[3].opa.lay[2].UAnSta2;

  equation // Residual equations
    0 = tan.conExt[3].opa_b.Q_flow+tan.convConBou9[3].Q_flow+tan.fsRadiationExchange1[3].port.Q_flow;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations


  der(tan.conExt[3].opa.lay[2].T[1]) := (tan.conExt[3].opa.Q_flow[2]+
    tan.conExt[3].opa_b.Q_flow)/tan.conExt[3].opa.lay[2].C;
  der(tan.conExt[3].opa.lay[1].T[1]) := (tan.conExt[3].opa_a.Q_flow-
    tan.conExt[3].opa.Q_flow[2])/tan.conExt[3].opa.lay[1].C;
  tan.convConBou8[2].dT := TDryBul.k-tan.buoHeaTra.buoMasIn.TWat[2];
  tan.convConBou8[2].q_flow := 0.2*tan.convConBou8[2].dT;
  tan.convConBou8[2].Q_flow := tan.convConBou8[2].A*tan.convConBou8[2].q_flow;

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.conExt[2].opa_a.T-tan.conExt[2].opa.lay[1].T[1] = tan.conExt[2].opa_a.Q_flow
        /tan.conExt[2].opa.lay[1].UAnSta2;
      */
      tan.convConBou4[2].dT := (tan.conExt[2].opa.lay[1].T[1]-tan.buoHeaTra.buoMasIn.TWat[2])
        /(1.0+tan.convConBou4[2].A*tan.convConBou1[2].u/tan.conExt[2].opa.lay[1].UAnSta2);

    // Torn part
      tan.conExt[2].opa_a.T := tan.convConBou4[2].dT+tan.buoHeaTra.buoMasIn.TWat[2];
      tan.convConBou4[2].q_flow := tan.convConBou1[2].u*tan.convConBou4[2].dT;
      tan.conExt[2].opa_a.Q_flow :=  -tan.convConBou4[2].A*tan.convConBou4[2].q_flow;
  // End of linear system of equations

  tan.draHeaTra.draHeaTra[2] := m_flow_in[2].k*tan.draHeaTra.c_p*(
    tan.buoHeaTra.buoMasIn.TWat[3]-tan.buoHeaTra.buoMasIn.TWat[2]);
  tan.prescribedHeatFlow1[2].port.Q_flow :=  -tan.draHeaTra.draHeaTra[2]*(1+
    tan.prescribedHeatFlow1[2].alpha*(tan.buoHeaTra.buoMasIn.TWat[2]-
    tan.prescribedHeatFlow1[2].T_ref));
  tan.buoHeaTra.buoHeaTra[2] := tan.buoHeaTra.dH_BU.dH_BU[2]+tan.buoHeaTra.qBuo.c_p
    *tan.buoHeaTra.mDCal1.mDotD[1]*(tan.buoHeaTra.buoMasIn.TWat[1]-
    tan.buoHeaTra.buoMasIn.TWat[2])+tan.buoHeaTra.qBuo.c_p*tan.buoHeaTra.qBuo.m_flow_C
    *(tan.buoHeaTra.buoMasIn.TWat[1]-tan.buoHeaTra.buoMasIn.TWat[2])-
    tan.buoHeaTra.qBuo.c_p*tan.buoHeaTra.qBuo.m_flow_C*(tan.buoHeaTra.buoMasIn.TWat[2]
    -tan.buoHeaTra.buoMasIn.TWat[3]);
  tan.prescribedHeatFlow[2].port.Q_flow :=  -tan.buoHeaTra.buoHeaTra[2]*(1+
    tan.prescribedHeatFlow[2].alpha*(tan.buoHeaTra.buoMasIn.TWat[2]-
    tan.prescribedHeatFlow[2].T_ref));
  der(tan.vol[2].dynBal.U) := tan.convConBou8[2].Q_flow-(tan.buoHeaTra.QDotFlu[2]
    +tan.conExt[2].opa_a.Q_flow)-tan.prescribedHeatFlow1[2].port.Q_flow-
    tan.prescribedHeatFlow[2].port.Q_flow;
  tan.vol[2].dynBal.medium.state.phase := (if tan.vol[2].dynBal.medium.h < 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.hvl_p(
    tan.vol[2].dynBal.medium.p, 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.boilingcurve_p(
      tan.vol[2].dynBal.medium.p)) or tan.vol[2].dynBal.medium.h > 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.hvl_p(
    tan.vol[2].dynBal.medium.p, 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.dewcurve_p(
      tan.vol[2].dynBal.medium.p)) or tan.vol[2].dynBal.medium.p > 22064000.0
     then 1 else 2);
  tan.vol[2].dynBal.medium.d := Modelica.Media.Water.IF97_Utilities.rho_props_ph
    (
    tan.vol[2].dynBal.medium.p, 
    tan.vol[2].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[2].dynBal.medium.p,
       tan.vol[2].dynBal.medium.h, tan.vol[2].dynBal.medium.state.phase, 0));
  tan.vol[2].dynBal.m := tan.vol[2].V*tan.vol[2].dynBal.medium.d;

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
       -tan.vol[2].dynBal.m*der(tan.vol[2].dynBal.medium.u) =  -der(tan.vol[2].dynBal.U);
      */
      der(tan.vol[2].dynBal.medium.u) := der(tan.vol[2].dynBal.U)/
        tan.vol[2].dynBal.m;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      der(tan.vol[2].dynBal.medium.d) = Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[2].dynBal.medium.p, 
        tan.vol[2].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[2].dynBal.medium.p,
           tan.vol[2].dynBal.medium.h, tan.vol[2].dynBal.medium.state.phase, 0),
           
        der(tan.vol[2].dynBal.medium.p), 
        der(tan.vol[2].dynBal.medium.h));
      */
      der(tan.vol[2].dynBal.medium.p) :=  -(Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[2].dynBal.medium.p, 
        tan.vol[2].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[2].dynBal.medium.p,
           tan.vol[2].dynBal.medium.h, tan.vol[2].dynBal.medium.state.phase, 0),
           
        0.0, 
        1.0)*(der(tan.vol[2].dynBal.medium.u)-tan.vol[2].dynBal.medium.p*
        der(tan.vol[2].dynBal.medium.d)/tan.vol[2].dynBal.medium.d^2)-
        der(tan.vol[2].dynBal.medium.d))/(Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[2].dynBal.medium.p, 
        tan.vol[2].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[2].dynBal.medium.p,
           tan.vol[2].dynBal.medium.h, tan.vol[2].dynBal.medium.state.phase, 0),
           
        1.0, 
        0.0)+Modelica.Media.Water.IF97_Utilities.rho_ph_der(
        tan.vol[2].dynBal.medium.p, 
        tan.vol[2].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[2].dynBal.medium.p,
           tan.vol[2].dynBal.medium.h, tan.vol[2].dynBal.medium.state.phase, 0),
           
        0.0, 
        1.0)/tan.vol[2].dynBal.medium.d);

    // Torn part
      der(tan.vol[2].dynBal.medium.h) := der(tan.vol[2].dynBal.medium.u)-
        tan.vol[2].dynBal.medium.p*der(tan.vol[2].dynBal.medium.d)/
        tan.vol[2].dynBal.medium.d^2+der(tan.vol[2].dynBal.medium.p)/
        tan.vol[2].dynBal.medium.d;
  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.conExt[2].opa.lay[1].port_b.T-tan.conExt[2].opa.lay[2].T[1] = 
        tan.conExt[2].opa.Q_flow[2]/tan.conExt[2].opa.lay[2].UAnSta2;
      */
      tan.conExt[2].opa.lay[1].port_b.T := (tan.conExt[2].opa.lay[2].T[1]+
        tan.conExt[2].opa.lay[1].T[1]*tan.conExt[2].opa.lay[1].UAnSta2/
        tan.conExt[2].opa.lay[2].UAnSta2)/(1.0+tan.conExt[2].opa.lay[1].UAnSta2/
        tan.conExt[2].opa.lay[2].UAnSta2);

    // Torn part
      tan.conExt[2].opa.Q_flow[2] :=  -(tan.conExt[2].opa.lay[1].port_b.T-
        tan.conExt[2].opa.lay[1].T[1])*tan.conExt[2].opa.lay[1].UAnSta2;
  // End of linear system of equations


  // Nonlinear system of equations
  // Nonlinear system of equations number = 19.
    // It depends on the following parameters: 
    //   TDryBul.k
    //   TRadMea.k
    //   tan.conExt[2].opa.lay[2].UAnSta2
    //   tan.convConBou9[2].A
    //   tan.fsRadiationExchange1[2].A
    // It depends on the following timevarying variables: 
    //   tan.conExt[2].opa.lay[2].T[1]
    // Unknowns[1]: 
    //   tan.conExt[2].opa_b.T
  algorithm // Torn part
    tan.fsRadiationExchange1[2].port.Q_flow := 5.6704E-008*(TRadMea.k*
      tan.fsRadiationExchange1[2].A*(tan.conExt[2].opa_b.T^4-0.6561));
    tan.convConBou9[2].dT := tan.conExt[2].opa_b.T-TDryBul.k;
    tan.convConBou9[2].q_flow := noEvent(smooth(1, (if noEvent(tan.convConBou9[2].dT
       > 0) then 1.3*tan.convConBou9[2].dT^1.3333 else (-1.3)*( -
      tan.convConBou9[2].dT)^1.3333)));
    tan.convConBou9[2].Q_flow := tan.convConBou9[2].A*tan.convConBou9[2].q_flow;
    tan.conExt[2].opa_b.Q_flow := (tan.conExt[2].opa_b.T-tan.conExt[2].opa.lay[2].T[1])
      *tan.conExt[2].opa.lay[2].UAnSta2;

  equation // Residual equations
    0 = tan.conExt[2].opa_b.Q_flow+tan.convConBou9[2].Q_flow+tan.fsRadiationExchange1[2].port.Q_flow;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations


  der(tan.conExt[2].opa.lay[2].T[1]) := (tan.conExt[2].opa.Q_flow[2]+
    tan.conExt[2].opa_b.Q_flow)/tan.conExt[2].opa.lay[2].C;
  der(tan.conExt[2].opa.lay[1].T[1]) := (tan.conExt[2].opa_a.Q_flow-
    tan.conExt[2].opa.Q_flow[2])/tan.conExt[2].opa.lay[1].C;
  tan.convConBou8[1].dT := TDryBul.k-tan.buoHeaTra.buoMasIn.TWat[1];
  tan.convConBou8[1].q_flow := 0.2*tan.convConBou8[1].dT;
  tan.convConBou8[1].Q_flow := tan.convConBou8[1].A*tan.convConBou8[1].q_flow;

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.conOpa.opa_a.T-tan.conOpa.opa.lay[1].T[1] = tan.conOpa.opa_a.Q_flow/
        tan.conOpa.opa.lay[1].UAnSta2;
      */
      tan.convConBou3.dT := (tan.conOpa.opa.lay[1].T[1]-tan.buoHeaTra.buoMasIn.TWat[1])
        /(1.0+tan.convConBou3.A*tan.convConBou2.u/tan.conOpa.opa.lay[1].UAnSta2);

    // Torn part
      tan.conOpa.opa_a.T := tan.convConBou3.dT+tan.buoHeaTra.buoMasIn.TWat[1];
      tan.convConBou3.q_flow := tan.convConBou2.u*tan.convConBou3.dT;
      tan.conOpa.opa_a.Q_flow :=  -tan.convConBou3.A*tan.convConBou3.q_flow;
  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.conExt[1].opa_a.T-tan.conExt[1].opa.lay[1].T[1] = tan.conExt[1].opa_a.Q_flow
        /tan.conExt[1].opa.lay[1].UAnSta2;
      */
      tan.convConBou4[1].dT := (tan.conExt[1].opa.lay[1].T[1]-tan.buoHeaTra.buoMasIn.TWat[1])
        /(1.0+tan.convConBou4[1].A*tan.convConBou2.u/tan.conExt[1].opa.lay[1].UAnSta2);

    // Torn part
      tan.conExt[1].opa_a.T := tan.convConBou4[1].dT+tan.buoHeaTra.buoMasIn.TWat[1];
      tan.convConBou4[1].q_flow := tan.convConBou2.u*tan.convConBou4[1].dT;
      tan.conExt[1].opa_a.Q_flow :=  -tan.convConBou4[1].A*tan.convConBou4[1].q_flow;
  // End of linear system of equations

  tan.draHeaTra.draHeaTra[1] := m_flow_in[1].k*tan.draHeaTra.c_p*(
    tan.buoHeaTra.buoMasIn.TWat[2]-tan.buoHeaTra.buoMasIn.TWat[1]);
  tan.prescribedHeatFlow1[1].port.Q_flow :=  -tan.draHeaTra.draHeaTra[1]*(1+
    tan.prescribedHeatFlow1[1].alpha*(tan.buoHeaTra.buoMasIn.TWat[1]-
    tan.prescribedHeatFlow1[1].T_ref));
  tan.buoHeaTra.buoHeaTra[1] := tan.buoHeaTra.dH_BU.dH_BU[1]-tan.buoHeaTra.qBuo.c_p
    *tan.buoHeaTra.qBuo.m_flow_C*(tan.buoHeaTra.buoMasIn.TWat[1]-
    tan.buoHeaTra.buoMasIn.TWat[2]);
  tan.prescribedHeatFlow[1].port.Q_flow :=  -tan.buoHeaTra.buoHeaTra[1]*(1+
    tan.prescribedHeatFlow[1].alpha*(tan.buoHeaTra.buoMasIn.TWat[1]-
    tan.prescribedHeatFlow[1].T_ref));
  der(tan.vol[1].dynBal.U) := tan.convConBou8[1].Q_flow-(tan.buoHeaTra.QDotFlu[1]
    +tan.conOpa.opa_a.Q_flow+tan.conExt[1].opa_a.Q_flow)-tan.prescribedHeatFlow1[1].port.Q_flow
    -tan.prescribedHeatFlow[1].port.Q_flow;
  tan.vol[1].dynBal.medium.state.phase := (if tan.vol[1].dynBal.medium.h < 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.hvl_p(
    tan.vol[1].dynBal.medium.p, 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.boilingcurve_p(
      tan.vol[1].dynBal.medium.p)) or tan.vol[1].dynBal.medium.h > 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.hvl_p(
    tan.vol[1].dynBal.medium.p, 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.dewcurve_p(
      tan.vol[1].dynBal.medium.p)) or tan.vol[1].dynBal.medium.p > 22064000.0
     then 1 else 2);
  tan.vol[1].dynBal.medium.d := Modelica.Media.Water.IF97_Utilities.rho_props_ph
    (
    tan.vol[1].dynBal.medium.p, 
    tan.vol[1].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[1].dynBal.medium.p,
       tan.vol[1].dynBal.medium.h, tan.vol[1].dynBal.medium.state.phase, 0));
  tan.vol[1].dynBal.m := tan.vol[1].V*tan.vol[1].dynBal.medium.d;

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
       -tan.vol[1].dynBal.m*der(tan.vol[1].dynBal.medium.u) =  -der(tan.vol[1].dynBal.U);
      */
      der(tan.vol[1].dynBal.medium.u) := der(tan.vol[1].dynBal.U)/
        tan.vol[1].dynBal.m;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      der(tan.vol[1].dynBal.medium.d) = Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[1].dynBal.medium.p, 
        tan.vol[1].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[1].dynBal.medium.p,
           tan.vol[1].dynBal.medium.h, tan.vol[1].dynBal.medium.state.phase, 0),
           
        der(tan.vol[1].dynBal.medium.p), 
        der(tan.vol[1].dynBal.medium.h));
      */
      der(tan.vol[1].dynBal.medium.p) :=  -(Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[1].dynBal.medium.p, 
        tan.vol[1].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[1].dynBal.medium.p,
           tan.vol[1].dynBal.medium.h, tan.vol[1].dynBal.medium.state.phase, 0),
           
        0.0, 
        1.0)*(der(tan.vol[1].dynBal.medium.u)-tan.vol[1].dynBal.medium.p*
        der(tan.vol[1].dynBal.medium.d)/tan.vol[1].dynBal.medium.d^2)-
        der(tan.vol[1].dynBal.medium.d))/(Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[1].dynBal.medium.p, 
        tan.vol[1].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[1].dynBal.medium.p,
           tan.vol[1].dynBal.medium.h, tan.vol[1].dynBal.medium.state.phase, 0),
           
        1.0, 
        0.0)+Modelica.Media.Water.IF97_Utilities.rho_ph_der(
        tan.vol[1].dynBal.medium.p, 
        tan.vol[1].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[1].dynBal.medium.p,
           tan.vol[1].dynBal.medium.h, tan.vol[1].dynBal.medium.state.phase, 0),
           
        0.0, 
        1.0)/tan.vol[1].dynBal.medium.d);

    // Torn part
      der(tan.vol[1].dynBal.medium.h) := der(tan.vol[1].dynBal.medium.u)-
        tan.vol[1].dynBal.medium.p*der(tan.vol[1].dynBal.medium.d)/
        tan.vol[1].dynBal.medium.d^2+der(tan.vol[1].dynBal.medium.p)/
        tan.vol[1].dynBal.medium.d;
  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.conExt[1].opa.lay[1].port_b.T-tan.conExt[1].opa.lay[2].T[1] = 
        tan.conExt[1].opa.Q_flow[2]/tan.conExt[1].opa.lay[2].UAnSta2;
      */
      tan.conExt[1].opa.lay[1].port_b.T := (tan.conExt[1].opa.lay[2].T[1]+
        tan.conExt[1].opa.lay[1].T[1]*tan.conExt[1].opa.lay[1].UAnSta2/
        tan.conExt[1].opa.lay[2].UAnSta2)/(1.0+tan.conExt[1].opa.lay[1].UAnSta2/
        tan.conExt[1].opa.lay[2].UAnSta2);

    // Torn part
      tan.conExt[1].opa.Q_flow[2] :=  -(tan.conExt[1].opa.lay[1].port_b.T-
        tan.conExt[1].opa.lay[1].T[1])*tan.conExt[1].opa.lay[1].UAnSta2;
  // End of linear system of equations


  // Nonlinear system of equations
  // Nonlinear system of equations number = 20.
    // It depends on the following parameters: 
    //   TDryBul.k
    //   TRadMea.k
    //   tan.conExt[1].opa.lay[2].UAnSta2
    //   tan.convConBou9[1].A
    //   tan.fsRadiationExchange1[1].A
    // It depends on the following timevarying variables: 
    //   tan.conExt[1].opa.lay[2].T[1]
    // Unknowns[1]: 
    //   tan.conExt[1].opa_b.T
  algorithm // Torn part
    tan.fsRadiationExchange1[1].port.Q_flow := 5.6704E-008*(TRadMea.k*
      tan.fsRadiationExchange1[1].A*(tan.conExt[1].opa_b.T^4-0.6561));
    tan.convConBou9[1].dT := tan.conExt[1].opa_b.T-TDryBul.k;
    tan.convConBou9[1].q_flow := noEvent(smooth(1, (if noEvent(tan.convConBou9[1].dT
       > 0) then 1.3*tan.convConBou9[1].dT^1.3333 else (-1.3)*( -
      tan.convConBou9[1].dT)^1.3333)));
    tan.convConBou9[1].Q_flow := tan.convConBou9[1].A*tan.convConBou9[1].q_flow;
    tan.conExt[1].opa_b.Q_flow := (tan.conExt[1].opa_b.T-tan.conExt[1].opa.lay[2].T[1])
      *tan.conExt[1].opa.lay[2].UAnSta2;

  equation // Residual equations
    0 = tan.conExt[1].opa_b.Q_flow+tan.convConBou9[1].Q_flow+tan.fsRadiationExchange1[1].port.Q_flow;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations


  der(tan.conExt[1].opa.lay[2].T[1]) := (tan.conExt[1].opa.Q_flow[2]+
    tan.conExt[1].opa_b.Q_flow)/tan.conExt[1].opa.lay[2].C;
  der(tan.conExt[1].opa.lay[1].T[1]) := (tan.conExt[1].opa_a.Q_flow-
    tan.conExt[1].opa.Q_flow[2])/tan.conExt[1].opa.lay[1].C;

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.conOpa.opa.lay[1].port_b.T-tan.conOpa.opa.lay[2].T[1] = 
        tan.conOpa.opa.Q_flow[2]/tan.conOpa.opa.lay[2].UAnSta2;
      */
      tan.conOpa.opa.lay[1].port_b.T := (tan.conOpa.opa.lay[2].T[1]+
        tan.conOpa.opa.lay[1].T[1]*tan.conOpa.opa.lay[1].UAnSta2/
        tan.conOpa.opa.lay[2].UAnSta2)/(1.0+tan.conOpa.opa.lay[1].UAnSta2/
        tan.conOpa.opa.lay[2].UAnSta2);

    // Torn part
      tan.conOpa.opa.Q_flow[2] :=  -(tan.conOpa.opa.lay[1].port_b.T-
        tan.conOpa.opa.lay[1].T[1])*tan.conOpa.opa.lay[1].UAnSta2;
  // End of linear system of equations


  // Nonlinear system of equations
  // Nonlinear system of equations number = 21.
    // It depends on the following parameters: 
    //   TDryBul.k
    //   TRadMea.k
    //   tan.conOpa.opa.lay[2].UAnSta2
    //   tan.convConBou10.A
    //   tan.fsRadiationExchange2.A
    // It depends on the following timevarying variables: 
    //   tan.conOpa.opa.lay[2].T[1]
    // Unknowns[1]: 
    //   tan.conOpa.opa_b.T
  algorithm // Torn part
    tan.fsRadiationExchange2.port.Q_flow := 5.6704E-008*(TRadMea.k*
      tan.fsRadiationExchange2.A*(tan.conOpa.opa_b.T^4-0.6561));
    tan.convConBou10.dT := tan.conOpa.opa_b.T-TDryBul.k;
    tan.convConBou10.q_flow := noEvent(smooth(1, (if noEvent(tan.convConBou10.dT
       > 0) then 0.76*tan.convConBou10.dT^1.3333 else (-1.51)*( -
      tan.convConBou10.dT)^1.3333)));
    tan.convConBou10.Q_flow := tan.convConBou10.A*tan.convConBou10.q_flow;
    tan.conOpa.opa_b.Q_flow := (tan.conOpa.opa_b.T-tan.conOpa.opa.lay[2].T[1])*
      tan.conOpa.opa.lay[2].UAnSta2;

  equation // Residual equations
    0 = tan.conOpa.opa_b.Q_flow+tan.convConBou10.Q_flow+tan.fsRadiationExchange2.port.Q_flow;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations


  der(tan.conOpa.opa.lay[2].T[1]) := (tan.conOpa.opa.Q_flow[2]+tan.conOpa.opa_b.Q_flow)
    /tan.conOpa.opa.lay[2].C;
  der(tan.conOpa.opa.lay[1].T[1]) := (tan.conOpa.opa_a.Q_flow-tan.conOpa.opa.Q_flow[2])
    /tan.conOpa.opa.lay[1].C;
  tan.convConBou8[7].dT := TDryBul.k-tan.buoHeaTra.buoMasIn.TWat[7];
  tan.convConBou8[7].q_flow := 0.2*tan.convConBou8[7].dT;
  tan.convConBou8[7].Q_flow := tan.convConBou8[7].A*tan.convConBou8[7].q_flow;

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.conExt[7].opa_a.T-tan.conExt[7].opa.lay[1].T[1] = tan.conExt[7].opa_a.Q_flow
        /tan.conExt[7].opa.lay[1].UAnSta2;
      */
      tan.convConBou4[7].dT := (tan.conExt[7].opa.lay[1].T[1]-tan.buoHeaTra.buoMasIn.TWat[7])
        /(1.0+tan.convConBou4[7].A*tan.convConBou1[7].u/tan.conExt[7].opa.lay[1].UAnSta2);

    // Torn part
      tan.conExt[7].opa_a.T := tan.convConBou4[7].dT+tan.buoHeaTra.buoMasIn.TWat[7];
      tan.convConBou4[7].q_flow := tan.convConBou1[7].u*tan.convConBou4[7].dT;
      tan.conExt[7].opa_a.Q_flow :=  -tan.convConBou4[7].A*tan.convConBou4[7].q_flow;
  // End of linear system of equations

  tan.draHeaTra.draHeaTra[7] := m_flow_in[7].k*tan.draHeaTra.c_p*(
    tan.buoHeaTra.buoMasIn.TWat[8]-tan.buoHeaTra.buoMasIn.TWat[7]);
  tan.prescribedHeatFlow1[7].port.Q_flow :=  -tan.draHeaTra.draHeaTra[7]*(1+
    tan.prescribedHeatFlow1[7].alpha*(tan.buoHeaTra.buoMasIn.TWat[7]-
    tan.prescribedHeatFlow1[7].T_ref));
  tan.buoHeaTra.buoHeaTra[7] := tan.buoHeaTra.dH_BU.dH_BU[7]+tan.buoHeaTra.qBuo.c_p
    *tan.buoHeaTra.mDCal1.mDotD[6]*(tan.buoHeaTra.buoMasIn.TWat[6]-
    tan.buoHeaTra.buoMasIn.TWat[7])+tan.buoHeaTra.qBuo.c_p*tan.buoHeaTra.qBuo.m_flow_C
    *(tan.buoHeaTra.buoMasIn.TWat[6]-tan.buoHeaTra.buoMasIn.TWat[7])-
    tan.buoHeaTra.qBuo.c_p*tan.buoHeaTra.qBuo.m_flow_C*(tan.buoHeaTra.buoMasIn.TWat[7]
    -tan.buoHeaTra.buoMasIn.TWat[8]);
  tan.prescribedHeatFlow[7].port.Q_flow :=  -tan.buoHeaTra.buoHeaTra[7]*(1+
    tan.prescribedHeatFlow[7].alpha*(tan.buoHeaTra.buoMasIn.TWat[7]-
    tan.prescribedHeatFlow[7].T_ref));
  der(tan.vol[7].dynBal.U) := tan.convConBou8[7].Q_flow-(tan.buoHeaTra.QDotFlu[7]
    +tan.conExt[7].opa_a.Q_flow)-tan.prescribedHeatFlow1[7].port.Q_flow-
    tan.prescribedHeatFlow[7].port.Q_flow;
  tan.vol[7].dynBal.medium.state.phase := (if tan.vol[7].dynBal.medium.h < 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.hvl_p(
    tan.vol[7].dynBal.medium.p, 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.boilingcurve_p(
      tan.vol[7].dynBal.medium.p)) or tan.vol[7].dynBal.medium.h > 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.hvl_p(
    tan.vol[7].dynBal.medium.p, 
    Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.dewcurve_p(
      tan.vol[7].dynBal.medium.p)) or tan.vol[7].dynBal.medium.p > 22064000.0
     then 1 else 2);
  tan.vol[7].dynBal.medium.d := Modelica.Media.Water.IF97_Utilities.rho_props_ph
    (
    tan.vol[7].dynBal.medium.p, 
    tan.vol[7].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[7].dynBal.medium.p,
       tan.vol[7].dynBal.medium.h, tan.vol[7].dynBal.medium.state.phase, 0));
  tan.vol[7].dynBal.m := tan.vol[7].V*tan.vol[7].dynBal.medium.d;

  // Linear system of equations
    // Symbolic solution
      /*  Original equation
       -tan.vol[7].dynBal.m*der(tan.vol[7].dynBal.medium.u) =  -der(tan.vol[7].dynBal.U);
      */
      der(tan.vol[7].dynBal.medium.u) := der(tan.vol[7].dynBal.U)/
        tan.vol[7].dynBal.m;

  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      der(tan.vol[7].dynBal.medium.d) = Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[7].dynBal.medium.p, 
        tan.vol[7].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[7].dynBal.medium.p,
           tan.vol[7].dynBal.medium.h, tan.vol[7].dynBal.medium.state.phase, 0),
           
        der(tan.vol[7].dynBal.medium.p), 
        der(tan.vol[7].dynBal.medium.h));
      */
      der(tan.vol[7].dynBal.medium.p) :=  -(Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[7].dynBal.medium.p, 
        tan.vol[7].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[7].dynBal.medium.p,
           tan.vol[7].dynBal.medium.h, tan.vol[7].dynBal.medium.state.phase, 0),
           
        0.0, 
        1.0)*(der(tan.vol[7].dynBal.medium.u)-tan.vol[7].dynBal.medium.p*
        der(tan.vol[7].dynBal.medium.d)/tan.vol[7].dynBal.medium.d^2)-
        der(tan.vol[7].dynBal.medium.d))/(Modelica.Media.Water.IF97_Utilities.rho_ph_der
        (
        tan.vol[7].dynBal.medium.p, 
        tan.vol[7].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[7].dynBal.medium.p,
           tan.vol[7].dynBal.medium.h, tan.vol[7].dynBal.medium.state.phase, 0),
           
        1.0, 
        0.0)+Modelica.Media.Water.IF97_Utilities.rho_ph_der(
        tan.vol[7].dynBal.medium.p, 
        tan.vol[7].dynBal.medium.h, 
        Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[7].dynBal.medium.p,
           tan.vol[7].dynBal.medium.h, tan.vol[7].dynBal.medium.state.phase, 0),
           
        0.0, 
        1.0)/tan.vol[7].dynBal.medium.d);

    // Torn part
      der(tan.vol[7].dynBal.medium.h) := der(tan.vol[7].dynBal.medium.u)-
        tan.vol[7].dynBal.medium.p*der(tan.vol[7].dynBal.medium.d)/
        tan.vol[7].dynBal.medium.d^2+der(tan.vol[7].dynBal.medium.p)/
        tan.vol[7].dynBal.medium.d;
  // End of linear system of equations


  // Linear system of equations
    // Symbolic solution
      /*  Original equation
      tan.conExt[7].opa.lay[1].port_b.T-tan.conExt[7].opa.lay[2].T[1] = 
        tan.conExt[7].opa.Q_flow[2]/tan.conExt[7].opa.lay[2].UAnSta2;
      */
      tan.conExt[7].opa.lay[1].port_b.T := (tan.conExt[7].opa.lay[2].T[1]+
        tan.conExt[7].opa.lay[1].T[1]*tan.conExt[7].opa.lay[1].UAnSta2/
        tan.conExt[7].opa.lay[2].UAnSta2)/(1.0+tan.conExt[7].opa.lay[1].UAnSta2/
        tan.conExt[7].opa.lay[2].UAnSta2);

    // Torn part
      tan.conExt[7].opa.Q_flow[2] :=  -(tan.conExt[7].opa.lay[1].port_b.T-
        tan.conExt[7].opa.lay[1].T[1])*tan.conExt[7].opa.lay[1].UAnSta2;
  // End of linear system of equations


  // Nonlinear system of equations
  // Nonlinear system of equations number = 22.
    // It depends on the following parameters: 
    //   TDryBul.k
    //   TRadMea.k
    //   tan.conExt[7].opa.lay[2].UAnSta2
    //   tan.convConBou9[7].A
    //   tan.fsRadiationExchange1[7].A
    // It depends on the following timevarying variables: 
    //   tan.conExt[7].opa.lay[2].T[1]
    // Unknowns[1]: 
    //   tan.conExt[7].opa_b.T
  algorithm // Torn part
    tan.fsRadiationExchange1[7].port.Q_flow := 5.6704E-008*(TRadMea.k*
      tan.fsRadiationExchange1[7].A*(tan.conExt[7].opa_b.T^4-0.6561));
    tan.convConBou9[7].dT := tan.conExt[7].opa_b.T-TDryBul.k;
    tan.convConBou9[7].q_flow := noEvent(smooth(1, (if noEvent(tan.convConBou9[7].dT
       > 0) then 1.3*tan.convConBou9[7].dT^1.3333 else (-1.3)*( -
      tan.convConBou9[7].dT)^1.3333)));
    tan.convConBou9[7].Q_flow := tan.convConBou9[7].A*tan.convConBou9[7].q_flow;
    tan.conExt[7].opa_b.Q_flow := (tan.conExt[7].opa_b.T-tan.conExt[7].opa.lay[2].T[1])
      *tan.conExt[7].opa.lay[2].UAnSta2;

  equation // Residual equations
    0 = tan.conExt[7].opa_b.Q_flow+tan.convConBou9[7].Q_flow+tan.fsRadiationExchange1[7].port.Q_flow;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations


  der(tan.conExt[7].opa.lay[2].T[1]) := (tan.conExt[7].opa.Q_flow[2]+
    tan.conExt[7].opa_b.Q_flow)/tan.conExt[7].opa.lay[2].C;
  der(tan.conExt[7].opa.lay[1].T[1]) := (tan.conExt[7].opa_a.Q_flow-
    tan.conExt[7].opa.Q_flow[2])/tan.conExt[7].opa.lay[1].C;
  onOffController.y := pre(onOffController.y) and tan.buoHeaTra.buoMasIn.TWat[2]
     < T_switch.k+onOffController.bandwidth/2 or tan.buoHeaTra.buoMasIn.TWat[2]
     < T_switch.k-onOffController.bandwidth/2;
  booleanToInteger.y := (if onOffController.y then booleanToInteger.realTrue
     else booleanToInteger.realFalse);
  product.y := booleanToInteger.y*QBurner.k;
  add.y := add.k1*product.y+add.k2*QPilot.k;
  burn.T_F0.add.u1 := burn.T_F0.gain1.k*add.y;
  burn.cdot_G.division.y := add.y/burn.cdot_G.add.y;
  burn.h_CB.C_dotG := burn.cdot_G.add1.k1*burn.cdot_G.division.y+
    burn.cdot_G.add1.k2*burn.cdot_G.guard.k;
  algorithm 
    burn.h_CB.mdot_G := burn.h_CB.C_dotG/burn.h_CB.cp_G;
  burn.hotGasTemp.h_CB := burn.h_CB.k_g*0.51*(burn.h_CB.mdot_G*burn.h_CB.Xn/(
    6.28318530717959*(burn.h_CB.DM*tan(burn.h_CB.alphaF/2)))/burn.h_CB.muF_G)^
    0.62/burn.h_CB.Xn;

  // Nonlinear system of equations
  // Nonlinear system of equations number = 23.
    // It depends on the following parameters: 
    //   burn.T_AD_flame.y
    //   burn.convConBou7.A
    //   burn.h_RB.absIR_flame
    //   burn.h_RB.absIR_tan
    //   burn.hotGasTemp.A_B
    //   tan.conOpa3.opa.lay[1].UAnSta2
    // It depends on the following timevarying variables: 
    //   burn.h_CB.C_dotG
    //   burn.hotGasTemp.h_CB
    //   tan.conOpa3.opa.lay[1].T[1]
    // Unknowns[1]: 
    //   burn.convConBou7.dT(start = 0)
  algorithm // Torn part
    burn.convConBou7.q_flow := 2*burn.convConBou7.dT;
    burn.Q_B := burn.convConBou7.A*burn.convConBou7.q_flow;
    burn.heaPorTop.T := tan.conOpa3.opa.lay[1].T[1]+burn.Q_B/tan.conOpa3.opa.lay[1].UAnSta2;
    burn.h_RB.y := 2.8352E-008*(burn.T_AD_flame.y^3*burn.h_RB.absIR_flame*(1+
      burn.h_RB.absIR_tan)*(1+burn.heaPorTop.T/burn.T_AD_flame.y));
    burn.hotGasTemp.Ntu_B := (burn.h_RB.y+burn.hotGasTemp.h_CB)*burn.hotGasTemp.A_B
      /burn.h_CB.C_dotG;
    burn.convConBou7.solid.T := (burn.T_AD_flame.y+burn.hotGasTemp.Ntu_B*
      burn.heaPorTop.T)/(1+burn.hotGasTemp.Ntu_B);

  equation // Residual equations
    0 = burn.convConBou7.dT-burn.convConBou7.solid.T+burn.heaPorTop.T;
  // Analytic Jacobian was produced, but it is not listed here.
  // To have it listed, set
  //   Advanced.OutputModelicaCodeWithJacobians = true
  // before translation. May give much output,
  // because common subexpression elimination is not activated.
  // End of nonlinear system of equations


  burn.T_F0.QLoss := burn.add.k1*burn.Q_B-burn.add.k2*TBCBot.port.Q_flow;
  burn.T_F0.add.y := burn.T_F0.add.k1*burn.T_F0.add.u1+burn.T_F0.add.k2*
    burn.T_F0.QLoss;
  burn.T_F0.gain2.y := burn.T_F0.gain2.k*burn.h_CB.C_dotG;
  burn.T_F0.add1.u2 := burn.T_F0.add.y/burn.T_F0.gain2.y;
  burn.T_F0_y := burn.T_F0.add1.k1*TDryBul.k+burn.T_F0.add1.k2*burn.T_F0.add1.u2;

  // Linear system of equations
    // Matrix solution:
      /* Original equations: 
      tan.T_F[10] = (burn.T_F0_y-tan.flueWall[10].opa_b.T)*exp( -0.1*(tan.h_cv_F
        *3.14159265358979*tan.DFlu*tan.LFlu)/burn.h_CB.C_dotG)+tan.flueWall[10].opa_b.T;
      tan.flueWall[10].opa.lay[1].T[1]-tan.flueWall[10].opa_b.T =  -
        tan.flueWall[10].opa_b.Q_flow/tan.flueWall[10].opa.lay[1].UAnSta2;
      */
      // Calculation of the J matrix and the b vector,
      // but these calculations are not listed here.
      // To have them listed, set
      //   Advanced.OutputModelicaCodeWithJacobians = true
      // before translation. May give much output,
      // because common subexpression elimination is not activated.

      x := Solve(J, b); // J*x = b
      {tan.T_F[10], tan.convConBou5[10].dT} := x;

    // Torn part
      tan.flueWall[10].opa_b.T := tan.convConBou5[10].dT+tan.T_F[10];
      tan.convConBou5[10].q_flow := 2*tan.convConBou5[10].dT;
      tan.flueWall[10].opa_b.Q_flow :=  -tan.convConBou5[10].A*tan.convConBou5[10].q_flow;
  // End of linear system of equations

  der(tan.flueWall[10].opa.lay[1].T[1]) := (tan.buoHeaTra.QDotFlu[10]+
    tan.flueWall[10].opa_b.Q_flow)/tan.flueWall[10].opa.lay[1].C;

  // Linear system of equations
    // Matrix solution:
      /* Original equations: 
      tan.T_F[9] = (burn.T_F0_y-tan.flueWall[9].opa_b.T)*exp( -0.2*(tan.h_cv_F*
        3.14159265358979*tan.DFlu*tan.LFlu)/burn.h_CB.C_dotG)+tan.flueWall[9].opa_b.T;
      tan.flueWall[9].opa.lay[1].T[1]-tan.flueWall[9].opa_b.T =  -
        tan.flueWall[9].opa_b.Q_flow/tan.flueWall[9].opa.lay[1].UAnSta2;
      */
      // Calculation of the J matrix and the b vector,
      // but these calculations are not listed here.
      // To have them listed, set
      //   Advanced.OutputModelicaCodeWithJacobians = true
      // before translation. May give much output,
      // because common subexpression elimination is not activated.

      x := Solve(J, b); // J*x = b
      {tan.T_F[9], tan.convConBou5[9].dT} := x;

    // Torn part
      tan.flueWall[9].opa_b.T := tan.convConBou5[9].dT+tan.T_F[9];
      tan.convConBou5[9].q_flow := 2*tan.convConBou5[9].dT;
      tan.flueWall[9].opa_b.Q_flow :=  -tan.convConBou5[9].A*tan.convConBou5[9].q_flow;
  // End of linear system of equations

  der(tan.flueWall[9].opa.lay[1].T[1]) := (tan.buoHeaTra.QDotFlu[9]+
    tan.flueWall[9].opa_b.Q_flow)/tan.flueWall[9].opa.lay[1].C;

  // Linear system of equations
    // Matrix solution:
      /* Original equations: 
      tan.T_F[8] = (burn.T_F0_y-tan.flueWall[8].opa_b.T)*exp( -0.3*(tan.h_cv_F*
        3.14159265358979*tan.DFlu*tan.LFlu)/burn.h_CB.C_dotG)+tan.flueWall[8].opa_b.T;
      tan.flueWall[8].opa.lay[1].T[1]-tan.flueWall[8].opa_b.T =  -
        tan.flueWall[8].opa_b.Q_flow/tan.flueWall[8].opa.lay[1].UAnSta2;
      */
      // Calculation of the J matrix and the b vector,
      // but these calculations are not listed here.
      // To have them listed, set
      //   Advanced.OutputModelicaCodeWithJacobians = true
      // before translation. May give much output,
      // because common subexpression elimination is not activated.

      x := Solve(J, b); // J*x = b
      {tan.T_F[8], tan.convConBou5[8].dT} := x;

    // Torn part
      tan.flueWall[8].opa_b.T := tan.convConBou5[8].dT+tan.T_F[8];
      tan.convConBou5[8].q_flow := 2*tan.convConBou5[8].dT;
      tan.flueWall[8].opa_b.Q_flow :=  -tan.convConBou5[8].A*tan.convConBou5[8].q_flow;
  // End of linear system of equations

  der(tan.flueWall[8].opa.lay[1].T[1]) := (tan.buoHeaTra.QDotFlu[8]+
    tan.flueWall[8].opa_b.Q_flow)/tan.flueWall[8].opa.lay[1].C;

  // Linear system of equations
    // Matrix solution:
      /* Original equations: 
      tan.T_F[7] = (burn.T_F0_y-tan.flueWall[7].opa_b.T)*exp( -0.4*(tan.h_cv_F*
        3.14159265358979*tan.DFlu*tan.LFlu)/burn.h_CB.C_dotG)+tan.flueWall[7].opa_b.T;
      tan.flueWall[7].opa.lay[1].T[1]-tan.flueWall[7].opa_b.T =  -
        tan.flueWall[7].opa_b.Q_flow/tan.flueWall[7].opa.lay[1].UAnSta2;
      */
      // Calculation of the J matrix and the b vector,
      // but these calculations are not listed here.
      // To have them listed, set
      //   Advanced.OutputModelicaCodeWithJacobians = true
      // before translation. May give much output,
      // because common subexpression elimination is not activated.

      x := Solve(J, b); // J*x = b
      {tan.T_F[7], tan.convConBou5[7].dT} := x;

    // Torn part
      tan.flueWall[7].opa_b.T := tan.convConBou5[7].dT+tan.T_F[7];
      tan.convConBou5[7].q_flow := 2*tan.convConBou5[7].dT;
      tan.flueWall[7].opa_b.Q_flow :=  -tan.convConBou5[7].A*tan.convConBou5[7].q_flow;
  // End of linear system of equations

  der(tan.flueWall[7].opa.lay[1].T[1]) := (tan.buoHeaTra.QDotFlu[7]+
    tan.flueWall[7].opa_b.Q_flow)/tan.flueWall[7].opa.lay[1].C;

  // Linear system of equations
    // Matrix solution:
      /* Original equations: 
      tan.T_F[6] = (burn.T_F0_y-tan.flueWall[6].opa_b.T)*exp( -0.5*(tan.h_cv_F*
        3.14159265358979*tan.DFlu*tan.LFlu)/burn.h_CB.C_dotG)+tan.flueWall[6].opa_b.T;
      tan.flueWall[6].opa.lay[1].T[1]-tan.flueWall[6].opa_b.T =  -
        tan.flueWall[6].opa_b.Q_flow/tan.flueWall[6].opa.lay[1].UAnSta2;
      */
      // Calculation of the J matrix and the b vector,
      // but these calculations are not listed here.
      // To have them listed, set
      //   Advanced.OutputModelicaCodeWithJacobians = true
      // before translation. May give much output,
      // because common subexpression elimination is not activated.

      x := Solve(J, b); // J*x = b
      {tan.T_F[6], tan.convConBou5[6].dT} := x;

    // Torn part
      tan.flueWall[6].opa_b.T := tan.convConBou5[6].dT+tan.T_F[6];
      tan.convConBou5[6].q_flow := 2*tan.convConBou5[6].dT;
      tan.flueWall[6].opa_b.Q_flow :=  -tan.convConBou5[6].A*tan.convConBou5[6].q_flow;
  // End of linear system of equations

  der(tan.flueWall[6].opa.lay[1].T[1]) := (tan.buoHeaTra.QDotFlu[6]+
    tan.flueWall[6].opa_b.Q_flow)/tan.flueWall[6].opa.lay[1].C;

  // Linear system of equations
    // Matrix solution:
      /* Original equations: 
      tan.T_F[5] = (burn.T_F0_y-tan.flueWall[5].opa_b.T)*exp( -0.6*(tan.h_cv_F*
        3.14159265358979*tan.DFlu*tan.LFlu)/burn.h_CB.C_dotG)+tan.flueWall[5].opa_b.T;
      tan.flueWall[5].opa.lay[1].T[1]-tan.flueWall[5].opa_b.T =  -
        tan.flueWall[5].opa_b.Q_flow/tan.flueWall[5].opa.lay[1].UAnSta2;
      */
      // Calculation of the J matrix and the b vector,
      // but these calculations are not listed here.
      // To have them listed, set
      //   Advanced.OutputModelicaCodeWithJacobians = true
      // before translation. May give much output,
      // because common subexpression elimination is not activated.

      x := Solve(J, b); // J*x = b
      {tan.T_F[5], tan.convConBou5[5].dT} := x;

    // Torn part
      tan.flueWall[5].opa_b.T := tan.convConBou5[5].dT+tan.T_F[5];
      tan.convConBou5[5].q_flow := 2*tan.convConBou5[5].dT;
      tan.flueWall[5].opa_b.Q_flow :=  -tan.convConBou5[5].A*tan.convConBou5[5].q_flow;
  // End of linear system of equations

  der(tan.flueWall[5].opa.lay[1].T[1]) := (tan.buoHeaTra.QDotFlu[5]+
    tan.flueWall[5].opa_b.Q_flow)/tan.flueWall[5].opa.lay[1].C;

  // Linear system of equations
    // Matrix solution:
      /* Original equations: 
      tan.T_F[4] = (burn.T_F0_y-tan.flueWall[4].opa_b.T)*exp( -0.7*(tan.h_cv_F*
        3.14159265358979*tan.DFlu*tan.LFlu)/burn.h_CB.C_dotG)+tan.flueWall[4].opa_b.T;
      tan.flueWall[4].opa.lay[1].T[1]-tan.flueWall[4].opa_b.T =  -
        tan.flueWall[4].opa_b.Q_flow/tan.flueWall[4].opa.lay[1].UAnSta2;
      */
      // Calculation of the J matrix and the b vector,
      // but these calculations are not listed here.
      // To have them listed, set
      //   Advanced.OutputModelicaCodeWithJacobians = true
      // before translation. May give much output,
      // because common subexpression elimination is not activated.

      x := Solve(J, b); // J*x = b
      {tan.T_F[4], tan.convConBou5[4].dT} := x;

    // Torn part
      tan.flueWall[4].opa_b.T := tan.convConBou5[4].dT+tan.T_F[4];
      tan.convConBou5[4].q_flow := 2*tan.convConBou5[4].dT;
      tan.flueWall[4].opa_b.Q_flow :=  -tan.convConBou5[4].A*tan.convConBou5[4].q_flow;
  // End of linear system of equations

  der(tan.flueWall[4].opa.lay[1].T[1]) := (tan.buoHeaTra.QDotFlu[4]+
    tan.flueWall[4].opa_b.Q_flow)/tan.flueWall[4].opa.lay[1].C;

  // Linear system of equations
    // Matrix solution:
      /* Original equations: 
      tan.T_F[3] = (burn.T_F0_y-tan.flueWall[3].opa_b.T)*exp( -0.8*(tan.h_cv_F*
        3.14159265358979*tan.DFlu*tan.LFlu)/burn.h_CB.C_dotG)+tan.flueWall[3].opa_b.T;
      tan.flueWall[3].opa.lay[1].T[1]-tan.flueWall[3].opa_b.T =  -
        tan.flueWall[3].opa_b.Q_flow/tan.flueWall[3].opa.lay[1].UAnSta2;
      */
      // Calculation of the J matrix and the b vector,
      // but these calculations are not listed here.
      // To have them listed, set
      //   Advanced.OutputModelicaCodeWithJacobians = true
      // before translation. May give much output,
      // because common subexpression elimination is not activated.

      x := Solve(J, b); // J*x = b
      {tan.T_F[3], tan.convConBou5[3].dT} := x;

    // Torn part
      tan.flueWall[3].opa_b.T := tan.convConBou5[3].dT+tan.T_F[3];
      tan.convConBou5[3].q_flow := 2*tan.convConBou5[3].dT;
      tan.flueWall[3].opa_b.Q_flow :=  -tan.convConBou5[3].A*tan.convConBou5[3].q_flow;
  // End of linear system of equations

  der(tan.flueWall[3].opa.lay[1].T[1]) := (tan.buoHeaTra.QDotFlu[3]+
    tan.flueWall[3].opa_b.Q_flow)/tan.flueWall[3].opa.lay[1].C;

  // Linear system of equations
    // Matrix solution:
      /* Original equations: 
      tan.T_F[2] = (burn.T_F0_y-tan.flueWall[2].opa_b.T)*exp( -0.9*(tan.h_cv_F*
        3.14159265358979*tan.DFlu*tan.LFlu)/burn.h_CB.C_dotG)+tan.flueWall[2].opa_b.T;
      tan.flueWall[2].opa.lay[1].T[1]-tan.flueWall[2].opa_b.T =  -
        tan.flueWall[2].opa_b.Q_flow/tan.flueWall[2].opa.lay[1].UAnSta2;
      */
      // Calculation of the J matrix and the b vector,
      // but these calculations are not listed here.
      // To have them listed, set
      //   Advanced.OutputModelicaCodeWithJacobians = true
      // before translation. May give much output,
      // because common subexpression elimination is not activated.

      x := Solve(J, b); // J*x = b
      {tan.T_F[2], tan.convConBou5[2].dT} := x;

    // Torn part
      tan.flueWall[2].opa_b.T := tan.convConBou5[2].dT+tan.T_F[2];
      tan.convConBou5[2].q_flow := 2*tan.convConBou5[2].dT;
      tan.flueWall[2].opa_b.Q_flow :=  -tan.convConBou5[2].A*tan.convConBou5[2].q_flow;
  // End of linear system of equations

  der(tan.flueWall[2].opa.lay[1].T[1]) := (tan.buoHeaTra.QDotFlu[2]+
    tan.flueWall[2].opa_b.Q_flow)/tan.flueWall[2].opa.lay[1].C;

  // Linear system of equations
    // Matrix solution:
      /* Original equations: 
      tan.T_F[1] = (burn.T_F0_y-tan.flueWall[1].opa_b.T)*exp( -tan.h_cv_F*
        3.14159265358979*tan.DFlu*tan.LFlu/burn.h_CB.C_dotG)+tan.flueWall[1].opa_b.T;
      tan.flueWall[1].opa.lay[1].T[1]-tan.flueWall[1].opa_b.T =  -
        tan.flueWall[1].opa_b.Q_flow/tan.flueWall[1].opa.lay[1].UAnSta2;
      */
      // Calculation of the J matrix and the b vector,
      // but these calculations are not listed here.
      // To have them listed, set
      //   Advanced.OutputModelicaCodeWithJacobians = true
      // before translation. May give much output,
      // because common subexpression elimination is not activated.

      x := Solve(J, b); // J*x = b
      {tan.T_F[1], tan.convConBou5[1].dT} := x;

    // Torn part
      tan.flueWall[1].opa_b.T := tan.convConBou5[1].dT+tan.T_F[1];
      tan.convConBou5[1].q_flow := 2*tan.convConBou5[1].dT;
      tan.flueWall[1].opa_b.Q_flow :=  -tan.convConBou5[1].A*tan.convConBou5[1].q_flow;
  // End of linear system of equations

  der(tan.flueWall[1].opa.lay[1].T[1]) := (tan.buoHeaTra.QDotFlu[1]+
    tan.flueWall[1].opa_b.Q_flow)/tan.flueWall[1].opa.lay[1].C;
  der(tan.conOpa3.opa.lay[1].T[1]) := (tan.conOpa3.opa_a.Q_flow+burn.Q_B)/
    tan.conOpa3.opa.lay[1].C;

// -----------------------------------------------------------------------------

// Accepted Section
  tan.vol[1].dynBal.medium.T := Modelica.Media.Water.IF97_Utilities.T_props_ph(
    tan.vol[1].dynBal.medium.p, 
    tan.vol[1].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[1].dynBal.medium.p,
       tan.vol[1].dynBal.medium.h, tan.vol[1].dynBal.medium.state.phase, 0));
  assert(tan.vol[1].dynBal.medium.p >= 0.0, "Pressure (= "+       String(
    tan.vol[1].dynBal.medium.p, true, 0)+" Pa) of medium \""+"WaterIF97"+
    "\" is negative\n(Temperature = "+       String(tan.vol[1].dynBal.medium.T, 
    true, 0)+" K)");
  tan.vol[2].dynBal.medium.T := Modelica.Media.Water.IF97_Utilities.T_props_ph(
    tan.vol[2].dynBal.medium.p, 
    tan.vol[2].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[2].dynBal.medium.p,
       tan.vol[2].dynBal.medium.h, tan.vol[2].dynBal.medium.state.phase, 0));
  assert(tan.vol[2].dynBal.medium.p >= 0.0, "Pressure (= "+       String(
    tan.vol[2].dynBal.medium.p, true, 0)+" Pa) of medium \""+"WaterIF97"+
    "\" is negative\n(Temperature = "+       String(tan.vol[2].dynBal.medium.T, 
    true, 0)+" K)");
  tan.vol[3].dynBal.medium.T := Modelica.Media.Water.IF97_Utilities.T_props_ph(
    tan.vol[3].dynBal.medium.p, 
    tan.vol[3].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[3].dynBal.medium.p,
       tan.vol[3].dynBal.medium.h, tan.vol[3].dynBal.medium.state.phase, 0));
  assert(tan.vol[3].dynBal.medium.p >= 0.0, "Pressure (= "+       String(
    tan.vol[3].dynBal.medium.p, true, 0)+" Pa) of medium \""+"WaterIF97"+
    "\" is negative\n(Temperature = "+       String(tan.vol[3].dynBal.medium.T, 
    true, 0)+" K)");
  tan.vol[4].dynBal.medium.T := Modelica.Media.Water.IF97_Utilities.T_props_ph(
    tan.vol[4].dynBal.medium.p, 
    tan.vol[4].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[4].dynBal.medium.p,
       tan.vol[4].dynBal.medium.h, tan.vol[4].dynBal.medium.state.phase, 0));
  assert(tan.vol[4].dynBal.medium.p >= 0.0, "Pressure (= "+       String(
    tan.vol[4].dynBal.medium.p, true, 0)+" Pa) of medium \""+"WaterIF97"+
    "\" is negative\n(Temperature = "+       String(tan.vol[4].dynBal.medium.T, 
    true, 0)+" K)");
  tan.vol[5].dynBal.medium.T := Modelica.Media.Water.IF97_Utilities.T_props_ph(
    tan.vol[5].dynBal.medium.p, 
    tan.vol[5].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[5].dynBal.medium.p,
       tan.vol[5].dynBal.medium.h, tan.vol[5].dynBal.medium.state.phase, 0));
  assert(tan.vol[5].dynBal.medium.p >= 0.0, "Pressure (= "+       String(
    tan.vol[5].dynBal.medium.p, true, 0)+" Pa) of medium \""+"WaterIF97"+
    "\" is negative\n(Temperature = "+       String(tan.vol[5].dynBal.medium.T, 
    true, 0)+" K)");
  tan.vol[6].dynBal.medium.T := Modelica.Media.Water.IF97_Utilities.T_props_ph(
    tan.vol[6].dynBal.medium.p, 
    tan.vol[6].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[6].dynBal.medium.p,
       tan.vol[6].dynBal.medium.h, tan.vol[6].dynBal.medium.state.phase, 0));
  assert(tan.vol[6].dynBal.medium.p >= 0.0, "Pressure (= "+       String(
    tan.vol[6].dynBal.medium.p, true, 0)+" Pa) of medium \""+"WaterIF97"+
    "\" is negative\n(Temperature = "+       String(tan.vol[6].dynBal.medium.T, 
    true, 0)+" K)");
  tan.vol[7].dynBal.medium.T := Modelica.Media.Water.IF97_Utilities.T_props_ph(
    tan.vol[7].dynBal.medium.p, 
    tan.vol[7].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[7].dynBal.medium.p,
       tan.vol[7].dynBal.medium.h, tan.vol[7].dynBal.medium.state.phase, 0));
  assert(tan.vol[7].dynBal.medium.p >= 0.0, "Pressure (= "+       String(
    tan.vol[7].dynBal.medium.p, true, 0)+" Pa) of medium \""+"WaterIF97"+
    "\" is negative\n(Temperature = "+       String(tan.vol[7].dynBal.medium.T, 
    true, 0)+" K)");
  tan.vol[8].dynBal.medium.T := Modelica.Media.Water.IF97_Utilities.T_props_ph(
    tan.vol[8].dynBal.medium.p, 
    tan.vol[8].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[8].dynBal.medium.p,
       tan.vol[8].dynBal.medium.h, tan.vol[8].dynBal.medium.state.phase, 0));
  assert(tan.vol[8].dynBal.medium.p >= 0.0, "Pressure (= "+       String(
    tan.vol[8].dynBal.medium.p, true, 0)+" Pa) of medium \""+"WaterIF97"+
    "\" is negative\n(Temperature = "+       String(tan.vol[8].dynBal.medium.T, 
    true, 0)+" K)");
  tan.vol[9].dynBal.medium.T := Modelica.Media.Water.IF97_Utilities.T_props_ph(
    tan.vol[9].dynBal.medium.p, 
    tan.vol[9].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[9].dynBal.medium.p,
       tan.vol[9].dynBal.medium.h, tan.vol[9].dynBal.medium.state.phase, 0));
  assert(tan.vol[9].dynBal.medium.p >= 0.0, "Pressure (= "+       String(
    tan.vol[9].dynBal.medium.p, true, 0)+" Pa) of medium \""+"WaterIF97"+
    "\" is negative\n(Temperature = "+       String(tan.vol[9].dynBal.medium.T, 
    true, 0)+" K)");
  tan.vol[10].dynBal.medium.T := Modelica.Media.Water.IF97_Utilities.T_props_ph(
    tan.vol[10].dynBal.medium.p, 
    tan.vol[10].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[10].dynBal.medium.p,
       tan.vol[10].dynBal.medium.h, tan.vol[10].dynBal.medium.state.phase, 0));
  assert(tan.vol[10].dynBal.medium.p >= 0.0, "Pressure (= "+       String(
    tan.vol[10].dynBal.medium.p, true, 0)+" Pa) of medium \""+"WaterIF97"+
    "\" is negative\n(Temperature = "+       String(tan.vol[10].dynBal.medium.T,
     true, 0)+" K)");

// -----------------------------------------------------------------------------

// Conditionally Accepted Section
  tan.vol[7].dynBal.medium.u := tan.vol[7].dynBal.medium.h-tan.vol[7].dynBal.medium.p
    /tan.vol[7].dynBal.medium.d;
  tan.vol[7].dynBal.U := tan.vol[7].dynBal.m*tan.vol[7].dynBal.medium.u;
  tan.vol[1].dynBal.medium.u := tan.vol[1].dynBal.medium.h-tan.vol[1].dynBal.medium.p
    /tan.vol[1].dynBal.medium.d;
  tan.vol[1].dynBal.U := tan.vol[1].dynBal.m*tan.vol[1].dynBal.medium.u;
  tan.vol[2].dynBal.medium.u := tan.vol[2].dynBal.medium.h-tan.vol[2].dynBal.medium.p
    /tan.vol[2].dynBal.medium.d;
  tan.vol[2].dynBal.U := tan.vol[2].dynBal.m*tan.vol[2].dynBal.medium.u;
  tan.vol[3].dynBal.medium.u := tan.vol[3].dynBal.medium.h-tan.vol[3].dynBal.medium.p
    /tan.vol[3].dynBal.medium.d;
  tan.vol[3].dynBal.U := tan.vol[3].dynBal.m*tan.vol[3].dynBal.medium.u;
  tan.vol[4].dynBal.medium.u := tan.vol[4].dynBal.medium.h-tan.vol[4].dynBal.medium.p
    /tan.vol[4].dynBal.medium.d;
  tan.vol[4].dynBal.U := tan.vol[4].dynBal.m*tan.vol[4].dynBal.medium.u;
  tan.vol[5].dynBal.medium.u := tan.vol[5].dynBal.medium.h-tan.vol[5].dynBal.medium.p
    /tan.vol[5].dynBal.medium.d;
  tan.vol[5].dynBal.U := tan.vol[5].dynBal.m*tan.vol[5].dynBal.medium.u;
  tan.vol[6].dynBal.medium.u := tan.vol[6].dynBal.medium.h-tan.vol[6].dynBal.medium.p
    /tan.vol[6].dynBal.medium.d;
  tan.vol[6].dynBal.U := tan.vol[6].dynBal.m*tan.vol[6].dynBal.medium.u;
  tan.vol[9].dynBal.medium.u := tan.vol[9].dynBal.medium.h-tan.vol[9].dynBal.medium.p
    /tan.vol[9].dynBal.medium.d;
  tan.vol[9].dynBal.U := tan.vol[9].dynBal.m*tan.vol[9].dynBal.medium.u;
  tan.vol[8].dynBal.medium.u := tan.vol[8].dynBal.medium.h-tan.vol[8].dynBal.medium.p
    /tan.vol[8].dynBal.medium.d;
  tan.vol[8].dynBal.U := tan.vol[8].dynBal.m*tan.vol[8].dynBal.medium.u;
  tan.vol[10].dynBal.medium.u := tan.vol[10].dynBal.medium.h-tan.vol[10].dynBal.medium.p
    /tan.vol[10].dynBal.medium.d;
  tan.vol[10].dynBal.U := tan.vol[10].dynBal.m*tan.vol[10].dynBal.medium.u;
  der(tan.vol[1].dynBal.medium.T) := Modelica.Media.Water.IF97_Utilities.T_ph_der
    (
    tan.vol[1].dynBal.medium.p, 
    tan.vol[1].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[1].dynBal.medium.p,
       tan.vol[1].dynBal.medium.h, tan.vol[1].dynBal.medium.state.phase, 0), 
    der(tan.vol[1].dynBal.medium.p), 
    der(tan.vol[1].dynBal.medium.h));
  der(tan.vol[2].dynBal.medium.T) := Modelica.Media.Water.IF97_Utilities.T_ph_der
    (
    tan.vol[2].dynBal.medium.p, 
    tan.vol[2].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[2].dynBal.medium.p,
       tan.vol[2].dynBal.medium.h, tan.vol[2].dynBal.medium.state.phase, 0), 
    der(tan.vol[2].dynBal.medium.p), 
    der(tan.vol[2].dynBal.medium.h));
  der(tan.vol[3].dynBal.medium.T) := Modelica.Media.Water.IF97_Utilities.T_ph_der
    (
    tan.vol[3].dynBal.medium.p, 
    tan.vol[3].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[3].dynBal.medium.p,
       tan.vol[3].dynBal.medium.h, tan.vol[3].dynBal.medium.state.phase, 0), 
    der(tan.vol[3].dynBal.medium.p), 
    der(tan.vol[3].dynBal.medium.h));
  der(tan.vol[4].dynBal.medium.T) := Modelica.Media.Water.IF97_Utilities.T_ph_der
    (
    tan.vol[4].dynBal.medium.p, 
    tan.vol[4].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[4].dynBal.medium.p,
       tan.vol[4].dynBal.medium.h, tan.vol[4].dynBal.medium.state.phase, 0), 
    der(tan.vol[4].dynBal.medium.p), 
    der(tan.vol[4].dynBal.medium.h));
  der(tan.vol[5].dynBal.medium.T) := Modelica.Media.Water.IF97_Utilities.T_ph_der
    (
    tan.vol[5].dynBal.medium.p, 
    tan.vol[5].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[5].dynBal.medium.p,
       tan.vol[5].dynBal.medium.h, tan.vol[5].dynBal.medium.state.phase, 0), 
    der(tan.vol[5].dynBal.medium.p), 
    der(tan.vol[5].dynBal.medium.h));
  der(tan.vol[6].dynBal.medium.T) := Modelica.Media.Water.IF97_Utilities.T_ph_der
    (
    tan.vol[6].dynBal.medium.p, 
    tan.vol[6].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[6].dynBal.medium.p,
       tan.vol[6].dynBal.medium.h, tan.vol[6].dynBal.medium.state.phase, 0), 
    der(tan.vol[6].dynBal.medium.p), 
    der(tan.vol[6].dynBal.medium.h));
  der(tan.vol[7].dynBal.medium.T) := Modelica.Media.Water.IF97_Utilities.T_ph_der
    (
    tan.vol[7].dynBal.medium.p, 
    tan.vol[7].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[7].dynBal.medium.p,
       tan.vol[7].dynBal.medium.h, tan.vol[7].dynBal.medium.state.phase, 0), 
    der(tan.vol[7].dynBal.medium.p), 
    der(tan.vol[7].dynBal.medium.h));
  der(tan.vol[8].dynBal.medium.T) := Modelica.Media.Water.IF97_Utilities.T_ph_der
    (
    tan.vol[8].dynBal.medium.p, 
    tan.vol[8].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[8].dynBal.medium.p,
       tan.vol[8].dynBal.medium.h, tan.vol[8].dynBal.medium.state.phase, 0), 
    der(tan.vol[8].dynBal.medium.p), 
    der(tan.vol[8].dynBal.medium.h));
  der(tan.vol[9].dynBal.medium.T) := Modelica.Media.Water.IF97_Utilities.T_ph_der
    (
    tan.vol[9].dynBal.medium.p, 
    tan.vol[9].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[9].dynBal.medium.p,
       tan.vol[9].dynBal.medium.h, tan.vol[9].dynBal.medium.state.phase, 0), 
    der(tan.vol[9].dynBal.medium.p), 
    der(tan.vol[9].dynBal.medium.h));
  der(tan.vol[10].dynBal.medium.T) := Modelica.Media.Water.IF97_Utilities.T_ph_der
    (
    tan.vol[10].dynBal.medium.p, 
    tan.vol[10].dynBal.medium.h, 
    Modelica.Media.Water.IF97_Utilities.waterBaseProp_ph(tan.vol[10].dynBal.medium.p,
       tan.vol[10].dynBal.medium.h, tan.vol[10].dynBal.medium.state.phase, 0), 
    der(tan.vol[10].dynBal.medium.p), 
    der(tan.vol[10].dynBal.medium.h));
  tan.flueWall[1].opa.dT := tan.flueWall[1].opa_a.T-tan.flueWall[1].opa_b.T;
  tan.flueWall[2].opa.dT := tan.flueWall[2].opa_a.T-tan.flueWall[2].opa_b.T;
  tan.flueWall[3].opa.dT := tan.flueWall[3].opa_a.T-tan.flueWall[3].opa_b.T;
  tan.flueWall[4].opa.dT := tan.flueWall[4].opa_a.T-tan.flueWall[4].opa_b.T;
  tan.flueWall[5].opa.dT := tan.flueWall[5].opa_a.T-tan.flueWall[5].opa_b.T;
  tan.flueWall[6].opa.dT := tan.flueWall[6].opa_a.T-tan.flueWall[6].opa_b.T;
  tan.flueWall[7].opa.dT := tan.flueWall[7].opa_a.T-tan.flueWall[7].opa_b.T;
  tan.flueWall[8].opa.dT := tan.flueWall[8].opa_a.T-tan.flueWall[8].opa_b.T;
  tan.flueWall[9].opa.dT := tan.flueWall[9].opa_a.T-tan.flueWall[9].opa_b.T;
  tan.flueWall[10].opa.dT := tan.flueWall[10].opa_a.T-tan.flueWall[10].opa_b.T;
  tan.conExt[1].opa.dT := tan.conExt[1].opa_a.T-tan.conExt[1].opa_b.T;
  tan.conExt[2].opa.dT := tan.conExt[2].opa_a.T-tan.conExt[2].opa_b.T;
  tan.conExt[3].opa.dT := tan.conExt[3].opa_a.T-tan.conExt[3].opa_b.T;
  tan.conExt[4].opa.dT := tan.conExt[4].opa_a.T-tan.conExt[4].opa_b.T;
  tan.conExt[5].opa.dT := tan.conExt[5].opa_a.T-tan.conExt[5].opa_b.T;
  tan.conExt[6].opa.dT := tan.conExt[6].opa_a.T-tan.conExt[6].opa_b.T;
  tan.conExt[7].opa.dT := tan.conExt[7].opa_a.T-tan.conExt[7].opa_b.T;
  tan.conExt[8].opa.dT := tan.conExt[8].opa_a.T-tan.conExt[8].opa_b.T;
  tan.conExt[9].opa.dT := tan.conExt[9].opa_a.T-tan.conExt[9].opa_b.T;
  tan.conExt[10].opa.dT := tan.conExt[10].opa_a.T-tan.conExt[10].opa_b.T;
  tan.conOpa.opa.dT := tan.conOpa.opa_a.T-tan.conOpa.opa_b.T;
  tan.conOpa3.opa.dT := tan.conOpa3.opa_a.T-burn.heaPorTop.T;
  tan.T_WL_mean := 0.1*(tan.flueWall[1].opa_b.T+tan.flueWall[2].opa_b.T+
    tan.flueWall[3].opa_b.T+tan.flueWall[4].opa_b.T+tan.flueWall[5].opa_b.T+
    tan.flueWall[6].opa_b.T+tan.flueWall[7].opa_b.T+tan.flueWall[8].opa_b.T+
    tan.flueWall[9].opa_b.T+tan.flueWall[10].opa_b.T);
  tan.theCol.port_a[1].Q_flow := tan.convConBou9[1].Q_flow-tan.convConBou8[1].Q_flow;
  tan.theCol.port_a[2].Q_flow := tan.convConBou9[2].Q_flow-tan.convConBou8[2].Q_flow;
  tan.theCol.port_a[3].Q_flow := tan.convConBou9[3].Q_flow-tan.convConBou8[3].Q_flow;
  tan.theCol.port_a[4].Q_flow := tan.convConBou9[4].Q_flow-tan.convConBou8[4].Q_flow;
  tan.theCol.port_a[5].Q_flow := tan.convConBou9[5].Q_flow-tan.convConBou8[5].Q_flow;
  tan.theCol.port_a[6].Q_flow := tan.convConBou9[6].Q_flow-tan.convConBou8[6].Q_flow;
  tan.theCol.port_a[7].Q_flow := tan.convConBou9[7].Q_flow-tan.convConBou8[7].Q_flow;
  tan.theCol.port_a[8].Q_flow := tan.convConBou9[8].Q_flow-tan.convConBou8[8].Q_flow;
  tan.theCol.port_a[9].Q_flow := tan.convConBou9[9].Q_flow-tan.convConBou8[9].Q_flow;
  tan.theCol.port_a[10].Q_flow := tan.convConBou9[10].Q_flow-tan.convConBou8[10].Q_flow;
  tan.theCol.port_b.Q_flow :=  -(tan.theCol.port_a[1].Q_flow+tan.theCol.port_a[2].Q_flow
    +tan.theCol.port_a[3].Q_flow+tan.theCol.port_a[4].Q_flow+tan.theCol.port_a[5].Q_flow
    +tan.theCol.port_a[6].Q_flow+tan.theCol.port_a[7].Q_flow+tan.theCol.port_a[8].Q_flow
    +tan.theCol.port_a[9].Q_flow+tan.theCol.port_a[10].Q_flow);
  tan.Tair.port.Q_flow := tan.convConBou10.Q_flow-tan.theCol.port_b.Q_flow;
  tan.flueWall[1].opa.lay[1].dT := tan.flueWall[1].opa_a.T-tan.flueWall[1].opa_b.T;
  tan.flueWall[2].opa.lay[1].dT := tan.flueWall[2].opa_a.T-tan.flueWall[2].opa_b.T;
  tan.flueWall[3].opa.lay[1].dT := tan.flueWall[3].opa_a.T-tan.flueWall[3].opa_b.T;
  tan.flueWall[4].opa.lay[1].dT := tan.flueWall[4].opa_a.T-tan.flueWall[4].opa_b.T;
  tan.flueWall[5].opa.lay[1].dT := tan.flueWall[5].opa_a.T-tan.flueWall[5].opa_b.T;
  tan.flueWall[6].opa.lay[1].dT := tan.flueWall[6].opa_a.T-tan.flueWall[6].opa_b.T;
  tan.flueWall[7].opa.lay[1].dT := tan.flueWall[7].opa_a.T-tan.flueWall[7].opa_b.T;
  tan.flueWall[8].opa.lay[1].dT := tan.flueWall[8].opa_a.T-tan.flueWall[8].opa_b.T;
  tan.flueWall[9].opa.lay[1].dT := tan.flueWall[9].opa_a.T-tan.flueWall[9].opa_b.T;
  tan.flueWall[10].opa.lay[1].dT := tan.flueWall[10].opa_a.T-tan.flueWall[10].opa_b.T;
  tan.conExt[1].opa.lay[1].dT := tan.conExt[1].opa_a.T-tan.conExt[1].opa.lay[1].port_b.T;
  tan.conExt[1].opa.lay[2].dT := tan.conExt[1].opa.lay[1].port_b.T-
    tan.conExt[1].opa_b.T;
  tan.conExt[2].opa.lay[1].dT := tan.conExt[2].opa_a.T-tan.conExt[2].opa.lay[1].port_b.T;
  tan.conExt[2].opa.lay[2].dT := tan.conExt[2].opa.lay[1].port_b.T-
    tan.conExt[2].opa_b.T;
  tan.conExt[3].opa.lay[1].dT := tan.conExt[3].opa_a.T-tan.conExt[3].opa.lay[1].port_b.T;
  tan.conExt[3].opa.lay[2].dT := tan.conExt[3].opa.lay[1].port_b.T-
    tan.conExt[3].opa_b.T;
  tan.conExt[4].opa.lay[1].dT := tan.conExt[4].opa_a.T-tan.conExt[4].opa.lay[1].port_b.T;
  tan.conExt[4].opa.lay[2].dT := tan.conExt[4].opa.lay[1].port_b.T-
    tan.conExt[4].opa_b.T;
  tan.conExt[5].opa.lay[1].dT := tan.conExt[5].opa_a.T-tan.conExt[5].opa.lay[1].port_b.T;
  tan.conExt[5].opa.lay[2].dT := tan.conExt[5].opa.lay[1].port_b.T-
    tan.conExt[5].opa_b.T;
  tan.conExt[6].opa.lay[1].dT := tan.conExt[6].opa_a.T-tan.conExt[6].opa.lay[1].port_b.T;
  tan.conExt[6].opa.lay[2].dT := tan.conExt[6].opa.lay[1].port_b.T-
    tan.conExt[6].opa_b.T;
  tan.conExt[7].opa.lay[1].dT := tan.conExt[7].opa_a.T-tan.conExt[7].opa.lay[1].port_b.T;
  tan.conExt[7].opa.lay[2].dT := tan.conExt[7].opa.lay[1].port_b.T-
    tan.conExt[7].opa_b.T;
  tan.conExt[8].opa.lay[1].dT := tan.conExt[8].opa_a.T-tan.conExt[8].opa.lay[1].port_b.T;
  tan.conExt[8].opa.lay[2].dT := tan.conExt[8].opa.lay[1].port_b.T-
    tan.conExt[8].opa_b.T;
  tan.conExt[9].opa.lay[1].dT := tan.conExt[9].opa_a.T-tan.conExt[9].opa.lay[1].port_b.T;
  tan.conExt[9].opa.lay[2].dT := tan.conExt[9].opa.lay[1].port_b.T-
    tan.conExt[9].opa_b.T;
  tan.conExt[10].opa.lay[1].dT := tan.conExt[10].opa_a.T-tan.conExt[10].opa.lay[1].port_b.T;
  tan.conExt[10].opa.lay[2].dT := tan.conExt[10].opa.lay[1].port_b.T-
    tan.conExt[10].opa_b.T;
  tan.vol[1].dynBal.medium.T_degC := tan.vol[1].dynBal.medium.T-273.15;
  tan.vol[1].dynBal.medium.p_bar := 1E-005*tan.vol[1].dynBal.medium.p;
  tan.vol[1].dynBal.medium.sat.Tsat := Modelica.Media.Water.IF97_Utilities.BaseIF97.Basic.tsat
    (tan.vol[1].dynBal.medium.p);
  tan.vol[2].dynBal.medium.T_degC := tan.vol[2].dynBal.medium.T-273.15;
  tan.vol[2].dynBal.medium.p_bar := 1E-005*tan.vol[2].dynBal.medium.p;
  tan.vol[2].dynBal.medium.sat.Tsat := Modelica.Media.Water.IF97_Utilities.BaseIF97.Basic.tsat
    (tan.vol[2].dynBal.medium.p);
  tan.vol[3].dynBal.medium.T_degC := tan.vol[3].dynBal.medium.T-273.15;
  tan.vol[3].dynBal.medium.p_bar := 1E-005*tan.vol[3].dynBal.medium.p;
  tan.vol[3].dynBal.medium.sat.Tsat := Modelica.Media.Water.IF97_Utilities.BaseIF97.Basic.tsat
    (tan.vol[3].dynBal.medium.p);
  tan.vol[4].dynBal.medium.T_degC := tan.vol[4].dynBal.medium.T-273.15;
  tan.vol[4].dynBal.medium.p_bar := 1E-005*tan.vol[4].dynBal.medium.p;
  tan.vol[4].dynBal.medium.sat.Tsat := Modelica.Media.Water.IF97_Utilities.BaseIF97.Basic.tsat
    (tan.vol[4].dynBal.medium.p);
  tan.vol[5].dynBal.medium.T_degC := tan.vol[5].dynBal.medium.T-273.15;
  tan.vol[5].dynBal.medium.p_bar := 1E-005*tan.vol[5].dynBal.medium.p;
  tan.vol[5].dynBal.medium.sat.Tsat := Modelica.Media.Water.IF97_Utilities.BaseIF97.Basic.tsat
    (tan.vol[5].dynBal.medium.p);
  tan.vol[6].dynBal.medium.T_degC := tan.vol[6].dynBal.medium.T-273.15;
  tan.vol[6].dynBal.medium.p_bar := 1E-005*tan.vol[6].dynBal.medium.p;
  tan.vol[6].dynBal.medium.sat.Tsat := Modelica.Media.Water.IF97_Utilities.BaseIF97.Basic.tsat
    (tan.vol[6].dynBal.medium.p);
  tan.vol[7].dynBal.medium.T_degC := tan.vol[7].dynBal.medium.T-273.15;
  tan.vol[7].dynBal.medium.p_bar := 1E-005*tan.vol[7].dynBal.medium.p;
  tan.vol[7].dynBal.medium.sat.Tsat := Modelica.Media.Water.IF97_Utilities.BaseIF97.Basic.tsat
    (tan.vol[7].dynBal.medium.p);
  tan.vol[8].dynBal.medium.T_degC := tan.vol[8].dynBal.medium.T-273.15;
  tan.vol[8].dynBal.medium.p_bar := 1E-005*tan.vol[8].dynBal.medium.p;
  tan.vol[8].dynBal.medium.sat.Tsat := Modelica.Media.Water.IF97_Utilities.BaseIF97.Basic.tsat
    (tan.vol[8].dynBal.medium.p);
  tan.vol[9].dynBal.medium.T_degC := tan.vol[9].dynBal.medium.T-273.15;
  tan.vol[9].dynBal.medium.p_bar := 1E-005*tan.vol[9].dynBal.medium.p;
  tan.vol[9].dynBal.medium.sat.Tsat := Modelica.Media.Water.IF97_Utilities.BaseIF97.Basic.tsat
    (tan.vol[9].dynBal.medium.p);
  tan.vol[10].dynBal.medium.T_degC := tan.vol[10].dynBal.medium.T-273.15;
  tan.vol[10].dynBal.medium.p_bar := 1E-005*tan.vol[10].dynBal.medium.p;
  tan.vol[10].dynBal.medium.sat.Tsat := Modelica.Media.Water.IF97_Utilities.BaseIF97.Basic.tsat
    (tan.vol[10].dynBal.medium.p);
  tan.conOpa.opa.lay[1].dT := tan.conOpa.opa_a.T-tan.conOpa.opa.lay[1].port_b.T;
  tan.conOpa.opa.lay[2].dT := tan.conOpa.opa.lay[1].port_b.T-tan.conOpa.opa_b.T;
  tan.conOpa3.opa.lay[1].dT := tan.conOpa3.opa_a.T-burn.heaPorTop.T;
  burn.T_AD_flame.switch1.u2 := add.y > burn.T_AD_flame.const1.k;
  burn.T_AD_flame.switch1.y := (if burn.T_AD_flame.switch1.u2 then 
    burn.T_AD_flame.y else burn.T_AD_flame.const2.k);

// -----------------------------------------------------------------------------

// Eliminated alias variables
  // To have eliminated alias variables listed, set
  //   Advanced.OutputModelicaCodeWithAliasVariables = true
  // before translation. May give much output.
